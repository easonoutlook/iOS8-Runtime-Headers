/* Generated by RuntimeBrowser.
   Image: /System/Library/PrivateFrameworks/StoreKitUI.framework/StoreKitUI
 */

@class SKUILayoutCache, <SKUIStorePageSectionsDelegate>, SKUIStorePageSplitsDescription, SKUIMetricsController, NSMapTable, SKUIColorScheme, NSValue, UICollectionView, NSArray, SKUIStackedBar, SKUIProductPageOverlayController, NSMutableArray, SKUIResourceLoader;

@interface SKUIStorePageSectionsViewController : SKUIViewController <SKUILayoutCacheDelegate, SKUIProductPageOverlayDelegate, SKUIResourceLoaderDelegate, SKUIStorePageCollectionViewDelegate, SKUIViewControllerTesting, UICollectionViewDataSource> {
    SKUIProductPageOverlayController *_activeOverlayController;
    UICollectionView *_collectionView;
    SKUIColorScheme *_colorScheme;
    struct UIEdgeInsets { 
        float top; 
        float left; 
        float bottom; 
        float right; 
    } _contentInsetAdjustments;
    id _deferredSplitsDescription;
    <SKUIStorePageSectionsDelegate> *_delegate;
    BOOL _delegateWantsDidScroll;
    BOOL _didInitialReload;
    int _ignoreSectionsChangeCount;
    NSArray *_initialOverlayURLs;
    NSValue *_lastKnownSize;
    int _layoutStyle;
    NSMapTable *_menuSectionContexts;
    SKUIMetricsController *_metricsController;
    SKUIProductPageOverlayController *_overlayController;
    int _pinningStyle;
    BOOL _rendersWithPerspective;
    SKUIResourceLoader *_resourceLoader;
    NSMutableArray *_sections;
    SKUIStorePageSplitsDescription *_splitsDescription;
    SKUILayoutCache *_textLayoutCache;
    SKUIStackedBar *_stackedBar;
}

@property(readonly) UICollectionView * collectionView;
@property(copy) SKUIColorScheme * colorScheme;
@property <SKUIStorePageSectionsDelegate> * delegate;
@property(retain) SKUIMetricsController * metricsController;
@property int pinningStyle;
@property(readonly) NSArray * sections;
@property(getter=isDisplayingOverlays,readonly) BOOL displayingOverlays;

+ (id)viewControllerWithRestorationIdentifierPath:(id)arg1 coder:(id)arg2;

- (int)pinningStyle;
- (id)_newSectionsWithPageComponents:(id)arg1;
- (id)_visibleMetricsImpressionsString;
- (void)_updateSectionsForIndex:(int)arg1 menuSection:(id)arg2;
- (void)_setSelectedIndex:(int)arg1 forMenuSection:(id)arg2;
- (void)_setRendersWithPerspective:(BOOL)arg1;
- (void)_pageSectionDidDismissOverlayController:(id)arg1;
- (void)_insertSectionsWithComponents:(id)arg1 afterSection:(id)arg2;
- (void)_endIgnoringSectionChanges;
- (void)_beginIgnoringSectionChanges;
- (void)itemCollectionView:(id)arg1 didTapVideoForCollectionViewCell:(id)arg2;
- (void)itemCollectionView:(id)arg1 didConfirmItemOfferForCell:(id)arg2;
- (void)artworkLoaderDidIdle:(id)arg1;
- (void)collectionView:(id)arg1 editorialView:(id)arg2 didSelectLink:(id)arg3;
- (id)SKUIStackedBar;
- (void)showOverlayWithProductPage:(id)arg1 metricsPageEvent:(id)arg2;
- (void)setSKUIStackedBar:(id)arg1;
- (void)setSectionsWithPageComponents:(id)arg1;
- (void)setMetricsController:(id)arg1;
- (BOOL)isDisplayingOverlays;
- (id)initWithLayoutStyle:(int)arg1;
- (BOOL)performTestWithName:(id)arg1 options:(id)arg2;
- (id)pageSectionsForCollectionView:(id)arg1 layout:(id)arg2;
- (id)collectionView:(id)arg1 layout:(id)arg2 pageSectionForIndexPath:(id)arg3;
- (void)productPageOverlayDidDismiss:(id)arg1;
- (void)layoutCacheDidFinishBatch:(id)arg1;
- (id)_prepareLayoutForSections;
- (void)_enumerateVisibleSectionsUsingBlock:(id)arg1;
- (id)_sectionsForChartsComponent:(id)arg1;
- (id)_collectionViewSublayouts;
- (id)_childSectionsForMenuComponent:(id)arg1 selectedIndex:(int)arg2;
- (id)_menuContextForMenuComponent:(id)arg1;
- (void)_updateSectionsAfterMenuChange;
- (id)_textLayoutCache;
- (id)defaultSectionForComponent:(id)arg1;
- (id)_splitForSectionIndex:(int)arg1;
- (id)metricsController;
- (void)_prefetchArtworkForVisibleSections;
- (void)_invalidateLayoutWithNewSize:(struct CGSize { float x1; float x2; })arg1 transitionCoordinator:(id)arg2;
- (void)_reloadCollectionView;
- (void)_setPageSize:(struct CGSize { float x1; float x2; })arg1;
- (void)_invalidateIfLastKnownSizeChanged;
- (void)_setActiveProductPageOverlayController:(id)arg1;
- (void)dismissOverlays;
- (void)_updateCollectionViewWithStyle:(int)arg1 updates:(id)arg2;
- (id)_newSectionsWithPageComponent:(id)arg1;
- (id)_newSectionContext;
- (void)setSectionsWithSplitsDescription:(id)arg1;
- (void)setPinningStyle:(int)arg1;
- (id)_defaultSectionForSwooshComponent:(id)arg1;
- (id)_defaultSectionForGridComponent:(id)arg1;
- (void)_enumerateSectionContextsUsingBlock:(id)arg1;
- (id)_newStorePageCollectionViewLayout;
- (void)_initSKUIStorePageSectionsViewController;
- (void)collectionView:(id)arg1 didConfirmButtonElement:(id)arg2 forItemAtIndexPath:(id)arg3;
- (void)setColorScheme:(id)arg1;
- (id)colorScheme;
- (void)reloadSections:(id)arg1;
- (id)sections;
- (void).cxx_destruct;
- (struct UIEdgeInsets { float x1; float x2; float x3; float x4; })collectionView:(id)arg1 layout:(id)arg2 insetForSectionAtIndex:(int)arg3;
- (void)viewWillDisappear:(BOOL)arg1;
- (void)viewDidAppear:(BOOL)arg1;
- (void)viewWillAppear:(BOOL)arg1;
- (struct CGSize { float x1; float x2; })collectionView:(id)arg1 layout:(id)arg2 sizeForItemAtIndexPath:(id)arg3;
- (void)loadView;
- (int)numberOfSectionsInCollectionView:(id)arg1;
- (id)collectionView:(id)arg1 cellForItemAtIndexPath:(id)arg2;
- (int)collectionView:(id)arg1 numberOfItemsInSection:(int)arg2;
- (void)collectionView:(id)arg1 didEndDisplayingCell:(id)arg2 forItemAtIndexPath:(id)arg3;
- (void)collectionView:(id)arg1 didSelectItemAtIndexPath:(id)arg2;
- (BOOL)collectionView:(id)arg1 shouldSelectItemAtIndexPath:(id)arg2;
- (BOOL)collectionView:(id)arg1 shouldHighlightItemAtIndexPath:(id)arg2;
- (id)collectionView;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (void)viewWillTransitionToSize:(struct CGSize { float x1; float x2; })arg1 withTransitionCoordinator:(id)arg2;
- (void)viewWillLayoutSubviews;
- (void)decodeRestorableStateWithCoder:(id)arg1;
- (void)encodeRestorableStateWithCoder:(id)arg1;
- (id)delegate;
- (void)scrollViewDidEndDecelerating:(id)arg1;
- (void)scrollViewDidEndDragging:(id)arg1 willDecelerate:(BOOL)arg2;
- (void)scrollViewWillEndDragging:(id)arg1 withVelocity:(struct CGPoint { float x1; float x2; })arg2 targetContentOffset:(inout struct CGPoint { float x1; float x2; }*)arg3;
- (void)scrollViewDidScroll:(id)arg1;
- (void)dealloc;
- (void)setDelegate:(id)arg1;
- (id)_resourceLoader;

@end
