/* Generated by RuntimeBrowser.
   Image: /System/Library/PrivateFrameworks/iWorkImport.framework/iWorkImport
 */

@class TSDGLTextureInfo, KNAnimParameterGroup, KNMotionBlurAnimationPluginWrapper, TSDGLShader, KNBuildSkidSmokeSystem;

@interface KNBuildSkid : KNAnimationEffect <KNChunkableBuildAnimator, KNFrameBuildAnimator> {
    KNAnimParameterGroup *_parameterGroup;
    KNMotionBlurAnimationPluginWrapper *_motionBlurWrapper;
    KNBuildSkidSmokeSystem *_smokeSystem;
    TSDGLShader *_smokeShader;
    TSDGLTextureInfo *_smokeTexture;
}

+ (id)animationName;
+ (id)defaultAttributes;
+ (int)rendererTypeForCapabilities:(id)arg1;
+ (id)thumbnailImageNameForType:(int)arg1;
+ (void)fillLocalizedDirectionMenu:(id)arg1 forType:(int)arg2;
+ (unsigned int)directionType;
+ (id)localizedMenuString:(int)arg1;
+ (id)supportedTypes;
+ (int)animationCategory;
+ (id)animationFilter;

- (void)dealloc;
- (float)p_smokeOpacityAtSmokePercent:(float)arg1;
- (id)p_smokeSystemWithActualBounds:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1 context:(id)arg2;
- (id)p_keyframeAnimationsWithTR:(id)arg1 context:(id)arg2 actualBounds:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg3;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })p_actualBoundingRectOfTextures:(id)arg1 inParentLayerCoordinates:(id)arg2;
- (id)p_valuesArrayWithTR:(id)arg1 context:(id)arg2 actualBounds:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg3;
- (BOOL)p_shouldExtendToRightSideOfScreenWithContext:(id)arg1;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })frameOfEffectWithFrame:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1 context:(id)arg2;
- (id)animationsWithContext:(id)arg1;
- (void)renderFrameWithContext:(id)arg1;
- (void)animationDidEndWithContext:(id)arg1;
- (void)animationWillBeginWithContext:(id)arg1;
- (id)initWithAnimationContext:(id)arg1;

@end
