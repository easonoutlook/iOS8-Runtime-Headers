/* Generated by RuntimeBrowser.
   Image: /System/Library/PrivateFrameworks/CallHistory.framework/CallHistory
 */

@class NSString, <CHPhoneBookManagerProtocol>, NSDate, NSNumber, NSMutableArray;

@interface CHRecentCall : CHSynchronizedLoggable <NSSecureCoding, NSCopying> {
    BOOL _read;
    BOOL _callerIdIsBlocked;
    BOOL _multiCall;
    BOOL _callerIdIsFormatted;
    BOOL _answered;
    BOOL _mobileOriginated;
    NSString *_uniqueId;
    NSString *_devicePhoneId;
    NSString *_callerId;
    NSString *_callerNetworkName;
    unsigned int _callType;
    unsigned int _callStatus;
    NSDate *_date;
    NSNumber *_bytesOfDataUsed;
    NSString *_isoCountryCode;
    NSString *_mobileCountryCode;
    NSString *_mobileNetworkCode;
    NSNumber *_disconnectedCause;
    int _callerIdAvailability;
    NSString *_callerNetworkFirstName;
    NSString *_callerNetworkSecondName;
    NSString *_callerIdLabel;
    NSString *_callerIdLocation;
    unsigned int _unreadCount;
    NSMutableArray *_callOccurrences;
    NSString *_addressBookRecordId;
    NSString *_addressBookCallerIDMultiValueId;
    NSString *_callerName;
    <CHPhoneBookManagerProtocol> *_phoneBookManager;
    double _duration;
}

@property(copy) NSString * uniqueId;
@property(copy) NSString * devicePhoneId;
@property(copy) NSString * callerId;
@property(copy) NSString * callerNetworkName;
@property unsigned int callType;
@property unsigned int callStatus;
@property(copy) NSDate * date;
@property double duration;
@property(copy) NSNumber * bytesOfDataUsed;
@property BOOL read;
@property(copy) NSString * isoCountryCode;
@property(copy) NSString * mobileCountryCode;
@property(copy) NSString * mobileNetworkCode;
@property(copy) NSNumber * disconnectedCause;
@property int callerIdAvailability;
@property BOOL callerIdIsBlocked;
@property(copy) NSString * callerNetworkFirstName;
@property(copy) NSString * callerNetworkSecondName;
@property(copy) NSString * callerIdLabel;
@property(copy) NSString * callerIdLocation;
@property unsigned int unreadCount;
@property(retain) NSMutableArray * callOccurrences;
@property(copy) NSString * addressBookRecordId;
@property(copy) NSString * addressBookCallerIDMultiValueId;
@property(copy) NSString * callerName;
@property BOOL multiCall;
@property BOOL callerIdIsFormatted;
@property(retain) <CHPhoneBookManagerProtocol> * phoneBookManager;
@property BOOL answered;
@property BOOL mobileOriginated;

+ (id)callStatusAsString:(unsigned int)arg1;
+ (id)callTypeAsString:(unsigned int)arg1;
+ (BOOL)supportsSecureCoding;

- (id)callerId;
- (void)setCallerIdAvailability:(int)arg1;
- (void)setCallerNetworkName:(id)arg1;
- (void)setBytesOfDataUsed:(id)arg1;
- (void)setCallType:(unsigned int)arg1;
- (void)setUniqueId:(id)arg1;
- (void)setCallStatus:(unsigned int)arg1;
- (unsigned int)callStatus;
- (void)addressBookChanged;
- (BOOL)read;
- (void)setRead:(BOOL)arg1;
- (void)setUnreadCount:(unsigned int)arg1;
- (unsigned int)unreadCount;
- (void)setCallerId:(id)arg1;
- (void)setMobileOriginated:(BOOL)arg1;
- (BOOL)mobileOriginated;
- (BOOL)representsCallAtDate:(id)arg1;
- (id)callerIdSubStringForDisplay;
- (id)callerIdLocation;
- (id)callerIdLabel;
- (id)callerIdForDisplay;
- (id)callerNameForDisplay;
- (id)callerName;
- (BOOL)callerIdIsEmailAddress;
- (id)addressBookCallerIDMultiValueId;
- (id)callOccurrencesAsStringSync;
- (void)setCallerIdIsFormatted:(BOOL)arg1;
- (BOOL)callerIdIsFormatted;
- (id)callerNameForDisplaySync;
- (id)getLocalizedStringSync:(id)arg1;
- (id)callerIdForDisplaySync;
- (void)fetchAndSetAddressBookIdsSync;
- (BOOL)callerIdIsEmailAddressSync;
- (void)createOccurrenceArraySync;
- (unsigned int)numberOfOccurrencesSync;
- (void)addOccurrencesFromArraySync:(id)arg1;
- (BOOL)canCoalesceSyncWithCall:(id)arg1 withStrategy:(id)arg2;
- (BOOL)canCoalesceSyncWithCollapseIfEqualStrategyWithCall:(id)arg1;
- (BOOL)canCoalesceSyncWithRecentsStrategyWithCall:(id)arg1;
- (BOOL)isAddressBookContactASuggestion;
- (BOOL)isAddressBookContactASuggestionSync;
- (id)addressBookRecordId;
- (id)phoneBookManager;
- (void)setCallerName:(id)arg1;
- (id)callerNameSync;
- (void)setAddressBookCallerIDMultiValueId:(id)arg1;
- (id)addressBookCallerIDMultiValueIdSync;
- (void)setAddressBookRecordId:(id)arg1;
- (id)addressBookRecordIdSync;
- (id)callOccurrencesSync;
- (void)setCallerIdLocation:(id)arg1;
- (id)callerIdLocationSync;
- (void)setCallerIdLabel:(id)arg1;
- (id)callerIdLabelSync;
- (void)setCallerNetworkSecondName:(id)arg1;
- (id)callerNetworkSecondName;
- (void)setCallerNetworkFirstName:(id)arg1;
- (id)callerNetworkFirstName;
- (void)setCallerIdIsBlocked:(BOOL)arg1;
- (BOOL)callerIdIsBlocked;
- (void)setPhoneBookManager:(id)arg1;
- (void)setDevicePhoneId:(id)arg1;
- (void)setDisconnectedCause:(id)arg1;
- (BOOL)answered;
- (id)devicePhoneId;
- (int)callerIdAvailability;
- (id)callerNetworkName;
- (id)bytesOfDataUsed;
- (id)disconnectedCause;
- (void)setAnswered:(BOOL)arg1;
- (BOOL)multiCall;
- (void)setMultiCall:(BOOL)arg1;
- (void)setCallOccurrences:(id)arg1;
- (id)callOccurrences;
- (unsigned int)numberOfOccurrences;
- (id)coalescingHash;
- (BOOL)coalesceWithCall:(id)arg1 withStrategy:(id)arg2;
- (unsigned int)callType;
- (void).cxx_destruct;
- (id)uniqueId;
- (void)setDate:(id)arg1;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (id)date;
- (BOOL)isEqual:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)description;
- (double)duration;
- (void)setDuration:(double)arg1;
- (void)dealloc;
- (id)init;
- (void)setIsoCountryCode:(id)arg1;
- (void)setMobileNetworkCode:(id)arg1;
- (void)setMobileCountryCode:(id)arg1;
- (id)isoCountryCode;
- (id)mobileCountryCode;
- (id)mobileNetworkCode;

@end
