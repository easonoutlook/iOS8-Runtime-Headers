/* Generated by RuntimeBrowser.
   Image: /System/Library/PrivateFrameworks/iWorkImport.framework/iWorkImport
 */

@interface TSDBrushStroke : TSDSmartStroke  {
}

+ (id)renderQueue;
+ (id)sharedContext;
+ (void)applicationWillResignActive;
+ (void)applicationDidBecomeActive;
+ (struct CGImage { }*)newCGImageFromGL;
+ (id)brushProgram;
+ (void)loadBrush:(id)arg1;
+ (id)loadImageForBrush:(id)arg1;
+ (void)loadLineEndTextureForBrush:(id)arg1 lineEnd:(id)arg2 path:(struct CGPath { }*)arg3 andBounds:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg4;
+ (void)loadSectionsForBrush:(id)arg1 inSVGDoc:(struct _xmlDoc { void *x1; int x2; char *x3; struct _xmlNode {} *x4; struct _xmlNode {} *x5; struct _xmlNode {} *x6; struct _xmlNode {} *x7; struct _xmlNode {} *x8; struct _xmlDoc {} *x9; int x10; int x11; struct _xmlDtd {} *x12; struct _xmlDtd {} *x13; struct _xmlNs {} *x14; char *x15; char *x16; void *x17; void *x18; char *x19; int x20; struct _xmlDict {} *x21; void *x22; int x23; int x24; }*)arg2;
+ (void)loadLineEndsForBrush:(id)arg1 inSVGDoc:(struct _xmlDoc { void *x1; int x2; char *x3; struct _xmlNode {} *x4; struct _xmlNode {} *x5; struct _xmlNode {} *x6; struct _xmlNode {} *x7; struct _xmlNode {} *x8; struct _xmlDoc {} *x9; int x10; int x11; struct _xmlDtd {} *x12; struct _xmlDtd {} *x13; struct _xmlNs {} *x14; char *x15; char *x16; void *x17; void *x18; char *x19; int x20; struct _xmlDict {} *x21; void *x22; int x23; int x24; }*)arg2;
+ (id)cacheDirectory;
+ (Class)mutableClass;

- (int)cap;
- (id)mutableCopyWithZone:(struct _NSZone { }*)arg1;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (id)description;
- (void)finishOpenGLRenderInContext:(struct CGContext { }*)arg1 pathVertexData:(struct vector<TSDBrushVertexData, std::__1::allocator<TSDBrushVertexData> > { struct TSDBrushVertexData {} *x1; struct TSDBrushVertexData {} *x2; struct __compressed_pair<TSDBrushVertexData *, std::__1::allocator<TSDBrushVertexData> > { struct TSDBrushVertexData {} *x_3_1_1; } x3; }*)arg2;
- (void)renderOpenGLSection:(id)arg1 sectionIndex:(unsigned int)arg2 ontoPath:(id)arg3 withScaling:(struct { float x1; float x2; })arg4 inElementRange:(struct _NSRange { unsigned int x1; unsigned int x2; })arg5 into:(struct vector<TSDBrushVertexData, std::__1::allocator<TSDBrushVertexData> > { struct TSDBrushVertexData {} *x1; struct TSDBrushVertexData {} *x2; struct __compressed_pair<TSDBrushVertexData *, std::__1::allocator<TSDBrushVertexData> > { struct TSDBrushVertexData {} *x_3_1_1; } x3; }*)arg6 viewScale:(float)arg7;
- (void)brushPath:(id)arg1 withScaling:(struct { float x1; float x2; })arg2 inElementRange:(struct _NSRange { unsigned int x1; unsigned int x2; })arg3 into:(void*)arg4 sectionIndex:(unsigned int*)arg5 viewScale:(float)arg6;
- (void)brushSection:(id)arg1 sectionIndex:(unsigned int)arg2 ontoPath:(id)arg3 withScaling:(struct { float x1; float x2; })arg4 inElementRange:(struct _NSRange { unsigned int x1; unsigned int x2; })arg5 into:(void*)arg6 viewScale:(float)arg7;
- (id)brushBoundsForId:(id)arg1;
- (id)brushPathsForId:(id)arg1;
- (void)glBrushPath:(struct CGPath { }*)arg1 inContext:(struct CGContext { }*)arg2;
- (void)brushPath:(struct CGPath { }*)arg1 inContext:(struct CGContext { }*)arg2;
- (id)brushTextureForId:(id)arg1;
- (struct CGImage { }*)maskForId:(id)arg1;
- (BOOL)drawsInOneStep;
- (BOOL)prefersToApplyToCAShapeLayerDuringManipulation;
- (float)suggestedMinimumLineWidth;
- (id)strokeLineEnd:(id)arg1;
- (float)lineEndInsetAdjustment;
- (BOOL)needsToExtendJoinsForBoundsCalculation;
- (BOOL)canApplyToCAShapeLayer;
- (void)paintLineEnd:(id)arg1 atPoint:(struct CGPoint { float x1; float x2; })arg2 atAngle:(float)arg3 withScale:(float)arg4 inContext:(struct CGContext { }*)arg5 useFastDrawing:(BOOL)arg6;
- (void)paintPath:(struct CGPath { }*)arg1 wantsInteriorStroke:(BOOL)arg2 inContext:(struct CGContext { }*)arg3 useFastDrawing:(BOOL)arg4;
- (BOOL)supportsPattern;

@end
