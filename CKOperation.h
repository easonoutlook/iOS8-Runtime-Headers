/* Generated by RuntimeBrowser.
   Image: /System/Library/Frameworks/CloudKit.framework/CloudKit
 */

@class NSError, NSObject<OS_dispatch_source>, NSObject<OS_dispatch_queue>, CKOperationInfo, NSString, CKContainer, CKPlaceholderOperation, NSArray;

@interface CKOperation : NSOperation  {
    BOOL _allowsCellularAccess;
    BOOL _isExecuting;
    BOOL _isFinished;
    BOOL _isDiscretionary;
    CKContainer *_container;
    CKPlaceholderOperation *_placeholderOperation;
    NSString *_operationID;
    NSError *_error;
    NSObject<OS_dispatch_queue> *_callbackQueue;
    NSString *_sectionID;
    NSString *_parentSectionID;
    id _context;
    NSArray *_requestUUIDs;
    NSString *_sourceApplicationBundleIdentifier;
    NSString *_sourceApplicationSecondaryIdentifier;
    NSObject<OS_dispatch_source> *_timeoutSource;
    int _usesBackgroundSessionOverride;
}

@property(retain) CKContainer * container;
@property BOOL usesBackgroundSession;
@property BOOL allowsCellularAccess;
@property(retain) CKPlaceholderOperation * placeholderOperation;
@property(retain) NSString * operationID;
@property BOOL isExecuting;
@property BOOL isFinished;
@property(retain) NSError * error;
@property(retain) NSObject<OS_dispatch_queue> * callbackQueue;
@property(retain) NSString * sectionID;
@property(readonly) NSString * parentSectionID;
@property(readonly) id context;
@property BOOL isDiscretionary;
@property(retain) NSArray * requestUUIDs;
@property(readonly) CKOperationInfo * operationInfo;
@property(retain) NSString * sourceApplicationBundleIdentifier;
@property(retain) NSString * sourceApplicationSecondaryIdentifier;
@property(retain) NSObject<OS_dispatch_source> * timeoutSource;
@property int usesBackgroundSessionOverride;


- (id)error;
- (void)setIsExecuting:(BOOL)arg1;
- (void)setError:(id)arg1;
- (void)setRequestUUIDs:(id)arg1;
- (void)setUsesBackgroundSessionOverride:(int)arg1;
- (id)_requestUUIDsString;
- (id)requestUUIDs;
- (int)usesBackgroundSessionOverride;
- (id)parentSectionID;
- (id)CKPropertiesDescription;
- (void)setOperationID:(id)arg1;
- (id)sectionID;
- (id)operationID;
- (id)sourceApplicationBundleIdentifier;
- (void)setCallbackQueue:(id)arg1;
- (id)daemon;
- (BOOL)isConcurrent;
- (id)sourceApplicationSecondaryIdentifier;
- (void)setSourceApplicationSecondaryIdentifier:(id)arg1;
- (void)setSourceApplicationBundleIdentifier:(id)arg1;
- (BOOL)usesBackgroundSession;
- (void)setIsDiscretionary:(BOOL)arg1;
- (BOOL)isDiscretionary;
- (void)setAllowsCellularAccess:(BOOL)arg1;
- (BOOL)allowsCellularAccess;
- (id)callbackQueue;
- (void)setUsesBackgroundSession:(BOOL)arg1;
- (BOOL)isExecuting;
- (BOOL)isFinished;
- (void).cxx_destruct;
- (void)main;
- (id)container;
- (void)setContainer:(id)arg1;
- (void)cancel;
- (void)start;
- (id)context;
- (id)description;
- (void)dealloc;
- (id)init;
- (void)setSectionID:(id)arg1;
- (void)processOperationResult:(id)arg1;
- (void)_installTimeoutSource;
- (void)_uninstallTimeoutSource;
- (void)setTimeoutSource:(id)arg1;
- (id)timeoutSource;
- (id)placeholderOperation;
- (void)setPlaceholderOperation:(id)arg1;
- (void)_handleCompletionCallback:(id)arg1;
- (Class)operationInfoClass;
- (void)_handleProgressCallback:(id)arg1;
- (void)performCKOperation;
- (BOOL)CKOperationShouldRun:(id*)arg1;
- (void)_finishOnCallbackQueueWithError:(id)arg1;
- (id)operationInfo;
- (void)fillOutOperationInfo:(id)arg1;
- (void)finishWithError:(id)arg1;
- (void)setIsFinished:(BOOL)arg1;

@end
