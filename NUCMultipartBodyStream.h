/* Generated by RuntimeBrowser.
   Image: /System/Library/PrivateFrameworks/RadarCompose.framework/RadarCompose
 */

/* RuntimeBrowser encountered one or more ivar type encodings for a function pointer. 
   The runtime does not encode function signature information.  We use a signature of: 
           "int (*funcName)()",  where funcName might be null. 
 */

@class NSError, NSMutableData, NSEnumerator, NSMutableArray, NSInputStream, NSOutputStream, NUCMultiPart;

@interface NUCMultipartBodyStream : NSInputStream <NSStreamDelegate, NSCopying> {
    unsigned int m_streamStatus;
    NSError *m_streamError;
    unsigned int _numberOfBytesInPacket;
    NSInputStream *_inputStream;
    unsigned int _stringEncoding;
    NSMutableArray *_bodyPartArray;
    NSEnumerator *_bodyPartEnumerator;
    NUCMultiPart *_currentHTTPBodyPart;
    NSOutputStream *_outputStream;
    NSMutableData *_buffer;
    double _delay;
}

@property unsigned int numberOfBytesInPacket;
@property double delay;
@property(retain) NSInputStream * inputStream;
@property(getter=isEmpty,readonly) BOOL empty;
@property unsigned int stringEncoding;
@property(retain) NSMutableArray * bodyPartArray;
@property(retain) NSEnumerator * bodyPartEnumerator;
@property(retain) NUCMultiPart * currentHTTPBodyPart;
@property(retain) NSOutputStream * outputStream;
@property(retain) NSMutableData * buffer;


- (void)open;
- (void)setBuffer:(id)arg1;
- (id)buffer;
- (void)setBodyPartArray:(id)arg1;
- (void)setNumberOfBytesInPacket:(unsigned int)arg1;
- (void)appendHTTPBodyPart:(id)arg1;
- (void)setBodyPartEnumerator:(id)arg1;
- (void)setInitialAndFinalBoundaries;
- (void)setStreamStatus:(unsigned int)arg1;
- (void)setStreamError:(id)arg1;
- (void)setCurrentHTTPBodyPart:(id)arg1;
- (id)bodyPartEnumerator;
- (id)currentHTTPBodyPart;
- (unsigned int)numberOfBytesInPacket;
- (id)bodyPartArray;
- (id)initWithStringEncoding:(unsigned int)arg1;
- (void)setStringEncoding:(unsigned int)arg1;
- (unsigned int)stringEncoding;
- (id)outputStream;
- (void)setInputStream:(id)arg1;
- (void)setOutputStream:(id)arg1;
- (id)inputStream;
- (id)propertyForKey:(id)arg1;
- (void).cxx_destruct;
- (void)close;
- (double)delay;
- (BOOL)isEmpty;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (void)setDelay:(double)arg1;
- (id)init;
- (void)_unscheduleFromCFRunLoop:(struct __CFRunLoop { }*)arg1 forMode:(struct __CFString { }*)arg2;
- (void)_scheduleInCFRunLoop:(struct __CFRunLoop { }*)arg1 forMode:(struct __CFString { }*)arg2;
- (BOOL)_setCFClientFlags:(unsigned long)arg1 callback:(int (*)())arg2 context:(struct { int x1; void *x2; int (*x3)(); int (*x4)(); int (*x5)(); }*)arg3;
- (BOOL)hasBytesAvailable;
- (BOOL)getBuffer:(char **)arg1 length:(unsigned int*)arg2;
- (int)read:(char *)arg1 maxLength:(unsigned int)arg2;
- (id)streamError;
- (unsigned int)streamStatus;
- (void)removeFromRunLoop:(id)arg1 forMode:(id)arg2;
- (void)scheduleInRunLoop:(id)arg1 forMode:(id)arg2;
- (BOOL)setProperty:(id)arg1 forKey:(id)arg2;
- (unsigned long long)contentLength;

@end
