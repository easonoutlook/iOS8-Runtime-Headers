/* Generated by RuntimeBrowser.
   Image: /System/Library/Frameworks/SceneKit.framework/SceneKit
 */

@class SCNSpriteKitEventHandler, SCNRenderer, UIColor, <SCNSceneRendererDelegate>, SCNScene, EAGLContext, SCNNode, SCNTechnique, NSRecursiveLock, SKScene, SCNJitterer, NSArray, SCNDisplayLink, NSString, SCNEventHandler;

@interface SCNView : UIView <SCNSceneRenderer, SCNTechniqueSupport> {
    double _currentSystemTime;
    NSString *__ibSceneName;
    unsigned int _ibNoMultisampling : 1;
    unsigned int _allowsBrowsing : 1;
    unsigned int _isOpaque : 1;
    unsigned int _firstDrawDone : 1;
    unsigned int _appIsDeactivated : 1;
    unsigned int _viewIsOffscreen : 1;
    id _delegate;
    SCNRenderer *_renderer;
    SCNScene *_scene;
    SCNDisplayLink *__displayLink;
    SCNJitterer *_jitterer;
    NSRecursiveLock *_lock;
    UIColor *_backgroundColor;
    char *_snapshotImageData;
    unsigned long _snapshotImageDataLength;
    SCNEventHandler *_eventHandler;
    SCNSpriteKitEventHandler *_spriteKitEventHandler;
    NSArray *_controllerGestureRecognizers;
}

@property(retain) SCNScene * scene;
@property(copy) UIColor * backgroundColor;
@property BOOL allowsCameraControl;
@property(retain) EAGLContext * eaglContext;
@property int preferredFramesPerSecond;
@property unsigned int antialiasingMode;
@property double sceneTime;
@property <SCNSceneRendererDelegate> * delegate;
@property(getter=isPlaying) BOOL playing;
@property BOOL loops;
@property(retain) SCNNode * pointOfView;
@property BOOL autoenablesDefaultLighting;
@property(getter=isJitteringEnabled) BOOL jitteringEnabled;
@property BOOL showsStatistics;
@property(retain) SKScene * overlaySKScene;
@property(readonly) void* context;
@property(copy) SCNTechnique * technique;

+ (id)keyPathsForValuesAffectingValueForKey:(id)arg1;
+ (BOOL)automaticallyNotifiesObserversForKey:(id)arg1;
+ (Class)layerClass;
+ (id)_kvoKeysForwardedToRenderer;
+ (id)SCNJSExportProtocol;

- (void)setPlaying:(BOOL)arg1;
- (BOOL)isPlaying;
- (void)pause:(id)arg1;
- (id)renderer;
- (void)play:(id)arg1;
- (void)stop:(id)arg1;
- (void)displayLayer:(id)arg1;
- (void)willMoveToWindow:(id)arg1;
- (struct UIImage { Class x1; void *x2; float x3; struct { unsigned int x_4_1_1 : 1; unsigned int x_4_1_2 : 3; unsigned int x_4_1_3 : 1; unsigned int x_4_1_4 : 1; unsigned int x_4_1_5 : 1; unsigned int x_4_1_6 : 2; unsigned int x_4_1_7 : 1; unsigned int x_4_1_8 : 1; } x4; }*)snapshot;
- (BOOL)isOpaque;
- (void)touchesEnded:(id)arg1 withEvent:(id)arg2;
- (void)touchesMoved:(id)arg1 withEvent:(id)arg2;
- (void)touchesBegan:(id)arg1 withEvent:(id)arg2;
- (void)unlock;
- (void)lock;
- (void)touchesCancelled:(id)arg1 withEvent:(id)arg2;
- (id)delegate;
- (void)setContentScaleFactor:(float)arg1;
- (void)didMoveToWindow;
- (id)backgroundColor;
- (void)drawRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (id)initWithFrame:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (void)setEaglContext:(id)arg1;
- (void)switchToNextCamera;
- (void)switchToCameraNamed:(id)arg1;
- (void)_systemTimeAnimationStarted:(id)arg1;
- (void)setPreferredFramesPerSecond:(int)arg1;
- (int)preferredFramesPerSecond;
- (void)eventHandlerWantsRedraw;
- (BOOL)_supportsJiterringSyncRedraw;
- (void)pauseDisplayLink;
- (void)resumeDisplayLink;
- (void)setPointOfView:(id)arg1 animate:(BOOL)arg2;
- (void)_drawAtTime:(double)arg1;
- (float)_flipY:(float)arg1;
- (id)_displayLink;
- (void)setEventHandler:(id)arg1;
- (void)_checkAndUpdateDisplayLinkStateIfNeeded;
- (id)eventHandler;
- (void)_setNeedsDisplay;
- (void)_sceneDidUpdate:(id)arg1;
- (void)_setGestureRecognizers:(id)arg1;
- (void)_flushDisplayLink;
- (BOOL)_ibWantsMultisampling;
- (id)_ibSceneName;
- (BOOL)allowsCameraControl;
- (void)set_ibSceneName:(id)arg1;
- (void)setAllowsCameraControl:(BOOL)arg1;
- (void)set_ibWantsMultisampling:(BOOL)arg1;
- (void)_commonInit:(id)arg1;
- (id)initWithFrame:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1 options:(id)arg2;
- (void)_enterBackground:(id)arg1;
- (void)_enterForeground:(id)arg1;
- (void)setAntialiasingMode:(unsigned int)arg1;
- (unsigned int)antialiasingMode;
- (void)set_showsAuthoringEnvironment:(BOOL)arg1;
- (BOOL)_showsAuthoringEnvironment;
- (void)setOverlaySKScene:(id)arg1;
- (id)overlaySKScene;
- (void)setShowsStatistics:(BOOL)arg1;
- (BOOL)showsStatistics;
- (void)setAutoenablesDefaultLighting:(BOOL)arg1;
- (BOOL)autoenablesDefaultLighting;
- (void)prepareObjects:(id)arg1 withCompletionHandler:(id)arg2;
- (struct SCNVector3 { float x1; float x2; float x3; })unprojectPoint:(struct SCNVector3 { float x1; float x2; float x3; })arg1;
- (struct SCNVector3 { float x1; float x2; float x3; })projectPoint:(struct SCNVector3 { float x1; float x2; float x3; })arg1;
- (BOOL)isNodeInsideFrustum:(id)arg1 withPointOfView:(id)arg2;
- (id)hitTest:(struct CGPoint { float x1; float x2; })arg1 options:(id)arg2;
- (void)_jitterRedisplay;
- (void)setJitteringEnabled:(BOOL)arg1;
- (BOOL)isJitteringEnabled;
- (void)setSceneTime:(double)arg1;
- (BOOL)prepareObject:(id)arg1 shouldAbortBlock:(id)arg2;
- (void)setPointOfView:(id)arg1;
- (double)sceneTime;
- (id)pointOfView;
- (id)eaglContext;
- (id)hitTestWithSegmentFromPoint:(struct SCNVector3 { float x1; float x2; float x3; })arg1 toPoint:(struct SCNVector3 { float x1; float x2; float x3; })arg2 options:(id)arg3;
- (void)setLoops:(BOOL)arg1;
- (BOOL)loops;
- (id)technique;
- (void)setTechnique:(id)arg1;
- (void)setScene:(id)arg1;
- (void*)__CFObject;
- (id)_authoringEnvironment;
- (BOOL)_canJitter;
- (id)scene;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void*)context;
- (void)setBackgroundColor:(id)arg1;
- (id)description;
- (void)dealloc;
- (void)setDelegate:(id)arg1;

@end
