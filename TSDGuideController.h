/* Generated by RuntimeBrowser.
   Image: /System/Library/PrivateFrameworks/iWorkImport.framework/iWorkImport
 */

@class TSDInteractiveCanvasController, NSMutableSet, NSSet, NSMutableArray, NSMutableDictionary;

@interface TSDGuideController : NSObject <TSDDecorator> {
    TSDInteractiveCanvasController *mICC;
    NSMutableDictionary *mVerticalSpacings;
    NSMutableDictionary *mHorizontalSpacings;
    NSMutableArray *mVerticalSizingGuides;
    NSMutableArray *mHorizontalSizingGuides;
    NSMutableArray *mGuidesForSnappingY;
    NSMutableArray *mGuidesForSnappingX;
    NSMutableArray *mSpacingGuidesForSnappingX;
    NSMutableArray *mSpacingGuidesForSnappingY;
    NSMutableArray *mSpacingCenterGuidesForSnappingX;
    NSMutableArray *mSpacingCenterGuidesForSnappingY;
    NSSet *mCurrentGuides;
    NSMutableSet *mCurrentSizingGuideUILayers;
}

@property(readonly) TSDInteractiveCanvasController * interactiveCanvasController;

+ (void)initialize;
+ (id)guideColor;
+ (BOOL)shouldAlignEdgesToMasterGuides;
+ (void)setShouldAlignEdgesToMasterGuides:(BOOL)arg1;
+ (void)setShouldAlignCenters:(BOOL)arg1;
+ (void)setGuideColor:(id)arg1;
+ (void)setShouldAlignToSizingGuides:(BOOL)arg1;
+ (void)setShouldAlignToSpacingGuides:(BOOL)arg1;
+ (void)setShouldAlignEdges:(BOOL)arg1;
+ (BOOL)shouldAlignToSpacingGuides;
+ (BOOL)shouldAlignEdges;
+ (BOOL)shouldAlignCenters;
+ (BOOL)shouldAlignToSizingGuides;
+ (id)defaultGuideColor;

- (void)showSizingGuidesAlignedWithLayout:(id)arg1 forKnobTag:(unsigned int)arg2;
- (void)showGuidesAlignedWithRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1 shouldRenderX:(BOOL)arg2 shouldRenderY:(BOOL)arg3;
- (struct CGPoint { float x1; float x2; })snapRectToGuides:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (void)p_getOffset:(float*)arg1 andGuidesArray:(id*)arg2 forEdge:(int)arg3 ofFrame:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg4;
- (id)p_guidesForOffset:(float)arg1 predicate:(id)arg2 inArray:(id)arg3;
- (float)p_spacingForCenterOrSpacingGuide:(id)arg1;
- (id)p_guidesForEdge:(int)arg1 ofFrame:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg2;
- (void)showGuidesAlignedWithRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1 forKnobTag:(unsigned int)arg2 shouldRenderX:(BOOL)arg3 shouldRenderY:(BOOL)arg4 shouldRenderSizeGuides:(BOOL)arg5;
- (BOOL)p_sizingGuidesAreRelevantForOrientation:(int)arg1 whileDraggingKnobTag:(unsigned int)arg2;
- (id)p_closestGuideForOffset:(float)arg1 predicate:(id)arg2 inArray:(id)arg3;
- (id)p_guideClosestToEdge:(int)arg1 ofFrame:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg2;
- (BOOL)p_guidesAreRelevantForEdge:(int)arg1 whileDraggingKnobTag:(unsigned int)arg2;
- (float)p_maxSnap;
- (struct CGPoint { float x1; float x2; })snapRectToGuides:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1 forKnobTag:(unsigned int)arg2 snapSize:(BOOL)arg3;
- (void)p_addSpacingGuidesForFrame:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1 spacing:(id)arg2 isVerticalSpacing:(BOOL)arg3;
- (void)p_addGuide:(id)arg1 toSortedArray:(id)arg2;
- (void)p_addGuidesForLayout:(id)arg1;
- (void)beginAlignmentOperationForReps:(id)arg1;
- (void)hideAlignmentGuides;
- (void)showGuidesAlignedWithRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1 forKnobTag:(unsigned int)arg2;
- (struct CGPoint { float x1; float x2; })snapRectToGuides:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1 forKnobTag:(unsigned int)arg2;
- (void)endAlignmentOperation;
- (void)showSizingGuideUIForRep:(id)arg1 matchingWidth:(BOOL)arg2 matchingHeight:(BOOL)arg3;
- (void)hideSizingGuides;
- (void)beginAlignmentOperationForRep:(id)arg1;
- (id)decoratorOverlayLayers;
- (id)initWithInteractiveCanvasController:(id)arg1;
- (id)interactiveCanvasController;

@end
