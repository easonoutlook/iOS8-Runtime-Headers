/* Generated by RuntimeBrowser.
   Image: /System/Library/PrivateFrameworks/iWorkImport.framework/iWorkImport
 */

@class TSDStroke, NSString, TSCHChartSeries;

@interface TSCHLegendCellModelCache : NSObject  {
    int mLegendCellType;
    int mBadgeType;
    unsigned int mSeriesIndex;
    TSCHChartSeries *mSeries;
    NSString *mLabelString;
    TSDStroke *mStroke;
    TSDStroke *mSymbolStroke;
    int mSymbolType;
    int mLineType;
    struct CGSize { 
        float width; 
        float height; 
    } mCellSize;
    float mEffectiveStrokeWidth;
    float mEffectiveSymbolStrokeWidth;
    struct CGRect { 
        struct CGPoint { 
            float x; 
            float y; 
        } origin; 
        struct CGSize { 
            float width; 
            float height; 
        } size; 
    } mBadgeFrame;
    struct CGRect { 
        struct CGPoint { 
            float x; 
            float y; 
        } origin; 
        struct CGSize { 
            float width; 
            float height; 
        } size; 
    } mLabelFrame;
    struct CGRect { 
        struct CGPoint { 
            float x; 
            float y; 
        } origin; 
        struct CGSize { 
            float width; 
            float height; 
        } size; 
    } mBadgeFillFrame;
}

@property(readonly) int cellType;
@property(readonly) int badgeType;
@property(readonly) unsigned int seriesIndex;
@property(readonly) TSCHChartSeries * series;
@property(readonly) NSString * labelString;
@property(readonly) struct CGSize { float x1; float x2; } size;
@property(readonly) struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; } badgeFrame;
@property(readonly) struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; } labelFrame;
@property(readonly) struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; } badgeFillFrame;
@property(readonly) TSDStroke * stroke;
@property(readonly) id fill;
@property(readonly) TSDStroke * symbolStroke;
@property(readonly) id symbolFill;
@property(readonly) float effectiveStrokeWidth;
@property(readonly) float effectiveSymbolStrokeWidth;
@property(readonly) int symbolType;
@property(readonly) int lineType;


- (int)symbolType;
- (int)cellType;
- (unsigned int)seriesIndex;
- (id)series;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })labelFrame;
- (id)stroke;
- (id)fill;
- (struct CGSize { float x1; float x2; })size;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })badgeFrame;
- (int)badgeType;
- (void)dealloc;
- (id)labelString;
- (float)effectiveSymbolStrokeWidth;
- (id)initWithChartModel:(id)arg1 cellType:(int)arg2 seriesIndex:(unsigned int)arg3 withMetrics:(id)arg4 overrideLabel:(id)arg5;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })badgeFillFrame;
- (float)effectiveStrokeWidth;
- (id)symbolFill;
- (int)lineType;
- (id)symbolStroke;

@end
