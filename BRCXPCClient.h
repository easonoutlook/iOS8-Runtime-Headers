/* Generated by RuntimeBrowser.
   Image: /System/Library/PrivateFrameworks/CloudDocsDaemon.framework/CloudDocsDaemon
 */

@class NSMutableSet, NSString, NSXPCConnection, BRCAccountSession;

@interface BRCXPCClient : NSObject <BRCProcessMonitorDelegate, BRCXPCClientProtocol> {
    BRCAccountSession *_accountSession;
    BOOL _dieOnInvalidate;
    BOOL _isForeground;
    BOOL _invalidated;
    int _clientPid;
    NSString *_bundleID;
    NSString *_debugIdentifier;
    NSMutableSet *_containers;
    BOOL _isUsingUbiquity;
    NSXPCConnection *_connection;
}

@property BOOL isUsingUbiquity;
@property(readonly) NSString * bundleID;
@property(readonly) NSXPCConnection * connection;
@property(readonly) BOOL dieOnInvalidate;

+ (id)unconfiguredClient:(id)arg1;

- (BOOL)_isBlackListedBundleID:(id)arg1 version:(id)arg2;
- (void)_addExternalDocumentReferenceTo:(id)arg1 underParent:(id)arg2 forceReparent:(BOOL)arg3 reply:(id)arg4;
- (id)_containerIDsForBundleID:(id)arg1;
- (void)_startDownloadItemsAtURLs:(id)arg1 pos:(unsigned int)arg2 options:(unsigned int)arg3 error:(id)arg4 reply:(id)arg5;
- (BOOL)canAccessLogicalOrPhysicalURL:(id)arg1 needsWrite:(BOOL)arg2;
- (void)_startMonitoringProcessIfNeeded;
- (id)issueContainerExtensionForURL:(id)arg1 error:(id*)arg2;
- (BOOL)canAccessPhysicalURL:(id)arg1;
- (BOOL)isUsingUbiquity;
- (id)_setupContainersForPid:(int)arg1 containerID:(id)arg2 error:(id*)arg3;
- (BOOL)_isCloudSyncAllowed;
- (void)setIsUsingUbiquity:(BOOL)arg1;
- (id)setupContainer:(id)arg1 root:(id)arg2 error:(id*)arg3;
- (id)_copyResolvedContainerIDs:(id)arg1 error:(id*)arg2;
- (id)_containerIDsForPid:(int)arg1;
- (BOOL)_entitlementBooleanValueForKey:(id)arg1;
- (void)process:(int)arg1 didBecomeForeground:(BOOL)arg2;
- (void)_stopMonitoringProcess;
- (id)bundleID;
- (id)copyContainerIDsForPid:(int)arg1 error:(id*)arg2;
- (BOOL)isContainerProxyEntitled;
- (BOOL)canAccessPath:(const char *)arg1 needsWrite:(BOOL)arg2;
- (void)currentAccountCreateWithID:(id)arg1 reply:(id)arg2;
- (BOOL)dieOnInvalidate;
- (oneway void)bundleDidAccessExternalDocument:(id)arg1;
- (void)reclaimAmount:(long long)arg1 withUrgency:(int)arg2 reply:(id)arg3;
- (void)purgeAmount:(long long)arg1 withUrgency:(int)arg2 reply:(id)arg3;
- (void)computePurgableSpaceWithUrgency:(int)arg1 reply:(id)arg2;
- (void)addExternalDocumentReferenceTo:(id)arg1 forPid:(int)arg2 inContainer:(id)arg3 underParent:(id)arg4 reply:(id)arg5;
- (void)getApplicationDocumentUsageInfoForBundleID:(id)arg1 withReply:(id)arg2;
- (void)getTotalApplicationDocumentUsageWithReply:(id)arg1;
- (void)getPublishedURLForItemAtURL:(id)arg1 reply:(id)arg2;
- (void)resolveBookmarkDataToURL:(id)arg1 reply:(id)arg2;
- (void)getBookmarkDataForURL:(id)arg1 reply:(id)arg2;
- (void)waitForFileSystemChangeProcessingWithReply:(id)arg1;
- (void)resolveConflictWithName:(id)arg1 atURL:(id)arg2 reply:(id)arg3;
- (void)getContainersByIDWithReply:(id)arg1;
- (void)forceSyncContainerID:(id)arg1 reply:(id)arg2;
- (oneway void)log:(const char *)arg1 function:(const char *)arg2 source:(const char *)arg3 line:(int)arg4 message:(id)arg5;
- (void)getNonLocalVersionSenderWithReceiver:(id)arg1 documentURL:(id)arg2 reply:(id)arg3;
- (void)getItemUpdateSenderWithReceiver:(id)arg1 reply:(id)arg2;
- (void)getAttributeValues:(id)arg1 forItemAtURL:(id)arg2 reply:(id)arg3;
- (void)thumbnailChangedForItemAtURL:(id)arg1 reply:(id)arg2;
- (void)evictItemAtURL:(id)arg1 reply:(id)arg2;
- (void)startDownloadItemsAtURLs:(id)arg1 options:(unsigned int)arg2 reply:(id)arg3;
- (void)getNotificationInfoAtURL:(id)arg1 reply:(id)arg2;
- (void)registerInitialSyncBarrierForID:(id)arg1 reply:(id)arg2;
- (oneway void)updateContainerMetadataForID:(id)arg1 properties:(id)arg2 bundleIcons:(id)arg3;
- (void)getContainerURLForID:(id)arg1 forPid:(int)arg2 reply:(id)arg3;
- (oneway void)checkinAskClientIfUsingUbiquity:(BOOL)arg1;
- (void)gatherInformationForPath:(id)arg1 reply:(id)arg2;
- (void)dumpDatabaseTo:(id)arg1 containerID:(id)arg2 reply:(id)arg3;
- (void)printStatus:(id)arg1 reply:(id)arg2;
- (void)performSelfCheck:(id)arg1 reply:(id)arg2;
- (void)getContainersNeedingUpload:(id)arg1;
- (void)currentAccountCopyTokenWithBundleID:(id)arg1 version:(id)arg2 reply:(id)arg3;
- (void)currentAccountLogoutWithReply:(id)arg1;
- (void)setupInstanceWithDict:(id)arg1 reply:(id)arg2;
- (id)initWithConnection:(id)arg1 accountSession:(id)arg2;
- (id)connection;
- (void).cxx_destruct;
- (void)invalidate;
- (id)description;

@end
