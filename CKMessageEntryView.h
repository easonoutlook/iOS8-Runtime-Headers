/* Generated by RuntimeBrowser.
   Image: /System/Library/PrivateFrameworks/ChatKit.framework/ChatKit
 */

@class CKInlineAudioReplyButtonController, _UIBackdropView, UILabel, CKComposition, CKMessageEntryContentView, UIButton, CKJoystickController, CKMessageEntryRecordedAudioView, CKAudioRecorder, CAMShutterButton, CKConversation, UIView, CKMessageEntryWaveformView, _UITextFieldRoundedRectBackgroundViewNeue, CADisplayLink, <CKMessageEntryViewDelegate>, NSDate, UIImageView;

@interface CKMessageEntryView : UIView <CKMessageEntryContentViewDelegate, CKAudioRecorderDelegate, CKJoystickControllerDelegate, CKMessageEntryRecordedAudioViewDelegate, CKInlineAudioReplyButtonDelegate> {
    UIView *_dimmingView;
    int _animationState;
    BOOL _shouldShowSendButton;
    BOOL _shouldShowSubject;
    BOOL _shouldShowPhotoButton;
    BOOL _shouldShowCharacterCount;
    BOOL _dimmed;
    BOOL _shouldKnockoutCoverView;
    BOOL _keyboardVisible;
    BOOL _composingRecipient;
    BOOL _sendingMessage;
    BOOL _characterCountHidden;
    <CKMessageEntryViewDelegate> *_delegate;
    CKConversation *_conversation;
    CKMessageEntryContentView *_contentView;
    CKMessageEntryWaveformView *_waveformView;
    UIButton *_photoButton;
    UIButton *_deleteAudioRecordingButton;
    UIButton *_sendButton;
    UIButton *_audioButton;
    CKInlineAudioReplyButtonController *_audioReplyButton;
    CAMShutterButton *_shutterButton;
    UILabel *_characterCountLabel;
    _UITextFieldRoundedRectBackgroundViewNeue *_coverView;
    _UIBackdropView *_backdropView;
    UIView *_knockoutCoverView;
    UIView *_dividerLine;
    CKAudioRecorder *_recorder;
    CKComposition *_audioComposition;
    CKJoystickController *_audioJoystickController;
    CKMessageEntryRecordedAudioView *_recordedAudioView;
    CADisplayLink *_displayLink;
    unsigned int _waveformUpdateCounter;
    UILabel *_audioHintLabel;
    UIImageView *_audioHintImageView;
    NSDate *_audioLongPressGestureBeginDate;
    struct CGSize { 
        float width; 
        float height; 
    } _photoButtonSize;
    struct CGSize { 
        float width; 
        float height; 
    } _deleteAudioRecordingButtonSize;
    struct CGSize { 
        float width; 
        float height; 
    } _sendButtonSize;
    struct CGSize { 
        float width; 
        float height; 
    } _audioButtonSize;
    struct CGSize { 
        float width; 
        float height; 
    } _characterCountSize;
    struct CGSize { 
        float width; 
        float height; 
    } _waveformViewSize;
    struct UIEdgeInsets { 
        float top; 
        float left; 
        float bottom; 
        float right; 
    } _sendTextAlignmentInsets;
}

@property BOOL shouldShowSendButton;
@property BOOL shouldShowSubject;
@property BOOL shouldShowPhotoButton;
@property BOOL shouldShowCharacterCount;
@property <CKMessageEntryViewDelegate> * delegate;
@property(retain) CKConversation * conversation;
@property(retain) CKMessageEntryContentView * contentView;
@property(retain) CKComposition * composition;
@property(retain) CKMessageEntryWaveformView * waveformView;
@property(retain) UIButton * photoButton;
@property int animationState;
@property(getter=isDimmed) BOOL dimmed;
@property BOOL shouldKnockoutCoverView;
@property(getter=isKeyboardVisible) BOOL keyboardVisible;
@property(readonly) BOOL isAudioJoystickVisible;
@property(getter=isRecording,readonly) BOOL recording;
@property(getter=isComposingRecipient) BOOL composingRecipient;
@property(getter=isSendingMessage) BOOL sendingMessage;
@property(retain) UIButton * deleteAudioRecordingButton;
@property(retain) UIButton * sendButton;
@property(retain) UIButton * audioButton;
@property(retain) CKInlineAudioReplyButtonController * audioReplyButton;
@property(retain) CAMShutterButton * shutterButton;
@property(retain) UILabel * characterCountLabel;
@property struct CGSize { float x1; float x2; } photoButtonSize;
@property struct CGSize { float x1; float x2; } deleteAudioRecordingButtonSize;
@property struct CGSize { float x1; float x2; } sendButtonSize;
@property struct CGSize { float x1; float x2; } audioButtonSize;
@property struct UIEdgeInsets { float x1; float x2; float x3; float x4; } sendTextAlignmentInsets;
@property struct CGSize { float x1; float x2; } characterCountSize;
@property(retain) _UITextFieldRoundedRectBackgroundViewNeue * coverView;
@property(retain) _UIBackdropView * backdropView;
@property(retain) UIView * knockoutCoverView;
@property(retain) UIView * dividerLine;
@property(getter=isCharacterCountHidden) BOOL characterCountHidden;
@property(retain) CKAudioRecorder * recorder;
@property(retain) CKComposition * audioComposition;
@property(retain) CKJoystickController * audioJoystickController;
@property(retain) CKMessageEntryRecordedAudioView * recordedAudioView;
@property struct CGSize { float x1; float x2; } waveformViewSize;
@property(retain) CADisplayLink * displayLink;
@property unsigned int waveformUpdateCounter;
@property(retain) UILabel * audioHintLabel;
@property(retain) UIImageView * audioHintImageView;
@property(retain) NSDate * audioLongPressGestureBeginDate;

+ (float)contentViewPortraitWidth:(BOOL)arg1;
+ (id)audioButtonImage;
+ (float)coverViewPortraitWidth:(BOOL)arg1;

- (void)setWaveformUpdateCounter:(unsigned int)arg1;
- (unsigned int)waveformUpdateCounter;
- (id)audioReplyButton;
- (BOOL)isKeyboardVisible;
- (BOOL)shouldKnockoutCoverView;
- (BOOL)isDimmed;
- (BOOL)shouldShowSubject;
- (void)stopRecordingForRaiseGesture;
- (void)startRecordingForRaiseGesture;
- (void)setSendingMessage:(BOOL)arg1;
- (void)setComposingRecipient:(BOOL)arg1;
- (BOOL)isAudioJoystickVisible;
- (void)setDimmed:(BOOL)arg1;
- (void)setShouldKnockoutCoverView:(BOOL)arg1;
- (id)initWithFrame:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1 shouldShowSendButton:(BOOL)arg2 shouldShowSubject:(BOOL)arg3 shouldShowPhotoButton:(BOOL)arg4 shouldShowCharacterCount:(BOOL)arg5;
- (void)audioReplyButtonCancel:(id)arg1;
- (void)audioReplyButtonStop:(id)arg1;
- (void)audioReplyButtonStart:(id)arg1;
- (void)messageEntryRecordedAudioView:(id)arg1 mediaObjectDidFinishPlaying:(id)arg2;
- (void)joystickControllerDidDismissJoystick:(id)arg1;
- (void)joystickControllerWillShrinkJoystick:(id)arg1 animated:(BOOL)arg2;
- (void)joystickControllerWillExpandJoystick:(id)arg1 animated:(BOOL)arg2;
- (void)joystickControllerWillDismissJoystick:(id)arg1 animated:(BOOL)arg2;
- (void)joystickControllerWillPresentJoystick:(id)arg1 animated:(BOOL)arg2;
- (void)audioRecorderRecordingDidChange:(id)arg1;
- (BOOL)messageEntryContentView:(id)arg1 shouldInsertMediaObjects:(id)arg2;
- (void)messageEntryContentViewDidEndEditing:(id)arg1;
- (void)messageEntryContentViewDidBeginEditing:(id)arg1;
- (BOOL)messageEntryContentViewShouldBeginEditing:(id)arg1;
- (void)messageEntryContentViewDidChange:(id)arg1;
- (BOOL)photoButtonEnabledWithPreferredServiceManagerError:(BOOL)arg1;
- (BOOL)sendButtonColorWithPreferredServiceManagerError:(BOOL)arg1;
- (BOOL)sendButtonEnabledWithPreferredServiceManagerError:(BOOL)arg1;
- (BOOL)isComposingRecipient;
- (BOOL)shouldRecord;
- (void)setAudioHintImageView:(id)arg1;
- (void)setAudioHintLabel:(id)arg1;
- (void)joystickCancelAction:(id)arg1;
- (void)joystickSendAction:(id)arg1;
- (void)joystickShutterButtonDownAction:(id)arg1;
- (void)joystickShutterButtonUpAction:(id)arg1;
- (void)joystickPlaybackButtonUpAction:(id)arg1;
- (void)_toggleAudioPlaybackJoystickIsPlaying:(BOOL)arg1;
- (void)cancelRecordingAndShowAudioHint;
- (id)audioLongPressGestureBeginDate;
- (void)setAudioLongPressGestureBeginDate:(id)arg1;
- (void)presentAudioJoystick;
- (void)setAudioJoystickController:(id)arg1;
- (void)displayLinkFired:(id)arg1;
- (void)clearResponseContext;
- (void)setComposition:(id)arg1;
- (void)setAudioComposition:(id)arg1;
- (void)updateResponseContext;
- (void)updateEntryView;
- (void)messageReceived:(id)arg1;
- (void)conversationPreferredServiceChanged:(id)arg1;
- (void)setRecordedAudioView:(id)arg1;
- (void)setWaveformViewSize:(struct CGSize { float x1; float x2; })arg1;
- (void)setWaveformView:(id)arg1;
- (void)setCoverView:(id)arg1;
- (void)setCharacterCountHidden:(BOOL)arg1;
- (void)setCharacterCountSize:(struct CGSize { float x1; float x2; })arg1;
- (void)setCharacterCountLabel:(id)arg1;
- (void)setPhotoButton:(id)arg1;
- (void)setDeleteAudioRecordingButtonSize:(struct CGSize { float x1; float x2; })arg1;
- (void)setPhotoButtonSize:(struct CGSize { float x1; float x2; })arg1;
- (void)setSendTextAlignmentInsets:(struct UIEdgeInsets { float x1; float x2; float x3; float x4; })arg1;
- (void)setAudioButtonSize:(struct CGSize { float x1; float x2; })arg1;
- (void)setSendButtonSize:(struct CGSize { float x1; float x2; })arg1;
- (void)setAudioReplyButton:(id)arg1;
- (void)setShutterButton:(id)arg1;
- (void)touchUpAudioButton:(id)arg1;
- (void)touchDownAudioButton:(id)arg1;
- (void)joystickGestureRecognized:(id)arg1;
- (void)setDeleteAudioRecordingButton:(id)arg1;
- (void)touchUpInsideDeleteAudioRecordingButton:(id)arg1;
- (void)setAudioButton:(id)arg1;
- (void)setSendButton:(id)arg1;
- (void)touchUpInsideSendButton:(id)arg1;
- (void)setDividerLine:(id)arg1;
- (void)setKnockoutCoverView:(id)arg1;
- (void)setShouldShowCharacterCount:(BOOL)arg1;
- (void)setShouldShowPhotoButton:(BOOL)arg1;
- (void)setShouldShowSubject:(BOOL)arg1;
- (void)setShouldShowSendButton:(BOOL)arg1;
- (float)placeholderHeight;
- (id)recordedAudioView;
- (id)waveformView;
- (BOOL)isSendingMessage;
- (id)audioComposition;
- (struct CGSize { float x1; float x2; })waveformViewSize;
- (id)audioJoystickController;
- (id)audioHintImageView;
- (id)audioHintLabel;
- (id)shutterButton;
- (id)audioButton;
- (struct CGSize { float x1; float x2; })audioButtonSize;
- (BOOL)isCharacterCountHidden;
- (id)characterCountLabel;
- (struct UIEdgeInsets { float x1; float x2; float x3; float x4; })contentTextAlignmentInsets;
- (id)knockoutCoverView;
- (id)coverView;
- (struct CGSize { float x1; float x2; })characterCountSize;
- (BOOL)shouldShowCharacterCount;
- (struct CGSize { float x1; float x2; })sendButtonSize;
- (BOOL)shouldShowSendButton;
- (struct UIEdgeInsets { float x1; float x2; float x3; float x4; })sendTextAlignmentInsets;
- (id)sendButton;
- (struct CGSize { float x1; float x2; })deleteAudioRecordingButtonSize;
- (id)deleteAudioRecordingButton;
- (struct CGSize { float x1; float x2; })photoButtonSize;
- (BOOL)shouldShowPhotoButton;
- (id)photoButton;
- (id)dividerLine;
- (id)conversation;
- (void)setConversation:(id)arg1;
- (BOOL)isRecording;
- (void)setKeyboardVisible:(BOOL)arg1;
- (id)backdropView;
- (void)setBackdropView:(id)arg1;
- (void)setAnimationState:(int)arg1;
- (float)_accessoryViewFadeDuration;
- (int)animationState;
- (id)recorder;
- (void)setRecorder:(id)arg1;
- (id)displayLink;
- (void)setDisplayLink:(id)arg1;
- (void)setContentView:(id)arg1;
- (id)contentView;
- (id)delegate;
- (struct CGSize { float x1; float x2; })sizeThatFits:(struct CGSize { float x1; float x2; })arg1;
- (void)layoutSubviews;
- (id)hitTest:(struct CGPoint { float x1; float x2; })arg1 withEvent:(id)arg2;
- (void)setFrame:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (void)dealloc;
- (void)setDelegate:(id)arg1;
- (id)composition;

@end
