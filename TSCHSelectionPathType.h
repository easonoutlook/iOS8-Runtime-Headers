/* Generated by RuntimeBrowser.
   Image: /System/Library/PrivateFrameworks/iWorkImport.framework/iWorkImport
 */

/* RuntimeBrowser encountered one or more ivar type encodings for a function pointer. 
   The runtime does not encode function signature information.  We use a signature of: 
           "int (*funcName)()",  where funcName might be null. 
 */

@class NSString;

@interface TSCHSelectionPathType : NSObject <NSCopying> {
    NSString *mType;
    NSString *mName;
}

@property(readonly) NSString * name;
@property(readonly) NSString * type;

+ (id)selectionPathTypeWithType:(id)arg1 name:(id)arg2;
+ (id)trendLineR2Type;
+ (id)trendLineEquationType;
+ (id)trendLineType;
+ (id)errorBarType;
+ (id)seriesSymbolType;
+ (id)seriesValueLabelType;
+ (id)gridLineType;
+ (id)categoryAxisType;
+ (id)valueAxisType;
+ (id)axisTitleType;
+ (id)legendType;
+ (id)legendTrendLineNameType;
+ (id)legendSeriesNameType;
+ (id)axisLineType;
+ (id)chartBodyType;
+ (id)chartDataSetNameType;
+ (id)chartTitleType;
+ (id)seriesLabelType;
+ (id)axisLabelsType;
+ (id)seriesType;

- (id)initWithArchive:(const struct ChartSelectionPathTypeArchive { int (**x1)(); struct UnknownFieldSet { struct vector<google::protobuf::UnknownField, std::__1::allocator<google::protobuf::UnknownField> > {} *x_2_1_1; } x2; struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > {} *x3; struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > {} *x4; int x5; unsigned int x6[1]; }*)arg1;
- (id)initWithType:(id)arg1 name:(id)arg2;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (id)type;
- (unsigned int)hash;
- (BOOL)isEqual:(id)arg1;
- (id)name;
- (id)description;
- (void)dealloc;
- (id)init;
- (BOOL)canApplyChartStyleWithDescription:(id)arg1;
- (BOOL)canApplyShapeStyle;
- (BOOL)canApplyParagraphStyle;
- (void)saveToArchive:(struct ChartSelectionPathTypeArchive { int (**x1)(); struct UnknownFieldSet { struct vector<google::protobuf::UnknownField, std::__1::allocator<google::protobuf::UnknownField> > {} *x_2_1_1; } x2; struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > {} *x3; struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > {} *x4; int x5; unsigned int x6[1]; }*)arg1;

@end
