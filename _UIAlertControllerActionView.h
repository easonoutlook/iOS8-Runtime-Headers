/* Generated by RuntimeBrowser.
   Image: /System/Library/Frameworks/UIKit.framework/UIKit
 */

@class UIImageView, UIView, UILabel, UIAlertAction;

@interface _UIAlertControllerActionView : UIView <UIGestureRecognizerDelegate, _UIAlertActionRepresenting> {
    UILabel *label;
    UIImageView *imageView;
    UIView *highlightedBackgroundContainerView;
    UIView *highlightedBackgroundView;
    unsigned int _roundedCorners;
    UIAlertAction *_action;
    id selectedTarget;
    SEL selectedAction;
    id highlightTarget;
    SEL highlightAction;
    BOOL _discrete;
    int _alertControllerStyle;
    float _cornerRadius;
}

@property(copy) UIAlertAction * action;
@property int alertControllerStyle;
@property unsigned int roundedCorners;
@property float cornerRadius;
@property BOOL discrete;
@property(readonly) BOOL isHighlighted;


- (void)setDiscrete:(BOOL)arg1;
- (void)setAlertControllerStyle:(int)arg1;
- (void)setHighlightTarget:(id)arg1 action:(SEL)arg2;
- (void)setSelectedTarget:(id)arg1 action:(SEL)arg2;
- (unsigned int)roundedCorners;
- (void)setRoundedCorners:(unsigned int)arg1;
- (id)_regularFont;
- (id)_cancelFont;
- (float)_actionSheetSystemFontSize;
- (int)alertControllerStyle;
- (void)_recomputeBackgroundColor;
- (void)_recomputeTextColor;
- (id)_titleFont;
- (BOOL)discrete;
- (id)highlightViewForRectCorner:(unsigned int)arg1;
- (void)_triggerSelect;
- (id)_touchForEvent:(id)arg1;
- (void)_useFourPartBlendingHighlightView:(BOOL)arg1;
- (void)_updateFontSize;
- (void)_prepareConstraints;
- (void)_contentSizeChanged;
- (void)_action:(id)arg1 changedToEnabled:(BOOL)arg2;
- (void)setAction:(id)arg1;
- (BOOL)isHighlighted;
- (void)setHighlighted:(BOOL)arg1;
- (void)tintColorDidChange;
- (void)setCornerRadius:(float)arg1;
- (float)cornerRadius;
- (id)tintColor;
- (void)touchesEnded:(id)arg1 withEvent:(id)arg2;
- (void)touchesMoved:(id)arg1 withEvent:(id)arg2;
- (void)touchesBegan:(id)arg1 withEvent:(id)arg2;
- (id)action;
- (void)touchesCancelled:(id)arg1 withEvent:(id)arg2;
- (struct CGSize { float x1; float x2; })sizeThatFits:(struct CGSize { float x1; float x2; })arg1;
- (struct CGSize { float x1; float x2; })_intrinsicSizeWithinSize:(struct CGSize { float x1; float x2; })arg1;
- (id)initWithFrame:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (id)description;
- (void)dealloc;

@end
