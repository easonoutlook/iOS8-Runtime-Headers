/* Generated by RuntimeBrowser.
   Image: /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation
 */

@interface NSLocale : NSObject <NSCopying, NSSecureCoding> {
}

+ (id)ISOLanguageCodes;
+ (id)availableLocaleIdentifiers;
+ (id)componentsFromLocaleIdentifier:(id)arg1;
+ (id)canonicalLanguageIdentifierFromString:(id)arg1;
+ (id)localeWithLocaleIdentifier:(id)arg1;
+ (id)preferredLanguages;
+ (id)localeIdentifierFromComponents:(id)arg1;
+ (id)systemLocale;
+ (id)currentLocale;
+ (BOOL)supportsSecureCoding;
+ (id)allocWithZone:(struct _NSZone { }*)arg1;
+ (id)internetServicesRegion;
+ (unsigned int)lineDirectionForLanguage:(id)arg1;
+ (unsigned int)characterDirectionForLanguage:(id)arg1;
+ (unsigned int)windowsLocaleCodeFromLocaleIdentifier:(id)arg1;
+ (id)localeIdentifierFromWindowsLocaleCode:(unsigned int)arg1;
+ (id)commonISOCurrencyCodes;
+ (id)ISOCurrencyCodes;
+ (id)ISOCountryCodes;
+ (id)canonicalLocaleIdentifierFromString:(id)arg1;
+ (id)autoupdatingCurrentLocale;
+ (id)mostPreferredLanguageOf:(id)arg1 forUsage:(unsigned int)arg2 options:(unsigned int)arg3;
+ (void)registerPreferredLanguage:(id)arg1 usage:(unsigned int)arg2 confidence:(float)arg3;
+ (id)systemLanguages;
+ (id)mostPreferredLanguageOf:(id)arg1 withPreferredLanguages:(id)arg2 forUsage:(unsigned int)arg3 options:(unsigned int)arg4;
+ (void)setPreferredLanguages:(id)arg1;
+ (id)localeForBundleLanguage:(id)arg1;
+ (id)icuParentLocaleIdentifierForIdentifier:(id)arg1;
+ (id)deviceLanguageLocale;
+ (id)icuDisplayNameForKey:(id)arg1 identifier:(id)arg2 displayLocale:(id)arg3 dialect:(BOOL)arg4 capitalization:(int)arg5;
+ (id)icuAddLikelySubtagsForLocaleIdentifier:(id)arg1;
+ (id)supportedCalendars;
+ (id)defaultCalendarForLocale:(id)arg1;
+ (id)icuDisplayNameForCountryWithDeviceLanguage:(id)arg1;
+ (id)restrictedCountryCodes;
+ (id)icuCanonicalIdentifierForIdentifier:(id)arg1;
+ (id)canonicalLocaleIdentifierFromComponents:(id)arg1;
+ (id)string:(id)arg1 withCapitalizedDisplayNameForLanguage:(id)arg2;
+ (id)icuPreferredLanguagesForRegion:(id)arg1;
+ (id)icuDisplayNameForLanguage:(id)arg1 withLocaleIdentifier:(id)arg2 dialectName:(BOOL)arg3 capitalization:(int)arg4;
+ (id)canonicalLocaleIdentifier:(id)arg1 withNewLanguageIdentifier:(id)arg2;
+ (id)deviceLanguageIdentifier;
+ (id)icuDisplayNameForLanguageWithDeviceLanguage:(id)arg1 dialectName:(BOOL)arg2 capitalization:(int)arg3;
+ (id)canonicalLanguageAndScriptCodeIdentifierForIdentifier:(id)arg1;
+ (id)deviceLanguageLocale;
+ (id)canonicalLocaleIdentifierFromComponents:(id)arg1;
+ (id)canonicalLocaleIdentifier:(id)arg1 withNewLanguageIdentifier:(id)arg2;
+ (id)deviceLanguageIdentifier;
+ (id)canonicalLanguageAndScriptCodeIdentifierForIdentifier:(id)arg1;
+ (id)string:(id)arg1 withCapitalizedDisplayNamesForFirstLanguageIdentifier:(id)arg2 secondLanguageIdentifier:(id)arg3 thirdLanguageIdentifier:(id)arg4;
+ (id)addLikelySubtagsForLocaleIdentifier:(id)arg1;
+ (int)_vk_indexForLocale:(id)arg1;
+ (void)_mapkit_overrideDistanceUnit:(int)arg1;
+ (void)_mapkit_overrideGuidanceUnit:(int)arg1;
+ (id)_localeOverridesForLocaleWithIdentifier:(id)arg1;
+ (id)currentDeviceLanguageForFacebook;
+ (void)__ck_setTestLocale:(id)arg1;
+ (id)__ck_currentLocale;

- (id)displayNameForKey:(id)arg1 value:(id)arg2;
- (id)initWithLocaleIdentifier:(id)arg1;
- (id)localeIdentifier;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (id)identifier;
- (unsigned int)hash;
- (BOOL)isEqual:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)objectForKey:(id)arg1;
- (id)init;
- (unsigned long)_cfTypeID;
- (id)_copyDisplayNameForKey:(id)arg1 value:(id)arg2;
- (id)_prefs;
- (void)_setNullLocale;
- (unsigned char)_nullLocale;
- (Class)classForCoder;
- (id)debugDescription;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (BOOL)_mapkit_guidanceUsesMetricSystem;
- (id)_mapkit_objectForKey:(id)arg1;
- (BOOL)_mapkit_useYardsForShortDistances;
- (BOOL)_mapkit_distanceUsesMetricSystem;

@end
