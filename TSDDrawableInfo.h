/* Generated by RuntimeBrowser.
   Image: /System/Library/PrivateFrameworks/iWorkImport.framework/iWorkImport
 */

/* RuntimeBrowser encountered one or more ivar type encodings for a function pointer. 
   The runtime does not encode function signature information.  We use a signature of: 
           "int (*funcName)()",  where funcName might be null. 
 */

@class NSURL, KNBuild, KNSlide, NSObject<TSDContainerInfo>, TSPObject<TSDOwningAttachment>, TSSPropertySetChangeDetails, TSPLazyReference, TSDExteriorTextWrap, NSArray, KNAbstractSlide, NSString, TSDDefaultPartitioner, <TSDAnnotationHosting>, TSDInfoGeometry;

@interface TSDDrawableInfo : TSPObject <TSDChangeableInfo, TSKDocumentObject, TSKTransformableObject, TSKSearchable> {
    TSDInfoGeometry *mGeometry;
    NSObject<TSDContainerInfo> *mParentInfo;
    TSPLazyReference *mParentInfoReference;
    BOOL mLocked;
    BOOL mAspectRatioLocked;
    TSSPropertySetChangeDetails *mChanges;
    TSDExteriorTextWrap *mExteriorTextWrap;
    TSPObject<TSDOwningAttachment> *mOwningAttachment;
    TSDDefaultPartitioner *mDefaultPartitioner;
    NSURL *mHyperlinkURL;
    <TSDAnnotationHosting> *mComment;
    NSString *mAccessibilityDescription;
}

@property(readonly) KNSlide * slide;
@property(readonly) KNAbstractSlide * abstractSlide;
@property(readonly) NSArray * builds;
@property(readonly) unsigned int buildCount;
@property(readonly) BOOL hasBuilds;
@property(readonly) KNBuild * buildIn;
@property(readonly) KNBuild * buildOut;
@property(readonly) BOOL hasActionBuilds;
@property(readonly) NSArray * actionBuilds;
@property(readonly) NSArray * buildChunks;
@property(readonly) NSArray * activeBuildChunks;
@property(readonly) NSArray * ghostInfos;
@property(getter=isLocked) BOOL locked;
@property(getter=isLockable,readonly) BOOL lockable;
@property(readonly) BOOL supportsAttachedComments;
@property BOOL aspectRatioLocked;
@property(readonly) BOOL canSizeBeChangedIncrementally;
@property(copy) TSDExteriorTextWrap * exteriorTextWrap;
@property(copy) NSURL * hyperlinkURL;
@property(readonly) BOOL supportsHyperlinks;
@property(copy) NSString * accessibilityDescription;
@property(copy) <TSDAnnotationHosting> * comment;
@property BOOL matchesObjectPlaceholderGeometry;
@property(copy) TSDInfoGeometry * geometry;
@property NSObject<TSDContainerInfo> * parentInfo;
@property TSPObject<TSDOwningAttachment> * owningAttachment;
@property(readonly) TSPObject<TSDOwningAttachment> * owningAttachmentNoRecurse;
@property(getter=isFloatingAboveText,readonly) BOOL floatingAboveText;
@property(getter=isAnchoredToText,readonly) BOOL anchoredToText;
@property(getter=isInlineWithText,readonly) BOOL inlineWithText;
@property(getter=isAttachedToBodyText,readonly) BOOL attachedToBodyText;
@property(readonly) BOOL isUserModifiable;
@property(readonly) Class editorClass;

+ (BOOL)canPartition;
+ (void)setShouldPartitionByDefault:(BOOL)arg1;
+ (BOOL)needsObjectUUID;
+ (void)load;

- (id)accessibilityDescription;
- (Class)layoutClass;
- (int)elementKind;
- (id)comment;
- (void)setAspectRatioLocked:(BOOL)arg1;
- (void)setGeometry:(id)arg1;
- (id)geometry;
- (void)setLocked:(BOOL)arg1;
- (BOOL)isLocked;
- (void)dealloc;
- (void)setComment:(id)arg1;
- (void)setParentInfoDuringUnarchiving:(id)arg1 fromPasteboard:(BOOL)arg2;
- (id)hyperlinkURL;
- (id)descriptionForPasteboardWithSource:(id)arg1;
- (BOOL)canChangeWrapType;
- (BOOL)canAnchor;
- (id)commandToFlipWithOrientation:(int)arg1;
- (void)didUngroupWithCommand:(id)arg1;
- (void)willGroupWithCommand:(id)arg1;
- (id)partitioner;
- (id)exteriorTextWrap;
- (void)setExteriorTextWrap:(id)arg1;
- (struct CGAffineTransform { float x1; float x2; float x3; float x4; float x5; float x6; })fullTransformInRoot;
- (struct CGAffineTransform { float x1; float x2; float x3; float x4; float x5; float x6; })computeFullTransform;
- (void)setAccessibilityDescription:(id)arg1;
- (void)setHyperlinkURL:(id)arg1;
- (struct CGPoint { float x1; float x2; })transformableObjectAnchorPoint;
- (id)descriptionForPasteboard;
- (unsigned int)chunkCountForTextureDeliveryStyle:(unsigned int)arg1 byGlyphStyle:(int)arg2 animationFilter:(id)arg3;
- (id)containingGroup;
- (struct CGAffineTransform { float x1; float x2; float x3; float x4; float x5; float x6; })computeLayoutFullTransform;
- (void)performBlockWithTemporaryLayout:(id)arg1;
- (BOOL)isLockable;
- (BOOL)supportsAttachedComments;
- (BOOL)canSizeBeChangedIncrementally;
- (BOOL)supportsHyperlinks;
- (id)localizedChunkNameForTextureDeliveryStyle:(unsigned int)arg1 animationFilter:(id)arg2 chunkIndex:(unsigned int)arg3;
- (BOOL)reverseChunkingIsSupported;
- (unsigned int)chunkCountForTextureDeliveryStyle:(unsigned int)arg1 animationFilter:(id)arg2;
- (void)setInsertionCenterPosition:(struct CGPoint { float x1; float x2; })arg1;
- (id)mixedObjectWithFraction:(float)arg1 ofObject:(id)arg2;
- (int)mixingTypeWithObject:(id)arg1;
- (id)searchForAnnotationsWithHitBlock:(id)arg1;
- (void)wasRemovedFromDocumentRoot:(id)arg1;
- (void)willBeRemovedFromDocumentRoot:(id)arg1;
- (void)wasAddedToDocumentRoot:(id)arg1 context:(id)arg2;
- (void)willBeAddedToDocumentRoot:(id)arg1 context:(id)arg2;
- (void)coalesceChanges:(id)arg1;
- (void)adoptStylesheet:(id)arg1 withMapper:(id)arg2;
- (id)textureDeliveryStylesLocalized:(BOOL)arg1 animationFilter:(id)arg2;
- (unsigned int)textureDeliveryStyleFromDeliveryString:(id)arg1;
- (void)setMatchesObjectPlaceholderGeometry:(BOOL)arg1;
- (BOOL)matchesObjectPlaceholderGeometry;
- (BOOL)isAttachedToBodyText;
- (BOOL)isInlineWithText;
- (BOOL)isAnchoredToText;
- (BOOL)isFloatingAboveText;
- (id)owningAttachmentNoRecurse;
- (void)setOwningAttachment:(id)arg1;
- (void)setParentInfo:(id)arg1;
- (void)clearBackPointerToParentInfoIfNeeded:(id)arg1;
- (BOOL)isUserModifiable;
- (void)willChangeProperties:(id)arg1;
- (void)willChangeProperty:(int)arg1;
- (struct CGAffineTransform { float x1; float x2; float x3; float x4; float x5; float x6; })transformInRoot;
- (id)commandForTransformingByTransform:(struct CGAffineTransform { float x1; float x2; float x3; float x4; float x5; float x6; })arg1 context:(id)arg2 transformedObjects:(id)arg3 inBounds:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg4;
- (Class)editorClass;
- (id)transformedGeometryWithTransform:(struct CGAffineTransform { float x1; float x2; float x3; float x4; float x5; float x6; })arg1 inBounds:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg2;
- (id)initWithContext:(id)arg1 geometry:(id)arg2;
- (id)animationFilters;
- (id)owningAttachment;
- (Class)repClass;
- (id)parentInfo;
- (BOOL)isThemeContent;
- (id)presetKind;
- (void)loadFromArchive:(const struct DrawableArchive { int (**x1)(); struct UnknownFieldSet { struct vector<google::protobuf::UnknownField, std::__1::allocator<google::protobuf::UnknownField> > {} *x_2_1_1; } x2; struct GeometryArchive {} *x3; struct Reference {} *x4; struct ExteriorTextWrapArchive {} *x5; struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > {} *x6; struct Reference {} *x7; struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > {} *x8; boolx9; boolx10; int x11; unsigned int x12[1]; }*)arg1 unarchiver:(id)arg2;
- (id)endCollectingChanges;
- (void)beginCollectingChanges;
- (void)saveToArchive:(struct DrawableArchive { int (**x1)(); struct UnknownFieldSet { struct vector<google::protobuf::UnknownField, std::__1::allocator<google::protobuf::UnknownField> > {} *x_2_1_1; } x2; struct GeometryArchive {} *x3; struct Reference {} *x4; struct ExteriorTextWrapArchive {} *x5; struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > {} *x6; struct Reference {} *x7; struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > {} *x8; boolx9; boolx10; int x11; unsigned int x12[1]; }*)arg1 archiver:(id)arg2;
- (void)didCopy;
- (void)willCopyWithOtherDrawables:(id)arg1;
- (id)copyWithContext:(id)arg1;
- (BOOL)aspectRatioLocked;
- (id)slide;
- (void)swizzled_setMatchesObjectPlaceholderGeometry:(BOOL)arg1;
- (id)ghostInfos;
- (id)activeBuildChunksForAnimationType:(int)arg1;
- (id)buildOut;
- (id)buildIn;
- (BOOL)hasActionBuilds;
- (id)abstractSlide;
- (unsigned int)buildCount;
- (id)actionBuilds;
- (BOOL)swizzled_matchesObjectPlaceholderGeometry;
- (BOOL)hasBuilds;
- (id)activeBuildChunks;
- (id)buildChunks;
- (id)builds;

@end
