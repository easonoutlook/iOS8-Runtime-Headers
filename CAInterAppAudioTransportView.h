/* Generated by RuntimeBrowser.
   Image: /System/Library/Frameworks/CoreAudioKit.framework/CoreAudioKit
 */

/* RuntimeBrowser encountered one or more ivar type encodings for a function pointer. 
   The runtime does not encode function signature information.  We use a signature of: 
           "int (*funcName)()",  where funcName might be null. 
 */

@class UILabel, UIColor, NSTimer, CAUITransportButton, UIFont;

@interface CAInterAppAudioTransportView : UIView  {
    CAUITransportButton *rewindButton;
    CAUITransportButton *playPauseButton;
    CAUITransportButton *recordButton;
    UILabel *currentTimeLabel;
    UIColor *pauseButtonColor;
    UIColor *playButtonColor;
    struct OpaqueAudioComponentInstance { } *outputUnit;
    struct HostCallbackInfo { void *x1; int (*x2)(); int (*x3)(); int (*x4)(); int (*x5)(); } *callBackInfo;
    NSTimer *pollingPlayerTimer;
    BOOL enabled;
    BOOL inForeground;
    BOOL _playing;
    BOOL _recording;
    BOOL _connected;
    double _playTime;
    UIFont *_currentTimeLabelFont;
}

@property(getter=isEnabled) BOOL enabled;
@property(getter=isPlaying,readonly) BOOL playing;
@property(getter=isRecording,readonly) BOOL recording;
@property(getter=isConnected,readonly) BOOL connected;
@property(retain) UIColor * labelColor;
@property(retain) UIFont * currentTimeLabelFont;
@property(retain) UIColor * rewindButtonColor;
@property(retain) UIColor * playButtonColor;
@property(retain) UIColor * pauseButtonColor;
@property(retain) UIColor * recordButtonColor;


- (BOOL)isPlaying;
- (void)togglePlayback:(id)arg1;
- (BOOL)canPlay;
- (BOOL)canRecord;
- (void)setLabelColor:(id)arg1;
- (id)labelColor;
- (BOOL)isRecording;
- (BOOL)isEnabled;
- (void)setEnabled:(BOOL)arg1;
- (void)initialize;
- (void)layoutSubviews;
- (id)initWithFrame:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (id)initWithCoder:(id)arg1;
- (void)dealloc;
- (void)setOutputAudioUnit:(struct OpaqueAudioComponentInstance { }*)arg1;
- (void)setRecordButtonColor:(id)arg1;
- (id)recordButtonColor;
- (void)setPauseButtonColor:(id)arg1;
- (id)pauseButtonColor;
- (void)setPlayButtonColor:(id)arg1;
- (id)playButtonColor;
- (void)setRewindButtonColor:(id)arg1;
- (id)rewindButtonColor;
- (BOOL)canRewind;
- (void)sendStateToRemoteHost:(unsigned long)arg1;
- (void)getHostCallbackInfo;
- (void)startPollingPlayer;
- (void)stopPollingPlayer;
- (void)updateStatefromTransportCallBack;
- (id)getPlayTimeString;
- (void)pollHost;
- (BOOL)isHostConnected;
- (void)updateTransportControls;
- (void)appHasGoneForeground;
- (void)appHasGoneInBackground;
- (void)setCurrentTimeLabelFont:(id)arg1;
- (id)currentTimeLabelFont;
- (void)toggleRecording:(id)arg1;
- (void)rewindAction:(id)arg1;
- (void)audioUnitPropertyChangedListener:(void*)arg1 unit:(struct OpaqueAudioComponentInstance { }*)arg2 propID:(unsigned long)arg3 scope:(unsigned long)arg4 element:(unsigned long)arg5;
- (BOOL)isConnected;

@end
