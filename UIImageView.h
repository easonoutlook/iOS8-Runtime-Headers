/* Generated by RuntimeBrowser.
   Image: /System/Library/Frameworks/UIKit.framework/UIKit
 */

@class NSArray, UIColor, UIImage;

@interface UIImageView : UIView  {
    id _storage;
    struct UIEdgeInsets { 
        float top; 
        float left; 
        float bottom; 
        float right; 
    } _cachedEdgeInsetsForEffects;
    BOOL _templateSettingsAreInvalid;
    BOOL _edgeInsetsForEffectsAreValid;
    BOOL __animatesContents;
}

@property(retain) UIImage * image;
@property(retain) UIImage * highlightedImage;
@property(getter=isUserInteractionEnabled) BOOL userInteractionEnabled;
@property(getter=isHighlighted) BOOL highlighted;
@property(copy) NSArray * animationImages;
@property(copy) NSArray * highlightedAnimationImages;
@property double animationDuration;
@property int animationRepeatCount;
@property(retain) UIColor * tintColor;
@property int drawMode;
@property(setter=_setTemplateImageRenderingEffects:) unsigned int _templateImageRenderingEffects;
@property(setter=_setAnimatesContents:) BOOL _animatesContents;
@property(setter=_setDefaultRenderingMode:) int _defaultRenderingMode;
@property(readonly) struct UIEdgeInsets { float x1; float x2; float x3; float x4; } _edgeInsetsForEffects;
@property(setter=_setEdgeInsetsForEffectsAreValid:) BOOL _edgeInsetsForEffectsAreValid;
@property(setter=_setMasksTemplateImages:) BOOL _masksTemplateImages;
@property(readonly) BOOL _templateSettingsAreInvalid;

+ (id)backgroundImageViewForImage:(id)arg1 frame:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg2;

- (void)_applySettingsForLegibilityStyle:(int)arg1;
- (BOOL)isElementAccessibilityExposedToInterfaceBuilder;
- (BOOL)isAccessibilityElementByDefault;
- (unsigned long long)defaultAccessibilityTraits;
- (void)_setAnimatesContents:(BOOL)arg1;
- (void)_setEdgeInsetsForEffectsAreValid:(BOOL)arg1;
- (BOOL)_edgeInsetsForEffectsAreValid;
- (BOOL)_templateSettingsAreInvalid;
- (void)setAnimating:(BOOL)arg1;
- (void)setCGImageRef:(struct CGImage { }*)arg1;
- (void)setDrawMode:(int)arg1;
- (int)drawMode;
- (void)_setMasksTemplateImages:(BOOL)arg1;
- (int)animationRepeatCount;
- (double)animationDuration;
- (void)setHighlightedAnimationImages:(id)arg1;
- (void)setAnimationImages:(id)arg1;
- (id)initWithImage:(id)arg1 highlightedImage:(id)arg2;
- (BOOL)_animatesContents;
- (void)startAnimating;
- (void)_resolveImageForTrait:(id)arg1;
- (void)_invalidateTemplateSettings;
- (void)_templateSettingsDidChange;
- (void)_updateMasking;
- (BOOL)_shouldTreatImageAsTemplate:(id)arg1;
- (id)_decompressingImageForType:(unsigned int)arg1;
- (id)_activeImage;
- (struct UIEdgeInsets { float x1; float x2; float x3; float x4; })_edgeInsetsForEffects;
- (void)_setViewGeometry:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1 forMetric:(int)arg2;
- (BOOL)_recomputePretilingState;
- (void)_updateTemplateProperties;
- (void)_updateState;
- (void)_updatePretiledImageCacheForImage:(id)arg1;
- (void)_updateImageViewForOldImage:(id)arg1 newImage:(id)arg2;
- (void)_clearPretiledImageCacheForImage:(id)arg1;
- (void)stopAnimating;
- (void)_setDecompressingImage:(id)arg1 forType:(unsigned int)arg2;
- (BOOL)_setImageViewContents:(id)arg1;
- (BOOL)isAnimating;
- (void)_drawImageEffectsForImage:(id)arg1 inRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg2;
- (BOOL)_needsImageEffectsForImage:(id)arg1 suppressColorizing:(BOOL)arg2;
- (id)_effectiveTintColorWithImage:(id)arg1;
- (BOOL)_needsImageEffectsForImage:(id)arg1;
- (id)_cachedPretiledImageForImage:(id)arg1;
- (BOOL)_shouldDrawImage:(id)arg1;
- (id)_currentHighlightedImage;
- (id)_currentImage;
- (BOOL)_masksTemplateImages;
- (int)_defaultRenderingMode;
- (void)setHighlightedImage:(id)arg1;
- (id)highlightedImage;
- (id)highlightedAnimationImages;
- (id)animationImages;
- (BOOL)isHighlighted;
- (void)setHighlighted:(BOOL)arg1;
- (void)_setTemplateImageRenderingEffects:(unsigned int)arg1;
- (void)_setDefaultRenderingMode:(int)arg1;
- (unsigned int)_templateImageRenderingEffects;
- (void)setAnimationRepeatCount:(int)arg1;
- (void)_didMoveFromWindow:(id)arg1 toWindow:(id)arg2;
- (void)tintColorDidChange;
- (id)_generateBackdropMaskImage;
- (BOOL)_canDrawContent;
- (BOOL)useBlockyMagnificationInClassic;
- (void)traitCollectionDidChange:(id)arg1;
- (BOOL)_shouldAnimatePropertyWithKey:(id)arg1;
- (struct CGImage { }*)imageRef;
- (id)image;
- (struct UIEdgeInsets { float x1; float x2; float x3; float x4; })alignmentRectInsets;
- (void)decodeRestorableStateWithCoder:(id)arg1;
- (void)encodeRestorableStateWithCoder:(id)arg1;
- (void)setAnimationDuration:(double)arg1;
- (id)initWithImage:(id)arg1;
- (struct CGSize { float x1; float x2; })sizeThatFits:(struct CGSize { float x1; float x2; })arg1;
- (void)layoutSubviews;
- (struct CGSize { float x1; float x2; })_intrinsicSizeWithinSize:(struct CGSize { float x1; float x2; })arg1;
- (void)setImage:(id)arg1;
- (void)drawRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (id)initWithFrame:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)setBackgroundColor:(id)arg1;
- (void)setFrame:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (void)setBounds:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (void)dealloc;
- (id)tintColor;
- (void)setAlignmentRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (struct CGSize { float x1; float x2; })alignmentSize;
- (id)pu_extractPlayOverlayBackgroundImageFromCenter:(struct CGPoint { float x1; float x2; })arg1 asynchronously:(BOOL)arg2 handler:(id)arg3;

@end
