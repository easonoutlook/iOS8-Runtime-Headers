/* Generated by RuntimeBrowser.
   Image: /System/Library/PrivateFrameworks/Celestial.framework/Celestial
 */

@class NSString, NSObject<OS_dispatch_queue>, BWFigVideoCaptureDevice, BWNodeOutput;

@interface BWMultiStreamCameraSourceNode : BWSourceNode <BWFigCameraSourceNode> {
    struct OpaqueFigCaptureStream { } *_stream;
    BWNodeOutput *_previewOutput;
    BWNodeOutput *_videoCaptureOutput;
    BWNodeOutput *_stillImageOutput;
    BOOL _previewOutputEnabled;
    NSString *_previewOutputID;
    BOOL _videoCaptureOutputEnabled;
    BOOL _stillImageOutputEnabled;
    BOOL _videoStabilizationEnabled;
    struct { 
        int width; 
        int height; 
    } _videoDimensions;
    struct { 
        int width; 
        int height; 
    } _preferredPreviewDimensions;
    float _minFrameRate;
    float _maxFrameRate;
    int _resolvedFormatIndex;
    int _streamFormatIndex;
    BOOL _resolvedFormatIndexUpToDate;
    unsigned long _videoPixelFormat;
    unsigned long _streamVideoPixelFormat;
    BWFigVideoCaptureDevice *_captureDevice;
    struct BWStreamOutputStorage { 
        BOOL ready; 
        BOOL enabled; 
        BWNodeOutput *nodeOutput; 
        struct opaqueCMSimpleQueue {} *simpleQueue; 
        NSObject<OS_dispatch_queue> *bufferServicingQueue; 
        struct opaqueCMFormatDescription {} *cachedFormatDescription; 
        int frameCount; 
    } _outputsStorage[4];
}

@property(readonly) BWNodeOutput * previewOutput;
@property(readonly) BWFigVideoCaptureDevice * captureDevice;
@property(readonly) BWNodeOutput * videoCaptureOutput;
@property(readonly) BWNodeOutput * stillImageOutput;

+ (id)cameraSourceNodeWithCaptureDevice:(id)arg1;
+ (void)initialize;

- (struct { int x1; int x2; })preferredPreviewDimensions;
- (unsigned long)videoPixelFormat;
- (long)_updateOutputConfigurations;
- (void)_flushOutRemainingBuffersAndMarkEOD;
- (void)_updateStreamOutputToNodeOutputMapping;
- (void)_enableOutputs;
- (void)_updatePreviewOutputID;
- (void)_registerStreamOutputHandlers;
- (float)maxFrameRate;
- (float)minFrameRate;
- (id)_initWithCaptureDevice:(id)arg1;
- (long)_bringStreamUpToDate;
- (BOOL)hasNonLiveConfigurationChanges;
- (void)makeCurrentConfigurationLive;
- (BOOL)stop:(id*)arg1;
- (void)setVideoCaptureOutputEnabled:(BOOL)arg1;
- (void)setStillImageOutputEnabled:(BOOL)arg1;
- (void)setPreferredPreviewDimensions:(struct { int x1; int x2; })arg1;
- (void)setPreviewOutputEnabled:(BOOL)arg1;
- (void)setVideoStabilizationEnabled:(BOOL)arg1;
- (void)setVideoDimensions:(struct { int x1; int x2; })arg1;
- (void)setVideoPixelFormat:(unsigned long)arg1;
- (BOOL)stillImageOutputEnabled;
- (BOOL)videoCaptureOutputEnabled;
- (id)previewOutput;
- (BOOL)previewOutputEnabled;
- (void)updateOutputRequirements;
- (void)setMaxFrameRate:(float)arg1;
- (void)setMinFrameRate:(float)arg1;
- (id)stillImageOutput;
- (id)videoCaptureOutput;
- (BOOL)videoStabilizationEnabled;
- (struct { int x1; int x2; })videoDimensions;
- (struct OpaqueCMClock { }*)clock;
- (BOOL)start:(id*)arg1;
- (id)captureDevice;
- (void)prepareForCurrentConfigurationToBecomeLive;
- (id)nodeSubType;
- (void)dealloc;

@end
