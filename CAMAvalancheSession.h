/* Generated by RuntimeBrowser.
   Image: /System/Library/PrivateFrameworks/CameraKit.framework/CameraKit
 */

@class NSObject<OS_dispatch_source>, NSObject<OS_dispatch_queue>, <CAMAvalancheSessionDelegate>, CIBurstImageSet, CAMInflightAsset, NSString, NSDate, NSMutableDictionary;

@interface CAMAvalancheSession : NSObject  {
    int _type;
    <CAMAvalancheSessionDelegate> *_delegate;
    int _state;
    NSString *_uuid;
    unsigned int _numberOfPhotos;
    CAMInflightAsset *_possibleAvalancheAsset;
    NSMutableDictionary *__assets;
    NSDate *__expirationDate;
    NSObject<OS_dispatch_source> *__expirationTimer;
    NSObject<OS_dispatch_queue> *__expirationQueue;
    CIBurstImageSet *__burstImageSet;
}

@property(readonly) int type;
@property <CAMAvalancheSessionDelegate> * delegate;
@property int state;
@property(copy,readonly) NSString * uuid;
@property(readonly) unsigned int numberOfPhotos;
@property(retain) CAMInflightAsset * possibleAvalancheAsset;
@property(readonly) NSMutableDictionary * _assets;
@property(setter=_setExpirationDate:,retain) NSDate * _expirationDate;
@property(readonly) NSObject<OS_dispatch_source> * _expirationTimer;
@property(readonly) NSObject<OS_dispatch_queue> * _expirationQueue;
@property(readonly) CIBurstImageSet * _burstImageSet;


- (id)_assets;
- (id)assetWithUUID:(id)arg1;
- (id)_expirationQueue;
- (id)_expirationTimer;
- (id)_expirationDate;
- (id)possibleAvalancheAsset;
- (unsigned int)numberOfPhotos;
- (void)addAssetForAnalysis:(id)arg1 withIOSurface:(struct __IOSurface { }*)arg2 metadata:(id)arg3 completionHandler:(id)arg4;
- (BOOL)extend;
- (BOOL)_ensureValidStateChange:(int)arg1;
- (id)_burstImageSet;
- (void)_setPossibleAvalancheAsset:(id)arg1;
- (void)_expirationTimerFired;
- (id)assetsWithUUIDs:(id)arg1;
- (id)stackAssetIdentifier;
- (id)bestAssetIndentifiers;
- (id)allAssetIdentifiers;
- (void)_setExpirationDate:(id)arg1;
- (void)_teardownExpirationTimer;
- (void)finalizeWithAnalysis:(BOOL)arg1;
- (void)_setupExpirationTimer;
- (id)uuid;
- (void).cxx_destruct;
- (void)_setState:(int)arg1;
- (void)_didTransitionToState:(int)arg1;
- (id)initWithType:(int)arg1;
- (int)type;
- (int)state;
- (id)delegate;
- (void)_transitionToState:(int)arg1;
- (void)dealloc;
- (void)setDelegate:(id)arg1;
- (id)init;

@end
