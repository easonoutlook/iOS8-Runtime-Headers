/* Generated by RuntimeBrowser.
   Image: /System/Library/PrivateFrameworks/iWorkImport.framework/iWorkImport
 */

@class TSKTreeNode, NSMutableArray, TNUIState, TSSStylesheet, NSString, TNTheme, NSArray;

@interface TNDocumentRoot : TSADocumentRoot <TSTResolverContainerNameProvider> {
    TNTheme *mTheme;
    TSSStylesheet *mStylesheet;
    NSMutableArray *mSheets;
    TSKTreeNode *mSidebarOrder;
    unsigned int mSheetNameCounter;
    TNUIState *mUIState;
    BOOL mDocumentWasPreparedFromTemplate;
    BOOL _printingAllSheets;
    NSString *_printerID;
    NSString *_paperID;
    struct CGSize { 
        float width; 
        float height; 
    } _pageSize;
}

@property(readonly) TSSStylesheet * stylesheet;
@property(retain) TNTheme * theme;
@property(readonly) NSArray * sheets;
@property(copy) NSString * printerID;
@property(copy) NSString * paperID;
@property struct CGSize { float x1; float x2; } pageSize;
@property(readonly) unsigned int tableCount;
@property(retain,readonly) TSKTreeNode * sidebarOrder;
@property(retain) TNUIState * uiState;
@property(getter=isPrintingAllSheets) BOOL printingAllSheets;
@property(copy) NSArray * selectedQuickCalcFunctions;
@property BOOL removedAllQuickCalcFunctions;

+ (struct CGSize { float x1; float x2; })previewImageSizeForType:(unsigned int)arg1;
+ (struct CGSize { float x1; float x2; })previewImageMaxSizeForType:(unsigned int)arg1;

- (id)stylesheet;
- (void)setTheme:(id)arg1;
- (id)activeSheet;
- (struct CGSize { float x1; float x2; })pageSize;
- (id)theme;
- (id)childEnumerator;
- (void)setPageSize:(struct CGSize { float x1; float x2; })arg1;
- (unsigned int)applicationType;
- (id)printerID;
- (void)setPrinterID:(id)arg1;
- (id).cxx_construct;
- (id)initWithContext:(id)arg1;
- (void)dealloc;
- (void)setPrintingAllSheets:(BOOL)arg1;
- (BOOL)isPrintingAllSheets;
- (id)sidebarOrder;
- (void)sheet:(id)arg1 removedDrawable:(id)arg2;
- (void)sheet:(id)arg1 insertedDrawable:(id)arg2;
- (void)setSidebarChildren:(id)arg1 forSheet:(id)arg2;
- (BOOL)validNameForNewSheet:(id)arg1;
- (void)moveSheet:(id)arg1 toIndex:(unsigned int)arg2;
- (void)removeSheet:(id)arg1;
- (void)addSheet:(id)arg1 dolcContext:(id)arg2;
- (void)removeAllSheets;
- (unsigned int)tableCount;
- (void)setImportedPaperID:(id)arg1 printerID:(id)arg2;
- (void)initializeHardCodedBlankDocument;
- (struct CGSize { float x1; float x2; })p_adjustCapturedContentSize:(struct CGSize { float x1; float x2; })arg1 toAspectRatio:(struct CGSize { float x1; float x2; })arg2;
- (float)p_imageBorderForSize:(struct CGSize { float x1; float x2; })arg1;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })p_contentFrameToCaptureForSheet:(id)arg1;
- (id)p_previewImageWithImageSize:(struct CGSize { float x1; float x2; })arg1;
- (void)performDeferredUpgradeImportOperationsRequiringCalcEngine;
- (void)performDeferredUpgradeImportOperationsOnNewThreadForCharts:(id)arg1;
- (id)p_chartsWantingDeferredUpgrade;
- (id)paperID;
- (BOOL)removedAllQuickCalcFunctions;
- (void)setRemovedAllQuickCalcFunctions:(BOOL)arg1;
- (id)selectedQuickCalcFunctions;
- (void)setSelectedQuickCalcFunctions:(id)arg1;
- (id)p_resolverContainerForResolver:(id)arg1;
- (id)sheets;
- (BOOL)validName:(id)arg1 forRenamingSheet:(id)arg2;
- (void)p_addSidebarNodeForSheet:(id)arg1;
- (id)p_untitledSheetName;
- (void)p_removeSidebarNodeForSheet:(id)arg1;
- (void)insertSheet:(id)arg1 sheetIndex:(unsigned int)arg2 context:(id)arg3;
- (void)incrementSheetNameCounter;
- (unsigned int)p_tableCountForSheet:(id)arg1;
- (void)setPaperID:(id)arg1;
- (void)p_buildSidebarOrder;
- (void)setUiState:(id)arg1;
- (id)uiState;
- (id)resolversMatchingPrefix:(id)arg1;
- (id)resolverMatchingName:(id)arg1 contextContainerName:(id)arg2;
- (id)resolverMatchingName:(id)arg1 contextResolver:(id)arg2;
- (id)resolverContainerNamesMatchingPrefix:(id)arg1;
- (id)resolverContainerForName:(id)arg1 caseSensitive:(BOOL)arg2;
- (id)nameForResolverContainer:(id)arg1;
- (id)resolverContainerNameForResolver:(id)arg1;
- (void)setThemeForTemplateImport:(id)arg1;
- (BOOL)shouldAllowDrawableInGroups:(id)arg1 forImport:(BOOL)arg2;
- (void)initializeForImport;
- (void)prepareNewDocumentWithTemplateBundle:(id)arg1;
- (id)previewImageForSize:(struct CGSize { float x1; float x2; })arg1;
- (BOOL)isMultiPageForQuickLook;
- (void)documentDidLoad;
- (id)resolverMatchingName:(id)arg1;
- (void)saveToArchiver:(id)arg1;
- (id)initFromUnarchiver:(id)arg1;

@end
