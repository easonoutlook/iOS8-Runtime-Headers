/* Generated by RuntimeBrowser.
   Image: /System/Library/Frameworks/Metal.framework/Metal
 */

@class <MTLBuffer>;

@interface MTLFramebufferDescriptor : NSObject <NSCopying> {
    struct MTLFramebufferDescriptorPrivate { struct MTLAttachmentDescriptorPrivate { id x_1_1_1; unsigned int x_1_1_2; unsigned int x_1_1_3; unsigned int x_1_1_4; unsigned int x_1_1_5; unsigned int x_1_1_6; union { struct { double x_1_3_1; double x_1_3_2; double x_1_3_3; double x_1_3_4; } x_7_2_1; double x_7_2_2; unsigned long long x_7_2_3; } x_1_1_7; id x_1_1_8; unsigned int x_1_1_9; unsigned int x_1_1_10; unsigned int x_1_1_11; unsigned int x_1_1_12; unsigned int x_1_1_13; unsigned int x_1_1_14; unsigned int x_1_1_15; } x1[6]; unsigned int x2; unsigned int x3; id x4; BOOL x5; } *_private;
}

@property(retain) <MTLBuffer> * visibilityResultBuffer;

+ (id)framebufferDescriptorWithColorAttachment:(id)arg1 depthAttachment:(id)arg2 stencilAttachment:(id)arg3;
+ (id)framebufferDescriptorWithColorAttachment:(id)arg1;
+ (id)framebufferDescriptor;

- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (BOOL)validate;
- (unsigned int)hash;
- (BOOL)isEqual:(id)arg1;
- (const struct MTLFramebufferDescriptorPrivate { struct MTLAttachmentDescriptorPrivate { id x_1_1_1; unsigned int x_1_1_2; unsigned int x_1_1_3; unsigned int x_1_1_4; unsigned int x_1_1_5; unsigned int x_1_1_6; union { struct { double x_1_3_1; double x_1_3_2; double x_1_3_3; double x_1_3_4; } x_7_2_1; double x_7_2_2; unsigned long long x_7_2_3; } x_1_1_7; id x_1_1_8; unsigned int x_1_1_9; unsigned int x_1_1_10; unsigned int x_1_1_11; unsigned int x_1_1_12; unsigned int x_1_1_13; unsigned int x_1_1_14; unsigned int x_1_1_15; } x1[6]; unsigned int x2; unsigned int x3; id x4; BOOL x5; }*)_descriptorPrivate;
- (id)copyAttachmentAtIndex:(unsigned int)arg1;
- (id)initWithDescriptorPrivate:(const struct MTLFramebufferDescriptorPrivate { struct MTLAttachmentDescriptorPrivate { id x_1_1_1; unsigned int x_1_1_2; unsigned int x_1_1_3; unsigned int x_1_1_4; unsigned int x_1_1_5; unsigned int x_1_1_6; union { struct { double x_1_3_1; double x_1_3_2; double x_1_3_3; double x_1_3_4; } x_7_2_1; double x_7_2_2; unsigned long long x_7_2_3; } x_1_1_7; id x_1_1_8; unsigned int x_1_1_9; unsigned int x_1_1_10; unsigned int x_1_1_11; unsigned int x_1_1_12; unsigned int x_1_1_13; unsigned int x_1_1_14; unsigned int x_1_1_15; } x1[6]; unsigned int x2; unsigned int x3; id x4; BOOL x5; }*)arg1;
- (void)setAttachment:(id)arg1 atIndex:(unsigned int)arg2;
- (id)initWithColorAttachment:(id)arg1 depthAttachment:(id)arg2 stencilAttachment:(id)arg3;
- (id)initWithColorAttachment:(id)arg1;
- (void)setVisibilityResultBuffer:(id)arg1;
- (id)visibilityResultBuffer;
- (void)dealloc;
- (id)init;

@end
