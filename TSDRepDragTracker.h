/* Generated by RuntimeBrowser.
   Image: /System/Library/PrivateFrameworks/iWorkImport.framework/iWorkImport
 */

@class <TSDRepDragTrackerDelegate>, TSDAutoscroll, NSTimer, TSDHUDViewController, CAShapeLayer, TSDRep, TSUPointerKeyDictionary, NSMutableSet;

@interface TSDRepDragTracker : NSObject <TSDLayoutManipulatingTracker, TSDDecorator, TSDRepTracker> {
    TSDRep *mRep;
    BOOL mDidBeginDrag;
    BOOL mHaveShownHUD;
    BOOL mHaveShownSecondHUD;
    BOOL mHaveShownRuler;
    BOOL mIsInspectorDrivenTracking;
    BOOL mIsDragInsertDrivenTracking;
    struct CGPoint { 
        float x; 
        float y; 
    } mInitialDragPoint;
    struct CGPoint { 
        float x; 
        float y; 
    } mActualDragPoint;
    struct CGPoint { 
        float x; 
        float y; 
    } mPreviousActualDragPoint;
    struct CGPoint { 
        float x; 
        float y; 
    } mLogicalDragPoint;
    TSDHUDViewController *mSecondHUDController;
    struct CGPoint { 
        float x; 
        float y; 
    } mUnscaledDragDelta;
    BOOL mRoundDragDelta;
    NSTimer *mRulerTimer;
    TSDAutoscroll *mAutoscroll;
    struct CGPoint { 
        float x; 
        float y; 
    } mAutoscrollPoint;
    <TSDRepDragTrackerDelegate> *mDelegate;
    BOOL mInWillBeginDynamicOperation;
    BOOL mInDidEndDynamicOperation;
    TSUPointerKeyDictionary *mMapRepsToSnapOffsets;
    BOOL mShouldConstrain;
    float mSnapLevel;
    float mConstraintAngle;
    struct CGPoint { 
        float x; 
        float y; 
    } mConstrainingPoint;
    BOOL mConstraintGuidesShowing;
    CAShapeLayer *mGuideLayer;
    BOOL mShouldShowGuides;
    BOOL mShouldSnapToGuides;
    BOOL mAlreadyInCommandGroup;
    NSMutableSet *mConnectedLineLayouts;
    BOOL mShowDragHUD;
    BOOL mShouldShowRuler;
    BOOL mTrackerDidBeginDragging;
}

@property(retain) TSDRep * rep;
@property(readonly) BOOL didBeginDrag;
@property BOOL shouldSnapToGuides;
@property BOOL shouldShowGuides;
@property BOOL alreadyInCommandGroup;
@property BOOL isDragInsertDrivenTracking;
@property BOOL showDragHUD;
@property BOOL shouldShowRuler;
@property BOOL isInspectorDrivenTracking;


- (id)actionForLayer:(id)arg1 forKey:(id)arg2;
- (void)dealloc;
- (void)setAlreadyInCommandGroup:(BOOL)arg1;
- (void)setShouldSnapToGuides:(BOOL)arg1;
- (void)setShouldShowRuler:(BOOL)arg1;
- (BOOL)shouldShowRuler;
- (void)setShowDragHUD:(BOOL)arg1;
- (BOOL)showDragHUD;
- (void)setIsDragInsertDrivenTracking:(BOOL)arg1;
- (BOOL)didBeginDrag;
- (BOOL)handlesCopyingObjects;
- (void)setShouldShowGuides:(BOOL)arg1;
- (void)setConstrainingPoint:(struct CGPoint { float x1; float x2; })arg1;
- (void)setSnapLevel:(float)arg1;
- (void)setShouldConstrain:(BOOL)arg1;
- (void)setLogicalDragPoint:(struct CGPoint { float x1; float x2; })arg1;
- (void)setActualDragPoint:(struct CGPoint { float x1; float x2; })arg1;
- (void)addUnscaledDragDelta:(struct CGPoint { float x1; float x2; })arg1 roundDeltaToViewScale:(BOOL)arg2;
- (void)endPossibleRepDragGesture;
- (void)willEndPossibleRepDragGesture;
- (void)beginShowingDragUIForInitialDragPoint:(struct CGPoint { float x1; float x2; })arg1;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })p_selectedInfosRect;
- (BOOL)isDragInsertDrivenTracking;
- (void)p_updateHUDAtPoint:(struct CGPoint { float x1; float x2; })arg1;
- (BOOL)alreadyInCommandGroup;
- (BOOL)shouldShowGuides;
- (void)p_makeSiblingRepsOfRep:(id)arg1 performBlock:(id)arg2;
- (void)p_didBeginDrag;
- (BOOL)shouldSnapToGuides;
- (void)p_showGuideLayer;
- (void)p_updateHUDFromTimer;
- (void)p_updateGuides;
- (void)p_displayRulerAndRect;
- (id)p_repsForInfos:(id)arg1 fromReps:(id)arg2;
- (id)p_infosFromReps:(id)arg1;
- (BOOL)p_delegateIsHandlingDrag;
- (void)p_hideGuideLayer;
- (void)setRep:(id)arg1;
- (id)decoratorOverlayLayers;
- (id)selectionBehaviorForReps:(id)arg1;
- (id)repsForGuidesWhenManipulatingReps:(id)arg1;
- (void)didEndDynamicOperationForReps:(id)arg1;
- (void)didChangeCurrentlyTransformingReps;
- (void)willBeginDynamicOperationForReps:(id)arg1;
- (BOOL)operationShouldBeDynamic;
- (BOOL)supportsAlignmentGuides;
- (void)commitChangesForReps:(id)arg1;
- (void)setIsInspectorDrivenTracking:(BOOL)arg1;
- (BOOL)isInspectorDrivenTracking;
- (void)p_hideHUD;
- (BOOL)shouldOpenCommandGroupToCommitChangesForReps:(id)arg1;
- (void)changeDynamicLayoutsForReps:(id)arg1;
- (id)rep;
- (id)initWithRep:(id)arg1;

@end
