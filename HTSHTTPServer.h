/* Generated by RuntimeBrowser.
   Image: /System/Library/PrivateFrameworks/iAdDeveloper.framework/iAdDeveloper
 */

@class <HTSHTTPServerDelegate>, NSString, NSObject<OS_dispatch_source>, NSObject<OS_dispatch_queue>, NSMutableArray, NSMutableDictionary;

@interface HTSHTTPServer : NSObject  {
    int _listenSocket4;
    NSMutableArray *_activeConnections;
    NSObject<OS_dispatch_queue> *_serverQueue;
    NSObject<OS_dispatch_source> *_listenSource4;
    NSString *_nodename;
    unsigned long long _bytesWritten;
    double _lastReplenishTime;
    NSMutableDictionary *_authTokens;
    BOOL _digestAuthenticationEnabled;
    BOOL _pipeliningEnabled;
    unsigned short _port;
    <HTSHTTPServerDelegate> *_delegate;
    NSObject<OS_dispatch_queue> *_delegateQueue;
    struct __CFHTTPMessage { } *_currentRequest;
    NSString *_documentRoot;
    int _cacheMaxAge;
    double _latency;
    double _latencyStddev;
    double _kbps;
    double _bandwidthStddev;
    unsigned long long _totalBytesWritten;
}

@property <HTSHTTPServerDelegate> * delegate;
@property NSObject<OS_dispatch_queue> * delegateQueue;
@property(readonly) unsigned short port;
@property(readonly) NSString * urlString;
@property(copy) NSString * documentRoot;
@property BOOL digestAuthenticationEnabled;
@property double latency;
@property double latencyStddev;
@property double kbps;
@property double bandwidthStddev;
@property int cacheMaxAge;
@property BOOL pipeliningEnabled;
@property(readonly) unsigned long long totalBytesWritten;
@property struct __CFHTTPMessage { }* currentRequest;


- (void)setPipeliningEnabled:(BOOL)arg1;
- (BOOL)pipeliningEnabled;
- (void)setCacheMaxAge:(int)arg1;
- (int)cacheMaxAge;
- (unsigned long long)totalBytesWritten;
- (void)setBandwidthStddev:(double)arg1;
- (double)bandwidthStddev;
- (double)kbps;
- (void)setLatencyStddev:(double)arg1;
- (double)latencyStddev;
- (void)setDigestAuthenticationEnabled:(BOOL)arg1;
- (BOOL)digestAuthenticationEnabled;
- (void)setKbps:(double)arg1;
- (void)consumedBandwidth:(unsigned long long)arg1;
- (unsigned long long)availableBandwidth;
- (void)_connection:(id)arg1 didReceiveRequest:(id)arg2;
- (void)_connection:(id)arg1 hadError:(id)arg2;
- (void)_connectionComplete:(id)arg1;
- (id)_authenticationResponseForRequest:(id)arg1;
- (void)_respondWithData:(id)arg1 mimeType:(id)arg2 toRequest:(id)arg3 connection:(id)arg4;
- (id)_restrictedFilePathForRelativePath:(id)arg1;
- (void)_returnResponse:(id)arg1 toConnection:(id)arg2 closeAfterSending:(BOOL)arg3;
- (id)_mimeTypeForExtension:(id)arg1;
- (void)_handleGeneralRequest:(id)arg1 fromConnection:(id)arg2;
- (double)_currentLatency;
- (void)_cleanupListenSocket;
- (id)initWithPort:(unsigned short)arg1 documentRoot:(id)arg2;
- (BOOL)_listenOnPort:(unsigned short)arg1;
- (void)resetNetworkSetup;
- (void)setLatency:(double)arg1;
- (void)setDocumentRoot:(id)arg1;
- (id)documentRoot;
- (struct __CFHTTPMessage { }*)currentRequest;
- (void)setDelegateQueue:(id)arg1;
- (id)delegateQueue;
- (id)urlString;
- (unsigned short)port;
- (id)delegate;
- (double)latency;
- (void)dealloc;
- (void)setDelegate:(id)arg1;
- (id)init;
- (void)setCurrentRequest:(struct __CFHTTPMessage { }*)arg1;

@end
