/* Generated by RuntimeBrowser.
   Image: /System/Library/PrivateFrameworks/iWorkImport.framework/iWorkImport
 */

@class TSCH3DAnimationTimeSlice, TSCH3DCascadeAnimationTimeSlice, NSDictionary;

@interface TSCH3DSetAnimationTimeSlice : TSCH3DAnimationTimeSlice  {
    NSDictionary *mSetDictionary;
    NSDictionary *mNegativeSetDictionary;
    TSCH3DAnimationTimeSlice *mSetInterpolation;
    TSCH3DCascadeAnimationTimeSlice *mCascadeInterpolator;
}

+ (id)timeSliceWithIndexSet:(id)arg1 interceptRelativeUnitSpaceValues:(const struct vector<float, std::__1::allocator<float> > { float *x1; float *x2; struct __compressed_pair<float *, std::__1::allocator<float> > { float *x_3_1_1; } x3; }*)arg2 setInterpolation:(id)arg3 size:(struct tvec2<int> { union { int x_1_1_1; int x_1_1_2; int x_1_1_3; } x1; union { int x_2_1_1; int x_2_1_2; int x_2_1_3; } x2; }*)arg4 cascadeSets:(BOOL)arg5;
+ (void)addInterpolatorsToSets:(const struct map<unsigned int, NSMutableIndexSet *, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, NSMutableIndexSet *> > > { struct __tree<std::__1::__value_type<unsigned int, NSMutableIndexSet *>, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, NSMutableIndexSet *>, std::__1::less<unsigned int>, true>, std::__1::allocator<std::__1::__value_type<unsigned int, NSMutableIndexSet *> > > { struct __tree_node<std::__1::__value_type<unsigned int, NSMutableIndexSet *>, void *> {} *x_1_1_1; struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, NSMutableIndexSet *>, void *> > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> { struct __tree_node_base<void *> {} *x_1_3_1; } x_2_2_1; } x_1_1_2; struct __compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, NSMutableIndexSet *>, std::__1::less<unsigned int>, true> > { unsigned long x_3_2_1; } x_1_1_3; } x1; }*)arg1 dictionary:(id)arg2 values:(const struct vector<float, std::__1::allocator<float> > { float *x1; float *x2; struct __compressed_pair<float *, std::__1::allocator<float> > { float *x_3_1_1; } x3; }*)arg3 size:(struct tvec2<int> { union { int x_1_1_1; int x_1_1_2; int x_1_1_3; } x1; union { int x_2_1_1; int x_2_1_2; int x_2_1_3; } x2; }*)arg4;

- (void)dealloc;
- (id)p_orderedTimeSliceForIndex:(struct tvec2<int> { union { int x_1_1_1; int x_1_1_2; int x_1_1_3; } x1; union { int x_2_1_1; int x_2_1_2; int x_2_1_3; } x2; }*)arg1;
- (id)initWithSetDictionary:(id)arg1 negativeSetDictionary:(id)arg2 setInterpolation:(id)arg3 cascadeInterpolator:(id)arg4;
- (struct box<glm::detail::tvec1<float> > { struct tvec1<float> { union { float x_1_2_1; float x_1_2_2; float x_1_2_3; } x_1_1_1; } x1; struct tvec1<float> { union { float x_1_2_1; float x_1_2_2; float x_1_2_3; } x_2_1_1; } x2; })rangeForIndex:(const struct tvec2<int> { union { int x_1_1_1; int x_1_1_2; int x_1_1_3; } x1; union { int x_2_1_1; int x_2_1_2; int x_2_1_3; } x2; }*)arg1;

@end
