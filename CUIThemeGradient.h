/* Generated by RuntimeBrowser.
   Image: /System/Library/PrivateFrameworks/CoreUI.framework/CoreUI
 */

@interface CUIThemeGradient : NSObject <CUIThemeGradientDrawing> {
    id gradientEvaluator;
    struct CGFunction { } *colorShader;
    struct CGColorSpace { } *colorSpace;
}


- (void)drawFromPoint:(struct CGPoint { float x1; float x2; })arg1 toPoint:(struct CGPoint { float x1; float x2; })arg2 options:(unsigned int)arg3;
- (id)opacityLocations;
- (id)colorLocations;
- (id)initWithColors:(id)arg1 colorlocations:(id)arg2 colorMidpoints:(id)arg3 opacities:(id)arg4 opacityLocations:(id)arg5 opacityMidpoints:(id)arg6 smoothingCoefficient:(float)arg7 fillColor:(id)arg8 colorSpace:(struct CGColorSpace { }*)arg9;
- (id)interpolatedColorAtLocation:(float)arg1;
- (struct CGFunction { }*)colorShader;
- (struct CGFunction { }*)_newColorShaderForDistance:(float)arg1;
- (void)drawFromPoint:(struct CGPoint { float x1; float x2; })arg1 toPoint:(struct CGPoint { float x1; float x2; })arg2 options:(unsigned int)arg3 withContext:(struct CGContext { }*)arg4;
- (id)_colorFromPSDGradientColor:(struct _psdGradientColor { double x1; double x2; double x3; double x4; })arg1;
- (id)_initWithGradientEvaluator:(id)arg1 colorSpace:(struct CGColorSpace { }*)arg2;
- (id)_psdGradientOpacityStopsWithOpacities:(id)arg1 locations:(id)arg2;
- (id)_psdGradientColorStopsWithColors:(id)arg1 locations:(id)arg2 colorSpace:(struct CGColorSpace { }*)arg3;
- (id)initWithColors:(id)arg1 colorlocations:(id)arg2 colorMidpoints:(id)arg3 opacities:(id)arg4 opacityLocations:(id)arg5 opacityMidpoints:(id)arg6 smoothingCoefficient:(float)arg7 fillColor:(id)arg8 colorSpace:(struct CGColorSpace { }*)arg9 dither:(BOOL)arg10;
- (struct _psdGradientColor { double x1; double x2; double x3; double x4; })_psdGradientColorWithColor:(id)arg1 colorSpace:(struct CGColorSpace { }*)arg2;
- (void)drawInRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1 angle:(float)arg2;
- (void)drawInRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1 relativeCenterPosition:(struct CGPoint { float x1; float x2; })arg2 withContext:(struct CGContext { }*)arg3;
- (void)drawInRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1 angle:(float)arg2 withContext:(struct CGContext { }*)arg3;
- (BOOL)isDithered;
- (float)smoothingCoefficient;
- (id)opacityStops;
- (id)colorStops;
- (id)fillColor;
- (int)blendMode;
- (void)dealloc;

@end
