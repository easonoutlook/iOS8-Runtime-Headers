/* Generated by RuntimeBrowser.
   Image: /System/Library/PrivateFrameworks/PowerlogLiteOperators.framework/PowerlogLiteOperators
 */

@class PLXPCResponderOperatorComposition;

@interface PLBLDService : PLService  {
    PLXPCResponderOperatorComposition *_xpcResponderUIBattery;
    PLXPCResponderOperatorComposition *_xpcResponderUIBatteryForModels;
}

@property(retain) PLXPCResponderOperatorComposition * xpcResponderUIBattery;
@property(retain) PLXPCResponderOperatorComposition * xpcResponderUIBatteryForModels;

+ (void)load;

- (id)xpcResponderUIBatteryForModels;
- (id)xpcResponderUIBattery;
- (id)TestQuery:(id)arg1;
- (id)qualifiersForEntry:(id)arg1;
- (id)getEntryForBundleName:(id)arg1 inAppArray:(id)arg2;
- (double)totalEnergyReturned:(id)arg1;
- (void)fetchAggregateResultsInRange:(struct _PLTimeIntervalRange { double x1; double x2; })arg1;
- (id)getBatteryDrainInRange:(struct _PLTimeIntervalRange { double x1; double x2; })arg1;
- (BOOL)setQualifier:(int)arg1 onBundle:(id)arg2;
- (BOOL)isStringAValidName:(id)arg1;
- (id)appNameForBundleID:(id)arg1;
- (BOOL)isStringAValidBundleName:(id)arg1;
- (void)setQualifiersForAppArray:(id)arg1 withTotalEnergy:(double)arg2;
- (BOOL)shouldAppBeDisplayed:(int)arg1 forQuery:(int)arg2;
- (int)appTypeForBundleID:(id)arg1 withValidBundles:(id)arg2;
- (id)combineEntitiesInArray:(id)arg1 withTransformation:(id)arg2;
- (id)screenLock:(id)arg1;
- (id)aggregateStatsResultWithBucketLength:(double)arg1 inTimeIntervalRange:(struct _PLTimeIntervalRange { double x1; double x2; })arg2;
- (id)recommendSetting:(double)arg1 inTimeIntervalRange:(struct _PLTimeIntervalRange { double x1; double x2; })arg2;
- (id)aggregateResult:(id)arg1 withBucketLength:(double)arg2 inTimeIntervalRange:(struct _PLTimeIntervalRange { double x1; double x2; })arg3 queryType:(int)arg4 withValidBundle:(id)arg5;
- (id)thridPartyInstalledBundles;
- (void)setXpcResponderUIBatteryForModels:(id)arg1;
- (id)UIQueryResponseForModels:(id)arg1;
- (void)setXpcResponderUIBattery:(id)arg1;
- (id)UIQueryResponse:(id)arg1;
- (void)initOperatorDependancies;
- (void).cxx_destruct;
- (id)init;

@end
