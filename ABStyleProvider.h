/* Generated by RuntimeBrowser.
   Image: /System/Library/Frameworks/AddressBookUI.framework/AddressBookUI
 */

@class UIImage, UIColor, UIView, _UIGraphicsLetterpressStyle, UIFont;

@interface ABStyleProvider : NSObject <ABStyleProvider> {
}

@property(readonly) BOOL cardTableShouldRemoveBackgroundView;
@property(readonly) BOOL cardTableShouldAdjustForKeyboard;
@property(readonly) _UIGraphicsLetterpressStyle * letterpressStyle;
@property(readonly) BOOL shouldUseCardContentProviderWhenAvailable;
@property(readonly) UIColor * cardTableCellBorderColor;
@property(readonly) UIColor * cardHeadlineTextColor;
@property(readonly) UIColor * cardHeadlineShadowColor;
@property(readonly) UIFont * cardHeadlineTextFont;
@property(readonly) UIColor * cardTaglineTextColor;
@property(readonly) UIColor * cardTaglineShadowColor;
@property(readonly) UIFont * cardTaglineTextFont;
@property(readonly) unsigned int cardNameNumberOfLines;
@property(readonly) unsigned int cardTagNumberOfLines;
@property(readonly) UIColor * cardHeaderDefaultLabelTextColor;
@property(readonly) BOOL cardHeaderNameViewAlignOnBottom;
@property(readonly) BOOL shouldShowCardPhotoPlaceholder;
@property(readonly) BOOL cardPlaceholderImageShouldApplyMaskAndOverlay;
@property(readonly) UIImage * cardPlaceholderPersonImage;
@property(readonly) UIImage * cardPlaceholderCompanyImage;
@property(readonly) UIImage * cardPhotoBackgroundImage;
@property(readonly) UIImage * cardPhotoOverlayImage;
@property(readonly) BOOL cardPhotoShouldApplyOverlayImageWhenPersonImagePresent;
@property(readonly) BOOL cardPhotoShouldApplyOverlayImageWhenLabelPresent;
@property(readonly) BOOL shouldApplyMaskImage;
@property(readonly) float cardPhotoFrameBorderSize;
@property(readonly) struct CGSize { float x1; float x2; } cardPhotoOffset;
@property(readonly) UIImage * cardPhotoMaskImage;
@property(readonly) UIImage * cardPhotoShadowImage;
@property(readonly) struct CGSize { float x1; float x2; } cardPhotoShadowOffset;
@property(readonly) UIImage * cardPhotoEditPlaceholderImage;
@property(readonly) UIImage * cardPhotoEditOverlayImage;
@property(readonly) UIImage * cardPhotoEditMultipleOverlayImage;
@property(readonly) UIImage * cardPhotoEditMultiplePhotoBackdropImage;
@property(readonly) UIImage * cardPhotoMaskMultipleImage;
@property(readonly) UIImage * cardPhotoPasteboardMaskImage;
@property(readonly) UIImage * cardPhotoFacebookAttributionImage;
@property(readonly) UIColor * cardClippingImageLabelColor;
@property(readonly) UIColor * cardClippingImageLabelBevelColor;
@property(readonly) float cardHeaderImageNameSpacing;
@property(readonly) float cardHeaderImageNameEditorSpacing;
@property(readonly) UIColor * cardHeaderBackgroundColor;
@property(readonly) float cardHeaderViewTopMargin;
@property(readonly) float cardHeaderViewLeftMargin;
@property(readonly) float cardHeaderDisplayImageTopMargin;
@property(readonly) float cardHeaderDisplayImageLeftMargin;
@property(readonly) float cardHeaderEditingImageTopMargin;
@property(readonly) float cardHeaderEditingImageLeftMargin;
@property(readonly) UIColor * cardTableBackgroundColor;
@property(readonly) UIColor * cardSectionBackgroundColor;
@property(readonly) UIColor * cardLabelSelectedBackgroundColor;
@property(readonly) UIColor * cardLabelTextColor;
@property(readonly) UIColor * cardLabelDisabledTextColor;
@property(readonly) UIColor * cardLabelEditingTextColor;
@property(readonly) UIColor * cardLabelHighlightedTextColor;
@property(readonly) UIColor * cardLabelEmphasizedHighlightedTextColor;
@property(readonly) UIColor * cardLabelImportantHighlightedTextColor;
@property(readonly) UIColor * cardLabelShadowColor;
@property(readonly) UIColor * cardLabelHighlightedShadowColor;
@property(readonly) struct CGSize { float x1; float x2; } cardLabelShadowOffset;
@property(readonly) UIFont * cardLabelTextFont;
@property(readonly) UIFont * cardLabelEditingTextFont;
@property(readonly) float cardLabelWidth;
@property(readonly) UIColor * cardLabelBackgroundColor;
@property(readonly) struct UIEdgeInsets { float x1; float x2; float x3; float x4; } cardLabelInsets;
@property(readonly) UIColor * cardValueTextColor;
@property(readonly) UIColor * cardValueDisabledTextColor;
@property(readonly) UIFont * cardValueTextFont;
@property(readonly) UIColor * cardValueBackgroundColor;
@property(readonly) UIColor * cardValueHighlightedTextColor;
@property(readonly) UIColor * cardValueShadowColor;
@property(readonly) UIColor * cardValueHighlightedShadowColor;
@property(readonly) struct CGSize { float x1; float x2; } cardValueShadowOffset;
@property(readonly) BOOL cardValueHighlightsWhenTouched;
@property(readonly) struct UIEdgeInsets { float x1; float x2; float x3; float x4; } cardValueInsets;
@property(readonly) struct UIEdgeInsets { float x1; float x2; float x3; float x4; } cardValueEditingInsets;
@property(readonly) UIColor * cardValueTappableColor;
@property(readonly) UIImage * cardValueClearButtonImage;
@property(readonly) BOOL cardSectionAlwaysWantsHeader;
@property(readonly) UIFont * cardSectionHeaderFont;
@property(readonly) UIColor * cardSectionHeaderTextColor;
@property(readonly) UIColor * cardSectionHeaderShadowColor;
@property(readonly) struct CGSize { float x1; float x2; } cardSectionHeaderShadowOffset;
@property(readonly) float cardSectionHeaderHorizontalPadding;
@property(readonly) BOOL cardSectionDrawsDefaultTopShadow;
@property(readonly) float cardSectionHeaderHeightForBottomActions;
@property(readonly) BOOL cardShouldUseSeparateSectionsForUnknownCardActions;
@property(readonly) float cardSectionHeaderHeightForFirstCardActions;
@property(readonly) float cardSectionHeaderHeightForFollowingCardActions;
@property(readonly) int cardCellAccessoryType;
@property(readonly) int cardCellAccessoryTypeEdit;
@property(readonly) int cardCellAccessoryTypeRingtone;
@property(readonly) int cardCellAccessoryTypeEditRingtone;
@property(readonly) float cardCellBadgePaddingLeft;
@property(readonly) UIImage * cardCellFacebookBadge;
@property(readonly) float cardCellVerticalSpacingBetweenAlertsOfSimilarType;
@property(readonly) int cardActionButtonType;
@property(readonly) UIImage * cardActionButtonBackgroundNormal;
@property(readonly) UIImage * cardActionButtonBackgroundHighlighted;
@property(readonly) struct UIEdgeInsets { float x1; float x2; float x3; float x4; } cardActionButtonTitleSingleLineInsets;
@property(readonly) struct UIEdgeInsets { float x1; float x2; float x3; float x4; } cardActionButtonTitleDoubleLineInsets;
@property(readonly) struct UIEdgeInsets { float x1; float x2; float x3; float x4; } cardActionButtonImageInsets;
@property(readonly) float cardActionButtonSpacing;
@property(readonly) float cardActionButtonHeight;
@property(readonly) UIImage * cardActionConferenceIcon;
@property(readonly) UIImage * cardActionConferenceIconPressed;
@property(readonly) struct UIEdgeInsets { float x1; float x2; float x3; float x4; } cardActionButtonsInsets;
@property(readonly) BOOL cardActionsAllowFaceTimeFavorites;
@property(readonly) BOOL cardActionsAllowVoiceFavorites;
@property(readonly) float cardContentOccluderDefaultTopFadingHeight;
@property(readonly) float cardContentOccluderDefaultBottomFadingHeight;
@property(readonly) UIColor * cardCellBackgroundColor;
@property(readonly) UIColor * cardCellDisabledBackgroundColor;
@property(readonly) int cardCellSelectionStyle;
@property(readonly) BOOL cardAlwaysShowsNotes;
@property(readonly) BOOL cardNotesLabelIncludesSource;
@property(readonly) float cardNotesHeaderViewHeight;
@property(readonly) UIView * cardNotesHeaderView;
@property(readonly) BOOL linkedCardsShouldAllowDeletion;
@property(readonly) float cardLinkingHeaderLabelHeight;
@property(readonly) BOOL linkedPhotoPickerIncludesCurrentPhoto;
@property(readonly) BOOL linkedPhotoLabelStringsDescribeSourceOnly;
@property(readonly) BOOL cardTableUsesRowFadeAnimation;
@property(readonly) BOOL datePickerHasNavigationTitle;
@property(readonly) BOOL labelPickerShouldPushCustomLabelCreator;
@property(readonly) BOOL labelPickerUsesOpaqueBackground;
@property(readonly) UIFont * memberNameRegularFont;
@property(readonly) UIFont * memberNamePlaceholderFont;
@property(readonly) UIFont * memberNameBoldFont;
@property(readonly) UIFont * memberNameRegularFontForSectionHeader;
@property(readonly) UIFont * memberNameBoldFontForSectionHeader;
@property(readonly) float memberNameInterComponentSpacing;
@property(readonly) UIColor * memberNameTextColor;
@property(readonly) UIColor * memberNameDisabledTextColor;
@property(readonly) UIColor * memberNameSelectedColor;
@property(readonly) UIColor * memberNameMeCardTextColor;
@property(readonly) UIColor * memberNameMeCardShadowColor;
@property(readonly) UIImage * memberNameMeCardImage;
@property(readonly) UIImage * memberNameMeCardSelectedImage;
@property(readonly) UIImage * memberNameMeCardDisabledImage;
@property(readonly) UIColor * memberNameShadowColor;
@property(readonly) UIColor * memberNameSelectedShadowColor;
@property(readonly) UIColor * memberSearchFieldBackgroundColor;
@property(readonly) struct CGSize { float x1; float x2; } memberNameShadowOffset;
@property(readonly) struct UIEdgeInsets { float x1; float x2; float x3; float x4; } memberNameInsets;
@property(readonly) BOOL memberShowContactPhoto;
@property(readonly) UIImage * memberPhotoMaskImage;
@property(readonly) UIImage * memberPhotoOverlayImage;
@property(readonly) UIImage * memberPlaceholderPersonImage;
@property(readonly) UIImage * memberPlaceholderCompanyImage;
@property(readonly) float memberScrollBarInset;
@property(readonly) UIColor * memberSelectedBackgroundColor;
@property(readonly) BOOL searchIsAlwaysActive;
@property(readonly) BOOL serverSearchNavigationBarHidingEnabled;
@property(readonly) BOOL searchControllerForceKeyboardDisplayEnabled;
@property(readonly) UIImage * memberSectionListHeaderImage;
@property(readonly) int membersSelectionStyle;
@property(readonly) unsigned int membersCountToShowSections;
@property(readonly) unsigned int membersCountToShowIndex;
@property(readonly) BOOL membersSearchBarIsInTableHeader;
@property(readonly) float membersIndexMaximumHeight;
@property(readonly) UIColor * membersIndexTextColor;
@property(readonly) UIColor * membersIndexTrackingBackgroundColor;
@property(readonly) UIColor * membersHeaderContentViewBackgroundColor;
@property(readonly) UIColor * membersHeaderBackgroundColor;
@property(readonly) UIView * memberHeaderBackgroundView;
@property(readonly) UIColor * membersBackgroundColor;
@property(readonly) UIColor * membersSearchBackgroundColor;
@property(readonly) UIColor * membersSearchCellBackgroundColor;
@property(readonly) BOOL shouldPropagateStylesThroughUnknownPersonActions;
@property(readonly) BOOL shouldPropagateStylesToPickers;
@property(readonly) int pickerTransitionStyle;
@property(readonly) BOOL shouldDefinePickerTransitionStyle;
@property(readonly) int composeModalPresentationStyle;
@property(readonly) int unknownModalPresentationStyle;
@property(readonly) BOOL presentModalViewInPopover;
@property(readonly) BOOL presentNewContactsControllersInPopover;
@property(readonly) BOOL presentDatePickerInPopover;
@property(readonly) BOOL shouldUsePeoplePickerBarStyle;
@property(readonly) int peoplePickerBarStyle;
@property(readonly) BOOL peoplePickerBarStyleIsTranslucent;
@property(readonly) BOOL groupsTableShouldRemoveBackgroundView;
@property(readonly) UIColor * groupsTableBackgroundColor;
@property(readonly) float groupSectionHeaderHeight;
@property(readonly) float groupSectionHeaderHorizontalPadding;
@property(readonly) BOOL groupSectionDrawsDefaultTopShadow;
@property(readonly) UIFont * groupAccountNameFont;
@property(readonly) UIColor * groupAccountNameColor;
@property(readonly) UIColor * groupAccountNameShadowColor;
@property(readonly) struct CGSize { float x1; float x2; } groupAccountNameShadowOffset;
@property(readonly) UIColor * groupCellBackgroundColor;
@property(readonly) UIColor * groupHeaderBackgroudColor;
@property(readonly) UIColor * groupCellTextColor;
@property(readonly) UIColor * groupCellHighlightedTextColor;
@property(readonly) UIColor * groupCellShadowColor;
@property(readonly) struct CGSize { float x1; float x2; } groupCellShadowOffset;
@property(readonly) int groupCellSelectionStyle;

+ (BOOL)supportsSecureCoding;
+ (id)preferredContentSizeCategoryName;
+ (float)memberTextBaseline;
+ (float)memberHeaderTextBaseline;
+ (float)memberRowHeight;
+ (float)memberHeaderRowHeight;
+ (id)defaultStyleProviderForStyle:(int)arg1;
+ (id)defaultStyleProvider;

- (id)letterpressStyle;
- (BOOL)shouldAutorotateToInterfaceOrientation:(int)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (BOOL)shouldAdjustTableView:(id)arg1 forKeyboardOrdering:(BOOL)arg2;
- (id)personValueBackgroundColor;
- (float)personViewVerticalCellInset;
- (float)personViewDefaultRowHeight;
- (BOOL)usesPhoneCardMetrics;
- (id)cardNameDividerColor;
- (struct __CFDictionary { }*)newBackgroundViewsForChameleonCell;
- (struct CGSize { float x1; float x2; })groupCellShadowOffset;
- (float)groupSectionHeaderHeight;
- (id)memberSelectedBackgroundColor;
- (float)memberScrollBarInset;
- (BOOL)memberShowContactPhoto;
- (struct UIEdgeInsets { float x1; float x2; float x3; float x4; })memberNameInsets;
- (struct CGSize { float x1; float x2; })memberNameShadowOffset;
- (id)memberNameMeCardDisabledImage;
- (id)memberNameMeCardSelectedImage;
- (id)memberNameMeCardImage;
- (id)memberNameMeCardShadowColor;
- (float)memberNameInterComponentSpacing;
- (id)memberNameRegularFontForSectionHeader;
- (float)cardLinkingHeaderLabelHeight;
- (float)cardContentOccluderDefaultBottomFadingHeight;
- (float)cardContentOccluderDefaultTopFadingHeight;
- (float)cardCellVerticalSpacingBetweenAlertsOfSimilarType;
- (id)cardValueHighlightedShadowColor;
- (id)cardValueShadowColor;
- (id)cardLabelHighlightedShadowColor;
- (id)cardLabelShadowColor;
- (id)cardHeaderBackgroundColor;
- (BOOL)shouldApplyMaskImage;
- (BOOL)cardPhotoShouldApplyOverlayImageWhenPersonImagePresent;
- (float)personViewHeaderNameViewTextVerticalInset;
- (float)personViewHeaderNameViewTextHorizontalInset;
- (id)personViewGetNameViewAccessoryImageSelected;
- (id)personViewGetNameViewAccessoryImage;
- (struct CGSize { float x1; float x2; })groupAccountNameShadowOffset;
- (id)groupAccountNameFont;
- (float)groupSectionHeaderHorizontalPadding;
- (struct UIEdgeInsets { float x1; float x2; float x3; float x4; })cardValueInsets;
- (struct UIEdgeInsets { float x1; float x2; float x3; float x4; })cardValueEditingInsets;
- (float)cardHeaderViewTopMargin;
- (id)_fontForTextStyle:(id)arg1;
- (id)personValueColor;
- (BOOL)searchControllerForceKeyboardDisplayEnabled;
- (BOOL)serverSearchNavigationBarHidingEnabled;
- (float)memberNameFontSize;
- (unsigned int)membersCountToShowSections;
- (id)copyLocalizedPropertyName:(int)arg1 lowercase:(BOOL)arg2;
- (id)copyLocalizedLabel:(id)arg1;
- (id)cardCellFacebookBadge;
- (float)personEditorFieldVerticalInset;
- (id)editorViewLargeFont;
- (id)editorViewSmallFont;
- (id)cardTableBackgroundColor;
- (int)composeModalPresentationStyle;
- (BOOL)linkedCardsShouldAllowDeletion;
- (float)cardSectionHeaderHeightForFollowingCardActions;
- (float)cardSectionHeaderHeightForFirstCardActions;
- (float)cardSectionHeaderHeightForBottomActions;
- (float)cardNotesHeaderViewHeight;
- (BOOL)cardTableView:(id)arg1 wantsHeaderForProperty:(int)arg2 inSection:(int)arg3 whenEditing:(BOOL)arg4;
- (id)cardCellDisabledBackgroundColor;
- (float)cardActionButtonSpacing;
- (BOOL)cardNotesLabelIncludesSource;
- (id)cardTableView:(id)arg1 prepareCell:(id)arg2 forRowAtIndexPath:(id)arg3;
- (BOOL)cardTableShouldAdjustForKeyboard;
- (int)cardCellAccessoryTypeEdit;
- (int)cardCellAccessoryType;
- (int)cardCellAccessoryTypeEditRingtone;
- (int)cardCellAccessoryTypeRingtone;
- (id)accessoryViewForFavoritesBadge;
- (id)accessoryViewForVideoBadge;
- (id)accessoryViewForMailVIPBadge;
- (struct CGSize { float x1; float x2; })personLabelShadowOffset;
- (id)personLabelFont;
- (void)unselectAllCellParts:(id)arg1;
- (void)selectCustomPartWithFrame:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1 occupiedCorners:(unsigned int)arg2 forCell:(id)arg3;
- (void)selectValuePartForCell:(id)arg1;
- (void)selectLabelPartForCell:(id)arg1;
- (BOOL)cardAlwaysShowsNotes;
- (id)cardNotesHeaderView;
- (void)selectWholePartForCell:(id)arg1;
- (BOOL)personTableHeaderViewScrollsWhenEditing:(BOOL)arg1;
- (struct CGSize { float x1; float x2; })personNoValueLabelShadowOffset;
- (id)personNoValueLabelShadowColor;
- (id)personNoValueLabelTextColor;
- (id)personNoValueLabelFont;
- (struct CGSize { float x1; float x2; })cardSectionHeaderShadowOffset;
- (id)cardSectionHeaderShadowColor;
- (id)cardSectionHeaderTextColor;
- (id)cardSectionHeaderFont;
- (float)cardSectionHeaderHorizontalPadding;
- (float)cardTableViewLinkingHeaderBottomPaddingWhenEditing:(BOOL)arg1;
- (float)cardTableViewLinkingHeaderTopPaddingWhenEditing:(BOOL)arg1;
- (struct UIEdgeInsets { float x1; float x2; float x3; float x4; })cardActionButtonTitleDoubleLineInsets;
- (struct UIEdgeInsets { float x1; float x2; float x3; float x4; })cardActionButtonImageInsets;
- (struct UIEdgeInsets { float x1; float x2; float x3; float x4; })cardActionButtonTitleSingleLineInsets;
- (float)cardActionButtonHeight;
- (float)personViewHeaderMinimumHeight;
- (float)cardHeaderSpacingFromCardBodyWhenEditing:(BOOL)arg1;
- (float)cardHeaderViewLeftMargin;
- (BOOL)groupSectionDrawsDefaultTopShadow;
- (id)separatorBottomShadowColorForCellStyle:(int)arg1;
- (id)separatorTopShadowColorForCellStyle:(int)arg1;
- (BOOL)cardHeaderNameViewAlignOnBottom;
- (float)personViewVerticalSpacing;
- (float)personViewHeaderRightMargin;
- (float)cardHeaderImageNameEditorSpacing;
- (float)cardHeaderImageNameSpacing;
- (float)cardHeaderDisplayImageTopMargin;
- (float)cardHeaderEditingImageTopMargin;
- (float)cardHeaderDisplayImageLeftMargin;
- (float)cardHeaderEditingImageLeftMargin;
- (float)personViewHorizontalCellInset;
- (float)cardDeleteButtonHeight;
- (struct UIEdgeInsets { float x1; float x2; float x3; float x4; })cardDeleteButtonInsets;
- (id)personValueHighlightColor;
- (id)cardTaglineShadowColor;
- (id)cardHeadlineShadowColor;
- (unsigned int)cardTagNumberOfLines;
- (id)cardTaglineTextFont;
- (unsigned int)cardNameNumberOfLines;
- (id)cardHeadlineTextFont;
- (BOOL)shouldShowCardPhotoPlaceholder;
- (id)cardPhotoPasteboardMaskImage;
- (id)cardPhotoEditMultipleOverlayImage;
- (id)cardPhotoEditMultiplePhotoBackdropImage;
- (id)cardPhotoMaskMultipleImage;
- (struct UIEdgeInsets { float x1; float x2; float x3; float x4; })cardCellBackgroundInsetsWhenEditing:(BOOL)arg1;
- (float)cardCellBadgePaddingLeft;
- (float)cardLabelWidth;
- (float)personLabelFontMinSize;
- (id)accessoryButtonForRelatedNames;
- (struct UIEdgeInsets { float x1; float x2; float x3; float x4; })cardActionButtonsInsets;
- (float)cardNotesMinimumHeightWhenEditing:(BOOL)arg1;
- (struct UIEdgeInsets { float x1; float x2; float x3; float x4; })cardLabelInsets;
- (float)cardMaxHeightForSwellTextViewWhenEditing:(BOOL)arg1;
- (struct UIEdgeInsets { float x1; float x2; float x3; float x4; })cardValueInsetsWhenEditing:(BOOL)arg1;
- (float)personViewRowHeightWhenEditing:(BOOL)arg1;
- (id)cardLabelTextFont;
- (id)cardLabelEditingTextFont;
- (id)cardValueTappableColor;
- (id)cardValueDisabledTextColor;
- (id)cardLabelDisabledTextColor;
- (id)cardLabelEditingTextColor;
- (id)cardValueBackgroundColor;
- (struct CGSize { float x1; float x2; })cardValueShadowOffset;
- (float)personValueFontMinSize;
- (id)cardValueTextFont;
- (id)cardLabelBackgroundColor;
- (id)cardLabelImportantHighlightedTextColor;
- (struct CGSize { float x1; float x2; })cardLabelShadowOffset;
- (id)memberNameBoldFontForSectionHeader;
- (unsigned int)membersCountToShowIndex;
- (id)memberNameDisabledTextColor;
- (id)memberNamePlaceholderFont;
- (id)memberNameBoldFont;
- (id)memberNameRegularFont;
- (BOOL)labelPickerShouldPushCustomLabelCreator;
- (BOOL)linkedPhotoPickerIncludesCurrentPhoto;
- (BOOL)linkedPhotoLabelStringsDescribeSourceOnly;
- (BOOL)reloadCallAction;
- (BOOL)refreshTinyActionCell;
- (id)groupAccountNameShadowColor;
- (int)groupCellSelectionStyle;
- (id)groupCellShadowColor;
- (id)groupCellHighlightedTextColor;
- (BOOL)groupsTableShouldRemoveBackgroundView;
- (BOOL)presentModalViewInPopover;
- (BOOL)presentNewContactsControllersInPopover;
- (BOOL)presentDatePickerInPopover;
- (int)dialogStyleForDeleteConfirmation;
- (BOOL)shouldDefinePickerTransitionStyle;
- (int)pickerTransitionStyle;
- (BOOL)datePickerHasNavigationTitle;
- (id)cardPhotoEditPlaceholderImage;
- (BOOL)cardPlaceholderImageShouldApplyMaskAndOverlay;
- (id)cardPlaceholderCompanyImage;
- (id)cardPlaceholderPersonImage;
- (struct CGSize { float x1; float x2; })cardPhotoShadowOffset;
- (id)cardPhotoShadowImage;
- (BOOL)cardPhotoShouldApplyOverlayImageWhenLabelPresent;
- (id)cardPhotoEditOverlayImage;
- (id)cardPhotoFacebookAttributionImage;
- (id)cardPhotoOverlayImage;
- (id)cardPhotoMaskImage;
- (struct CGSize { float x1; float x2; })cardPhotoOffset;
- (id)cardPhotoBackgroundImage;
- (id)personViewGetFavoritesBadgeHighlighted;
- (id)personViewGetFavoritesBadge;
- (BOOL)cardSectionDrawsDefaultTopShadow;
- (BOOL)cardSectionAlwaysWantsHeader;
- (BOOL)cardShouldUseSeparateSectionsForUnknownCardActions;
- (BOOL)cardTableUsesRowFadeAnimation;
- (id)cardDeleteButtonImagePressed;
- (id)cardDeleteButtonImage;
- (id)cardCellDividerShadowColorVertical:(BOOL)arg1;
- (BOOL)cardActionsAllowFaceTimeFavorites;
- (BOOL)cardActionsAllowVoiceFavorites;
- (id)cardActionConferenceIconPressed;
- (id)cardActionConferenceIcon;
- (id)cardActionButtonBackgroundHighlighted;
- (id)cardActionButtonBackgroundNormal;
- (int)cardActionButtonType;
- (id)personHeaderPasteboardColor;
- (struct CGSize { float x1; float x2; })personActionShadowOffset;
- (id)personActionShadowColor;
- (id)personActionHighlightedColor;
- (id)personActionColor;
- (id)personActionFont;
- (id)personLabelShadowColor;
- (id)personLabelHighlightedColor;
- (id)personValueImportantHighlightColor;
- (id)personValueImportantColor;
- (id)cardLabelEmphasizedHighlightedTextColor;
- (id)cardLabelHighlightedTextColor;
- (id)editorViewColor;
- (id)cardLabelSelectedBackgroundColor;
- (BOOL)cardValueHighlightsWhenTouched;
- (id)cardValueClearButtonImage;
- (id)cardValueHighlightedTextColor;
- (id)cardHeaderDefaultLabelTextColor;
- (id)cardTableCellBorderColor;
- (id)personHeaderShadowColor;
- (id)cardTaglineTextColor;
- (id)cardHeadlineTextColor;
- (BOOL)cardTableShouldRemoveBackgroundView;
- (BOOL)membersSearchBarIsInTableHeader;
- (float)membersIndexMaximumHeight;
- (int)membersSelectionStyle;
- (id)memberSearchFieldBackgroundColor;
- (id)memberNameMeCardTextColor;
- (id)memberNameSelectedShadowColor;
- (id)cardSectionBackgroundColor;
- (id)membersSearchCellBackgroundColor;
- (id)membersSearchBackgroundColor;
- (id)membersBackgroundColor;
- (id)memberHeaderBackgroundView;
- (id)membersHeaderContentViewBackgroundColor;
- (id)newTableFooterViewForCellStyle:(int)arg1;
- (id)newAccessoryDisclosureIndicatorForCellStyle:(int)arg1;
- (int)abCellStyleForCardTableLinkingUI;
- (int)abCellStyleForGroupsTablePlain;
- (int)abCellStyleForGroupsTableGrouped;
- (float)personViewHeaderImageHeight;
- (float)personViewHeaderImageWidth;
- (id)newCardDividerViewVertical:(BOOL)arg1;
- (struct CGSize { float x1; float x2; })personHeaderShadowOffset;
- (id)personValueEmphasizedColor;
- (id)personValueEmphasizedHighlightColor;
- (id)cardLabelTextColor;
- (id)memberNameShadowColor;
- (int)cardCellSelectionStyle;
- (id)memberNameTextColor;
- (id)membersHeaderBackgroundColor;
- (void)customSetEmphasized:(BOOL)arg1 onCell:(id)arg2;
- (BOOL)shouldPropagateStylesThroughUnknownPersonActions;
- (BOOL)shouldPropagateStylesToPickers;
- (float)cardTableViewSectionFooterHeightWhenEditing:(BOOL)arg1;
- (float)cardTableViewSectionHeaderHeightWhenEditing:(BOOL)arg1;
- (id)newCustomCardTableScrollingBackgroundView;
- (id)newCardActionButton;
- (Class)customCardActionCellClass;
- (Class)customCardCellClass;
- (BOOL)shouldUseCardContentProviderWhenAvailable;
- (int)unknownModalPresentationStyle;
- (void)setIndicatesFaceTimeHistory:(BOOL)arg1 onActionButton:(id)arg2;
- (id)memberSectionListHeaderImage;
- (id)membersIndexTrackingBackgroundColor;
- (id)membersIndexTextColor;
- (BOOL)searchIsAlwaysActive;
- (BOOL)peoplePickerBarStyleIsTranslucent;
- (int)peoplePickerBarStyle;
- (BOOL)shouldUsePeoplePickerBarStyle;
- (id)separatorColorForCellStyle:(int)arg1;
- (int)separatorStyleForCellStyle:(int)arg1;
- (int)abCellStyleForMembersTable;
- (id)memberPlaceholderCompanyImage;
- (id)memberPhotoOverlayImage;
- (id)memberPlaceholderPersonImage;
- (id)memberPhotoMaskImage;
- (id)cardValueTextColor;
- (float)cardPhotoFrameBorderSize;
- (id)cardClippingImageLabelBevelColor;
- (id)cardClippingImageLabelColor;
- (id)newBackgroundViewForCellStyle:(int)arg1 selected:(BOOL)arg2;
- (id)shadowColorForCellStyle:(int)arg1;
- (id)cardCellBackgroundColor;
- (id)memberNameSelectedColor;
- (int)abCellStyleForCardTableWhenEditing:(BOOL)arg1;
- (id)personLabelColor;
- (id)personValueFont;
- (BOOL)labelPickerUsesOpaqueBackground;
- (id)groupAccountNameColor;
- (id)groupHeaderBackgroudColor;
- (id)groupCellTextColor;
- (id)groupCellBackgroundColor;
- (id)cardCellDividerColorVertical:(BOOL)arg1;
- (id)groupsTableBackgroundColor;

@end
