/* Generated by RuntimeBrowser.
   Image: /System/Library/PrivateFrameworks/iWorkImport.framework/iWorkImport
 */

@class SFUZipArchive, GQDRoot, <GQUOutputBundle>, <GQWrapPointGenerator>, GQPProcessor, GQDSStylesheet, GQSTable;

@interface GQSDocument : NSObject <GQWrapPointGenerator> {
    GQPProcessor *mProcessor;
    GQDRoot *mRoot;
    struct __CFURL { } *mBundleUrl;
    SFUZipArchive *mArchive;
    <GQUOutputBundle> *mOutputBundle;
    struct __CFArray { } *mObjectStack;
    id mGeneratorState;
    GQSTable *mTableState;
    Class mCurrentDrawablesGenerator;
    Class mCurrentTableGenerator;
    <GQWrapPointGenerator> *mCurrentWrapPointGenerator;
    BOOL mMustRegisterDrawables;
    BOOL mGeneratorBeginWasCalled;
    BOOL mShouldStreamTables;
    BOOL mDoExternalTextWrap;
    BOOL mGeneratingThumbnail;
    BOOL mThumbnailGenerationDone;
    unsigned int mTextScale;
    struct set<GQUtility::ObjcSharedPtr<GQDWrapPoint>, GQUtility::NSObjectComparator<GQDWrapPoint>, std::__1::allocator<GQUtility::ObjcSharedPtr<GQDWrapPoint> > > { struct __tree<GQUtility::ObjcSharedPtr<GQDWrapPoint>, GQUtility::NSObjectComparator<GQDWrapPoint>, std::__1::allocator<GQUtility::ObjcSharedPtr<GQDWrapPoint> > > { struct __tree_node<GQUtility::ObjcSharedPtr<GQDWrapPoint>, void *> {} *x_1_1_1; struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<GQUtility::ObjcSharedPtr<GQDWrapPoint>, void *> > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> { struct __tree_node_base<void *> {} *x_1_3_1; } x_2_2_1; } x_1_1_2; struct __compressed_pair<unsigned long, GQUtility::NSObjectComparator<GQDWrapPoint> > { unsigned long x_3_2_1; struct NSObjectComparator<GQDWrapPoint> { SEL x_2_3_1; } x_3_2_2; } x_1_1_3; } x1; } *mWrapPoints;
    struct __CFDictionary { } *mBundleResourceUriMap;
    GQDSStylesheet *mStylesheet;
    BOOL mIsReadingStorageAttachments;
    struct __CFString { } *mFilename;
    struct __CFURL { } *mDocumentUrl;
    BOOL _doCalculateThumbnailSize;
}

@property BOOL doCalculateThumbnailSize;


- (id)root;
- (void)setStylesheet:(id)arg1;
- (id)stylesheet;
- (struct __CFString { }*)filename;
- (void)pushObject:(id)arg1;
- (void)dealloc;
- (void)setGeneratingThumbnail:(BOOL)arg1;
- (id)initWithRoot:(id)arg1 processor:(id)arg2 outputBundle:(id)arg3 fileURL:(struct __CFURL { }*)arg4;
- (void)setDoCalculateThumbnailSize:(BOOL)arg1;
- (void)setShouldStreamTables:(BOOL)arg1;
- (BOOL)generatorBeginWasCalled;
- (id)initWithRoot:(id)arg1 processor:(id)arg2 archive:(id)arg3 outputBundle:(id)arg4 fileURL:(struct __CFURL { }*)arg5;
- (id)initWithRoot:(id)arg1 processor:(id)arg2 bundleUrl:(struct __CFURL { }*)arg3 archive:(id)arg4 outputBundle:(id)arg5;
- (void)setGeneratorBeginWasCalled;
- (BOOL)isThumbnailGenerationDone;
- (void)setDoExternalTextWrap:(BOOL)arg1;
- (void)setCurrentWrapPointGenerator:(id)arg1;
- (struct __CFString { }*)uriForBundleResource:(struct __CFString { }*)arg1 ofType:(struct __CFString { }*)arg2;
- (void)setGeneratorState:(id)arg1;
- (id)outputBundle;
- (BOOL)doCalculateThumbnailSize;
- (id)generatorState;
- (void)setIsReadingStorageAttachments:(BOOL)arg1;
- (BOOL)shouldStreamTables;
- (Class)currentTableGenerator;
- (BOOL)isReadingStorageAttachments;
- (void)setTableState:(id)arg1;
- (id)tableState;
- (struct __CFURL { }*)createUrlToAppBundleResource:(struct __CFString { }*)arg1 processorBundle:(struct __CFBundle { }*)arg2 skipCachingPDFAndNoExtentionResources:(BOOL*)arg3;
- (id)processor;
- (struct __CFURL { }*)createUriToDocumentBundleResource:(struct __CFString { }*)arg1;
- (BOOL)doExternalTextWrap;
- (void)clearWrapPoints;
- (struct vector<GQUtility::ObjcSharedPtr<GQDWrapPoint>, std::__1::allocator<GQUtility::ObjcSharedPtr<GQDWrapPoint> > > { struct ObjcSharedPtr<GQDWrapPoint> {} *x1; struct ObjcSharedPtr<GQDWrapPoint> {} *x2; struct __compressed_pair<GQUtility::ObjcSharedPtr<GQDWrapPoint> *, std::__1::allocator<GQUtility::ObjcSharedPtr<GQDWrapPoint> > > { struct ObjcSharedPtr<GQDWrapPoint> {} *x_3_1_1; } x3; }*)createListOfWrapPointsAlongY:(float)arg1 minX:(float)arg2 maxX:(float)arg3 zIndex:(int)arg4;
- (void)addWrapPoint:(id)arg1;
- (const struct set<GQUtility::ObjcSharedPtr<GQDWrapPoint>, GQUtility::NSObjectComparator<GQDWrapPoint>, std::__1::allocator<GQUtility::ObjcSharedPtr<GQDWrapPoint> > > { struct __tree<GQUtility::ObjcSharedPtr<GQDWrapPoint>, GQUtility::NSObjectComparator<GQDWrapPoint>, std::__1::allocator<GQUtility::ObjcSharedPtr<GQDWrapPoint> > > { struct __tree_node<GQUtility::ObjcSharedPtr<GQDWrapPoint>, void *> {} *x_1_1_1; struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<GQUtility::ObjcSharedPtr<GQDWrapPoint>, void *> > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> { struct __tree_node_base<void *> {} *x_1_3_1; } x_2_2_1; } x_1_1_2; struct __compressed_pair<unsigned long, GQUtility::NSObjectComparator<GQDWrapPoint> > { unsigned long x_3_2_1; struct NSObjectComparator<GQDWrapPoint> { SEL x_2_3_1; } x_3_2_2; } x_1_1_3; } x1; }*)wrapPoints;
- (id)currentWrapPointGenerator;
- (BOOL)mustRegisterDrawables;
- (void)setThumbnailGenerationDone:(BOOL)arg1;
- (BOOL)isGeneratingThumbnail;
- (void)setMustRegisterDrawables:(BOOL)arg1;
- (void)setCurrentTableGenerator:(Class)arg1;
- (Class)currentDrawablesGenerator;
- (void)setCurrentDrawablesGenerator:(Class)arg1;
- (int)objectStackDepth;
- (id)topObjectOfClass:(Class)arg1;
- (id)popRetainedObject;
- (id)peekObject;

@end
