/* Generated by RuntimeBrowser.
   Image: /System/Library/PrivateFrameworks/PassKitCore.framework/PassKitCore
 */

@interface PKImageResizingConstraints : NSObject  {
    int _constraintType;
    float _fixedDimension;
    struct CGSize { 
        float width; 
        float height; 
    } _size;
    float _minAspectRatio;
    float _maxAspectRatio;
    BOOL _respectAspectRatioRange;
    BOOL _outputMirrored;
    float _outputScale;
    float _outputBorderTrim;
}

@property float outputScale;
@property float outputBorderTrim;
@property BOOL outputMirrored;

+ (id)constraintsWithFixedSize:(struct CGSize { float x1; float x2; })arg1;
+ (id)constraintsWithMinSize:(struct CGSize { float x1; float x2; })arg1;
+ (id)constraintsWithMaxSize:(struct CGSize { float x1; float x2; })arg1;
+ (id)constraintsWithMinSize:(struct CGSize { float x1; float x2; })arg1 minAspectRatio:(float)arg2 maxAspectRatio:(float)arg3;
+ (id)constraintsWithMaxSize:(struct CGSize { float x1; float x2; })arg1 minAspectRatio:(float)arg2 maxAspectRatio:(float)arg3;
+ (id)constraintsWithFixedSmallDimenstion:(float)arg1 minAspectRatio:(float)arg2 maxAspectRatio:(float)arg3;
+ (id)constraintsWithFixedLargeDimenstion:(float)arg1 minAspectRatio:(float)arg2 maxAspectRatio:(float)arg3;
+ (id)constraintsWithFixedHeight:(float)arg1 minAspectRatio:(float)arg2 maxAspectRatio:(float)arg3;
+ (id)constraintsWithFixedWidth:(float)arg1 minAspectRatio:(float)arg2 maxAspectRatio:(float)arg3;

- (void)setOutputMirrored:(BOOL)arg1;
- (void)setOutputBorderTrim:(float)arg1;
- (float)outputBorderTrim;
- (BOOL)_reasonable;
- (void)setOutputScale:(float)arg1;
- (id)_flippedConstraints;
- (BOOL)_getPixelCropRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; }*)arg1 pixelOutputSize:(struct CGSize { float x1; float x2; }*)arg2 forImageSize:(struct CGSize { float x1; float x2; })arg3 scale:(float)arg4;
- (id)resizedImage:(id)arg1;
- (BOOL)outputMirrored;
- (float)outputScale;
- (BOOL)getPixelCropRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; }*)arg1 pixelOutputSize:(struct CGSize { float x1; float x2; }*)arg2 forImage:(id)arg3;
- (id)init;

@end
