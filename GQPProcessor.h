/* Generated by RuntimeBrowser.
   Image: /System/Library/PrivateFrameworks/iWorkImport.framework/iWorkImport
 */

/* RuntimeBrowser encountered one or more ivar type encodings for a function pointer. 
   The runtime does not encode function signature information.  We use a signature of: 
           "int (*funcName)()",  where funcName might be null. 
 */

@class SFUZipInflateInputStream, SFUZipArchive, GQSDocument, SFUCryptoKey;

@interface GQPProcessor : NSObject  {
    struct _xmlTextReader { } *mReader;
    struct _xmlParserInputBuffer { void *x1; int (*x2)(); int (*x3)(); struct _xmlCharEncodingHandler {} *x4; struct _xmlBuf {} *x5; struct _xmlBuf {} *x6; int x7; int x8; unsigned long x9; } *mParserInputBuffer;
    SFUZipArchive *mArchive;
    SFUCryptoKey *mCryptoKey;
    unsigned long long mTotalBytesToConsume;
    SFUZipInflateInputStream *mInputStream;
    struct stack<std::__1::shared_ptr<StateSpec>, std::__1::deque<std::__1::shared_ptr<StateSpec>, std::__1::allocator<std::__1::shared_ptr<StateSpec> > > > { struct deque<std::__1::shared_ptr<StateSpec>, std::__1::allocator<std::__1::shared_ptr<StateSpec> > > { struct __split_buffer<std::__1::shared_ptr<StateSpec> *, std::__1::allocator<std::__1::shared_ptr<StateSpec> *> > { struct shared_ptr<StateSpec> {} **x_1_2_1; struct shared_ptr<StateSpec> {} **x_1_2_2; struct shared_ptr<StateSpec> {} **x_1_2_3; struct __compressed_pair<std::__1::shared_ptr<StateSpec> **, std::__1::allocator<std::__1::shared_ptr<StateSpec> *> > { struct shared_ptr<StateSpec> {} **x_4_3_1; } x_1_2_4; } x_1_1_1; unsigned int x_1_1_2; struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::shared_ptr<StateSpec> > > { unsigned long x_3_2_1; } x_1_1_3; } x1; } *mStateStack;
    struct stack<std::__1::pair<const Action *, int>, std::__1::deque<std::__1::pair<const Action *, int>, std::__1::allocator<std::__1::pair<const Action *, int> > > > { struct deque<std::__1::pair<const Action *, int>, std::__1::allocator<std::__1::pair<const Action *, int> > > { struct __split_buffer<std::__1::pair<const Action *, int> *, std::__1::allocator<std::__1::pair<const Action *, int> *> > { struct pair<const Action *, int> {} **x_1_2_1; struct pair<const Action *, int> {} **x_1_2_2; struct pair<const Action *, int> {} **x_1_2_3; struct __compressed_pair<std::__1::pair<const Action *, int> **, std::__1::allocator<std::__1::pair<const Action *, int> *> > { struct pair<const Action *, int> {} **x_4_3_1; } x_1_2_4; } x_1_1_1; unsigned int x_1_1_2; struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::pair<const Action *, int> > > { unsigned long x_3_2_1; } x_1_1_3; } x1; } *mActionStack;
    GQSDocument *mDocumentState;
    struct __QLPreviewRequest { } *mOutputPreviewRequest;
    struct __CFBundle { } *mBundle;
    struct CGSize { 
        float width; 
        float height; 
    } mThumbnailSize;
    BOOL mWrongFormat;
    unsigned char mIsProgressive;
}

+ (void)initialize;
+ (struct _xmlTextReader { }*)createXmlReaderWithZipArchive:(id)arg1 indexFileName:(id)arg2 cryptoKey:(id)arg3 indexEntry:(id*)arg4 zipInputStream:(id*)arg5;
+ (struct _xmlTextReader { }*)createXmlReaderWithPath:(id)arg1 indexFileName:(id)arg2 cryptoKey:(id)arg3;

- (id)archive;
- (struct stack<std::__1::shared_ptr<StateSpec>, std::__1::deque<std::__1::shared_ptr<StateSpec>, std::__1::allocator<std::__1::shared_ptr<StateSpec> > > > { struct deque<std::__1::shared_ptr<StateSpec>, std::__1::allocator<std::__1::shared_ptr<StateSpec> > > { struct __split_buffer<std::__1::shared_ptr<StateSpec> *, std::__1::allocator<std::__1::shared_ptr<StateSpec> *> > { struct shared_ptr<StateSpec> {} **x_1_2_1; struct shared_ptr<StateSpec> {} **x_1_2_2; struct shared_ptr<StateSpec> {} **x_1_2_3; struct __compressed_pair<std::__1::shared_ptr<StateSpec> **, std::__1::allocator<std::__1::shared_ptr<StateSpec> *> > { struct shared_ptr<StateSpec> {} **x_4_3_1; } x_1_2_4; } x_1_1_1; unsigned int x_1_1_2; struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::shared_ptr<StateSpec> > > { unsigned long x_3_2_1; } x_1_1_3; } x1; }*)stateStack;
- (void)setThumbnailSize:(struct CGSize { float x1; float x2; })arg1;
- (struct CGSize { float x1; float x2; })thumbnailSize;
- (void)setBundle:(struct __CFBundle { }*)arg1;
- (id).cxx_construct;
- (struct __CFBundle { }*)bundle;
- (id)documentState;
- (void)dealloc;
- (BOOL)isWrongFormat;
- (void)setProgressiveMode:(unsigned char)arg1;
- (id)cryptoKey;
- (id)initWithZipArchive:(id)arg1 indexFileName:(id)arg2 previewRequest:(struct __QLPreviewRequest { }*)arg3;
- (struct stack<std::__1::pair<const Action *, int>, std::__1::deque<std::__1::pair<const Action *, int>, std::__1::allocator<std::__1::pair<const Action *, int> > > > { struct deque<std::__1::pair<const Action *, int>, std::__1::allocator<std::__1::pair<const Action *, int> > > { struct __split_buffer<std::__1::pair<const Action *, int> *, std::__1::allocator<std::__1::pair<const Action *, int> *> > { struct pair<const Action *, int> {} **x_1_2_1; struct pair<const Action *, int> {} **x_1_2_2; struct pair<const Action *, int> {} **x_1_2_3; struct __compressed_pair<std::__1::pair<const Action *, int> **, std::__1::allocator<std::__1::pair<const Action *, int> *> > { struct pair<const Action *, int> {} **x_4_3_1; } x_1_2_4; } x_1_1_1; unsigned int x_1_1_2; struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::pair<const Action *, int> > > { unsigned long x_3_2_1; } x_1_1_3; } x1; }*)actionStack;
- (void)pushInitialState;
- (BOOL)go;
- (id)initWithZipArchive:(id)arg1 indexFileName:(id)arg2 previewRequest:(struct __QLPreviewRequest { }*)arg3 cryptoKey:(id)arg4;
- (id)initWithPath:(id)arg1 indexFileName:(id)arg2 previewRequest:(struct __QLPreviewRequest { }*)arg3 cryptoKey:(id)arg4;
- (void)setWrongFormat:(BOOL)arg1;

@end
