/* Generated by RuntimeBrowser.
   Image: /System/Library/PrivateFrameworks/MusicCarDisplayUI.framework/MusicCarDisplayUI
 */

@class MCDNowPlayingViewController, MPUNowPlayingController, NSDictionary, MCDActionSheetController;

@interface MCDMediaRemoteNowPlayingViewController : UIViewController <MPUNowPlayingDelegate, MCDNowPlayingViewControllerDataSource, MCDNowPlayingViewControllerDelegate> {
    MPUNowPlayingController *_nowPlayingController;
    BOOL _isScrubbing;
    MCDActionSheetController *_actionSheetController;
    MCDNowPlayingViewController *_nowPlayingViewController;
    double _elapsedTime;
    struct { 
        unsigned int play : 1; 
        unsigned int pause : 1; 
        unsigned int stop : 1; 
        unsigned int togglePlayPause : 1; 
        unsigned int nextTrack : 1; 
        unsigned int previousTrack : 1; 
        unsigned int toggleRecord : 1; 
        unsigned int fastForward : 1; 
        unsigned int rewind : 1; 
        unsigned int record : 1; 
        unsigned int changePlaybackRate : 1; 
        unsigned int likeTrack : 1; 
        unsigned int banTrack : 1; 
        unsigned int rateTrack : 1; 
        unsigned int bookmarkTrack : 1; 
        unsigned int fastForwardWithInterval : 1; 
        unsigned int rewindWithInterval : 1; 
    } __supportedCommandsFlags;
    NSDictionary *_supportedCommands;
    BOOL _observingMediaRemoteCommandChanges;
    NSDictionary *_nowPlayingInfo;
}

@property(retain) NSDictionary * nowPlayingInfo;


- (void)setNowPlayingInfo:(id)arg1;
- (void)_presentLikeBanActionSheet;
- (id)_titleForFeedbackCommand:(unsigned int)arg1;
- (struct _MRMediaRemoteCommandInfo { }*)_mediaCommandInfoForCommand:(unsigned int)arg1;
- (void)_supportedControlsDidUpdate:(id)arg1;
- (void)_updateSupportedCommandsWithArray:(id)arg1;
- (void)_performActionForRightCommand;
- (double)_skipBackwardInterval;
- (BOOL)_trackIsLiked;
- (unsigned int)_bestCommandForRewindPosition;
- (double)_skipForwardInterval;
- (unsigned int)_bestCommandForFastForwardPosition;
- (void)_updatePlayControls;
- (void)_updateAllContent;
- (void)_startObservingRemoteCommandChanges;
- (void)_stopObservingRemoteCommandChanges;
- (void)nowPlayingViewController:(id)arg1 didSendAction:(int)arg2 state:(int)arg3;
- (BOOL)nowPlayingViewController:(id)arg1 shouldDisplayButton:(int)arg2 withImage:(out id*)arg3 tinted:(out BOOL*)arg4;
- (BOOL)nowPlayingViewControllerIsPlaying:(id)arg1;
- (double)playbackDurationForNowPlayingViewController:(id)arg1 withElapsedTime:(out double*)arg2;
- (id)backgroundArtForNowPlayingController:(id)arg1;
- (id)titleForNowPlayingController:(id)arg1;
- (id)albumTextForNowPlayingController:(id)arg1;
- (id)artistTextForNowPlayingController:(id)arg1;
- (void)_updateSupportedCommands;
- (void)nowPlayingController:(id)arg1 elapsedTimeDidChange:(double)arg2;
- (void)nowPlayingController:(id)arg1 nowPlayingApplicationDidChange:(id)arg2;
- (void)nowPlayingController:(id)arg1 playbackStateDidChange:(BOOL)arg2;
- (void)nowPlayingController:(id)arg1 nowPlayingInfoDidChange:(id)arg2;
- (id)_skipIntervalButtonImageForInterval:(double)arg1;
- (void).cxx_destruct;
- (void)viewDidDisappear:(BOOL)arg1;
- (void)viewDidLoad;
- (void)viewWillAppear:(BOOL)arg1;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (void)dealloc;
- (id)nowPlayingInfo;

@end
