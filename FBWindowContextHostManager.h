/* Generated by RuntimeBrowser.
   Image: /System/Library/PrivateFrameworks/FrontBoard.framework/FrontBoard
 */

@class FBWindowContextHostView, NSHashTable, <FBWindowContextHostManagerDelegate>, FBScene, FBWindowContextManager, NSString, FBOrderedRequesters, NSMutableDictionary, UIColor;

@interface FBWindowContextHostManager : NSObject <FBWindowContextHostViewDelegate> {
    FBWindowContextManager *_contextManager;
    FBScene *_scene;
    NSString *_identifier;
    int _jailBehavior;
    UIColor *_defaultBackgroundColorWhileHosting;
    UIColor *_defaultBackgroundColorWhileNotHosting;
    FBWindowContextHostView *_hostView;
    BOOL _suspended;
    BOOL _invalidated;
    FBOrderedRequesters *_hostRequesters;
    NSMutableDictionary *_hostRequesterInfo;
    NSHashTable *_observers;
    <FBWindowContextHostManagerDelegate> *_delegate;
    struct { 
        unsigned int delegateOverrideRequester : 1; 
        unsigned int delegateShouldEnableContextHostingForRequester : 1; 
    } _flags;
}

@property <FBWindowContextHostManagerDelegate> * delegate;
@property(readonly) FBScene * scene;
@property(copy) NSString * identifier;
@property(copy) UIColor * defaultBackgroundColorWhileHosting;
@property(copy) UIColor * defaultBackgroundColorWhileNotHosting;
@property(readonly) int jailBehavior;
@property(readonly) unsigned int contextCount;


- (int)jailBehavior;
- (void)_notePropertiesSetOnRealContextHostViewWhichIReallyNeedToChangeAndIKnowWhatImDoingISwear:(id)arg1 originalProperties:(id)arg2 forRequester:(id)arg3;
- (id)snapshotUIImageForFrame:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1 excludingContexts:(id)arg2 opaque:(BOOL)arg3 outTransform:(struct CGAffineTransform { float x1; float x2; float x3; float x4; float x5; float x6; }*)arg4;
- (id)snapshotViewWithFrame:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1 excludingContexts:(id)arg2 opaque:(BOOL)arg3;
- (void)setContextId:(unsigned int)arg1 hidden:(BOOL)arg2 forRequester:(id)arg3;
- (void)orderRequesterFront:(id)arg1;
- (void)resumeContextHosting;
- (id)hostViewForRequester:(id)arg1 enableAndOrderFront:(BOOL)arg2;
- (unsigned int)contextCount;
- (void)setDefaultBackgroundColorWhileNotHosting:(id)arg1;
- (void)setDefaultBackgroundColorWhileHosting:(id)arg1;
- (id)initWithContextManager:(id)arg1 scene:(id)arg2;
- (unsigned int)_populateContextIDs:(unsigned int*)arg1 forSnapshotExcludingContexts:(id)arg2;
- (struct __IOSurface { }*)snapshotIOSurfaceForFrame:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1 excludingContexts:(id)arg2 opaque:(BOOL)arg3 outTransform:(struct CGAffineTransform { float x1; float x2; float x3; float x4; float x5; float x6; }*)arg4;
- (struct CGImage { }*)snapshotCGImageRefForFrame:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1 excludingContexts:(id)arg2 opaque:(BOOL)arg3 outTransform:(struct CGAffineTransform { float x1; float x2; float x3; float x4; float x5; float x6; }*)arg4;
- (void)_applyRequesterInfo:(id)arg1;
- (void)_removeRequesterInfo:(id)arg1;
- (void)enableHostingForRequester:(id)arg1 orderFront:(BOOL)arg2;
- (id)_infoForRequester:(id)arg1;
- (id)_overrideRequesterIfNecessary:(id)arg1;
- (id)initWithContextManager:(id)arg1 scene:(id)arg2 jailBehavior:(int)arg3;
- (void)suspendContextHosting;
- (void)disableHostingForRequester:(id)arg1;
- (id)hostViewForRequester:(id)arg1;
- (void)enableHostingForRequester:(id)arg1 priority:(int)arg2;
- (id)defaultBackgroundColorWhileNotHosting;
- (id)defaultBackgroundColorWhileHosting;
- (id)_realContextHostViewWhichIReallyNeedToAccessAndIKnowWhatImDoingISwear;
- (void)windowContextHostViewHostedContextsDidChange:(id)arg1;
- (void)addObserver:(id)arg1;
- (void)setIdentifier:(id)arg1;
- (void)removeObserver:(id)arg1;
- (id)identifier;
- (id)delegate;
- (id)scene;
- (void)invalidate;
- (id)description;
- (void)dealloc;
- (void)setDelegate:(id)arg1;

@end
