/* Generated by RuntimeBrowser.
   Image: /System/Library/PrivateFrameworks/GeoServices.framework/GeoServices
 */

/* RuntimeBrowser encountered one or more ivar type encodings for a function pointer. 
   The runtime does not encode function signature information.  We use a signature of: 
           "int (*funcName)()",  where funcName might be null. 
 */

@interface GEOSnappedRouteEdge : NSObject  {
    struct { 
        struct { 
            double x; 
            double y; 
        } origin; 
        struct { 
            double width; 
            double height; 
        } size; 
    } _localBounds;
    struct shared_ptr<geo::MapEdgeRoad> { 
        struct MapEdgeRoad {} *__ptr_; 
        struct __shared_weak_count {} *__cntrl_; 
    } _mapEdge;
    struct vector<GEOVectorTilePoint, std::__1::allocator<GEOVectorTilePoint> > { 
        struct { /* ? */ } *__begin_; 
        struct { /* ? */ } *__end_; 
        struct __compressed_pair<GEOVectorTilePoint *, std::__1::allocator<GEOVectorTilePoint> > { 
            struct { /* ? */ } *__first_; 
        } __end_cap_; 
    } _points;
    struct vector<geo::PolylineCoordinate, std::__1::allocator<geo::PolylineCoordinate> > { 
        struct PolylineCoordinate {} *__begin_; 
        struct PolylineCoordinate {} *__end_; 
        struct __compressed_pair<geo::PolylineCoordinate *, std::__1::allocator<geo::PolylineCoordinate> > { 
            struct PolylineCoordinate {} *__first_; 
        } __end_cap_; 
    } _routeOffsets;
    unsigned long _mapEdgeOffset;
    BOOL _clippedFront;
    BOOL _clippedBack;
}

@property(readonly) struct shared_ptr<geo::MapEdgeRoad> { struct MapEdgeRoad {} *x1; struct __shared_weak_count {} *x2; } mapEdge;
@property(readonly) struct { struct { id x_1_1_1; char *x_1_1_2; unsigned int x_1_1_3; unsigned int x_1_1_4; unsigned int x_1_1_5; unsigned int x_1_1_6; unsigned int x_1_1_7; unsigned long long x_1_1_8; BOOL x_1_1_9; unsigned long long x_1_1_10; float x_1_1_11; unsigned long long x_1_1_12; id x_1_1_13; int x_1_1_14; } x1; unsigned int x2; unsigned int x3; int x4; int x5; int x6; unsigned int x7; unsigned int x8; union { struct { struct { float x_1_3_1; float x_1_3_2; } x_1_2_1; struct { float x_2_3_1; float x_2_3_2; } x_1_2_2; } x_9_1_1; struct { float x_2_2_1; float x_2_2_2; float x_2_2_3; float x_2_2_4; } x_9_1_2; } x9; struct { /* ? */ } *x10; struct { unsigned short x_11_1_1[2]; unsigned short x_11_1_2[2]; } x11; unsigned char x12; }* feature;
@property(readonly) struct { float x1; float x2; }* points;
@property(readonly) unsigned long pointCount;
@property(readonly) struct PolylineCoordinate { unsigned int x1; float x2; } routeOffsetA;
@property(readonly) struct PolylineCoordinate { unsigned int x1; float x2; } routeOffsetB;
@property(readonly) struct PolylineCoordinate { unsigned int x1; float x2; }* routeOffsets;
@property(readonly) unsigned long mapEdgeOffset;
@property(readonly) BOOL clippedFront;
@property(readonly) BOOL clippedBack;


- (BOOL)clippedBack;
- (BOOL)clippedFront;
- (struct PolylineCoordinate { unsigned int x1; float x2; }*)routeOffsets;
- (unsigned long)mapEdgeOffset;
- (struct PolylineCoordinate { unsigned int x1; float x2; })routeOffsetA;
- (struct PolylineCoordinate { unsigned int x1; float x2; })routeOffsetB;
- (struct shared_ptr<geo::MapEdgeRoad> { struct MapEdgeRoad {} *x1; struct __shared_weak_count {} *x2; })mapEdge;
- (unsigned long)pointCount;
- (struct { float x1; float x2; }*)points;
- (struct { struct { id x_1_1_1; char *x_1_1_2; unsigned int x_1_1_3; unsigned int x_1_1_4; unsigned int x_1_1_5; unsigned int x_1_1_6; unsigned int x_1_1_7; unsigned long long x_1_1_8; BOOL x_1_1_9; unsigned long long x_1_1_10; float x_1_1_11; unsigned long long x_1_1_12; id x_1_1_13; int x_1_1_14; } x1; unsigned int x2; unsigned int x3; int x4; int x5; int x6; unsigned int x7; unsigned int x8; union { struct { struct { float x_1_3_1; float x_1_3_2; } x_1_2_1; struct { float x_2_3_1; float x_2_3_2; } x_1_2_2; } x_9_1_1; struct { float x_2_2_1; float x_2_2_2; float x_2_2_3; float x_2_2_4; } x_9_1_2; } x9; struct { /* ? */ } *x10; struct { unsigned short x_11_1_1[2]; unsigned short x_11_1_2[2]; } x11; unsigned char x12; }*)feature;
- (void)calculateRouteOffsetsBetweenA:(struct PolylineCoordinate { unsigned int x1; float x2; })arg1 andB:(struct PolylineCoordinate { unsigned int x1; float x2; })arg2 overLength:(float)arg3 onRoute:(id)arg4;
- (id)initWithRoadPath:(const struct RoadPathElement<std::__1::shared_ptr<geo::MapEdge> > { int (**x1)(); int x2; unsigned int x3; struct shared_ptr<geo::MapEdge> { struct MapEdge {} *x_4_1_1; struct __shared_weak_count {} *x_4_1_2; } x4; struct GeoPolyline { struct shared_ptr<const std::__1::vector<zilch::GeoCoordinates, std::__1::allocator<zilch::GeoCoordinates> > > { struct vector<zilch::GeoCoordinates, std::__1::allocator<zilch::GeoCoordinates> > {} *x_1_2_1; struct __shared_weak_count {} *x_1_2_2; } x_5_1_1; int x_5_1_2; } x5; int x6; }*)arg1 sectionRect:(const struct { struct { double x_1_1_1; double x_1_1_2; } x1; struct { double x_2_1_1; double x_2_1_2; } x2; }*)arg2;
- (void).cxx_destruct;
- (id).cxx_construct;
- (id)description;
- (void)dealloc;

@end
