/* Generated by RuntimeBrowser.
   Image: /System/Library/PrivateFrameworks/iWorkImport.framework/iWorkImport
 */

@class TSCECalculationEngine, TSTExpressionNode, NSString, TSTTableInfo;

@interface TSTFormula : NSObject <NSCopying> {
    TSTExpressionNode *mExpressionTree;
    TSCECalculationEngine *mCalculationEngine;
    TSTTableInfo *mHostInfo;
    NSString *mInitialWhitespace;
    struct { 
        unsigned short row; 
        unsigned char column; 
        unsigned char reserved; 
    } mHostCell;
    BOOL mSyntaxError;
    BOOL mFixupFormulas;
    BOOL mFormulaWasFixable;
    BOOL mFormulaFixupsShouldStick;
    BOOL mEmpty;
    BOOL mRequireEqualsToken;
}

@property(readonly) struct TSCEFormula { struct TSCEASTNodeArray {} *x1; struct TSCEFormulaTranslationFlags { unsigned int x_2_1_1 : 1; unsigned int x_2_1_2 : 1; } x2; } formula;
@property(copy) NSString * initialWhitespace;
@property(getter=isSyntaxError) BOOL syntaxError;
@property BOOL fixupFormulas;
@property(readonly) BOOL formulaWasFixable;
@property(readonly) BOOL formulaFixupsShouldStick;
@property BOOL requireEqualsToken;
@property(retain) TSTExpressionNode * expressionTree;
@property(getter=isEmpty) BOOL empty;
@property(retain) TSCECalculationEngine * calculationEngine;

+ (int)formulaQuoteContextAtCharIndex:(unsigned int)arg1 inStorage:(id)arg2;
+ (id)equalsCharacters;
+ (id)leadingSingleQuoteEscapeCharacters;
+ (id)p_charactersToTemporarilyChopOffEndToFixSyntaxError;
+ (id)rightParenCharacters;
+ (id)leftParenCharacters;
+ (id)doubleQuoteCharacters;
+ (id)singleQuoteCharacters;
+ (id)formulaForCell:(id)arg1 atCellID:(struct { unsigned short x1; unsigned char x2; unsigned char x3; })arg2 inTable:(id)arg3;

- (struct TSCEFormula { struct TSCEASTNodeArray {} *x1; struct TSCEFormulaTranslationFlags { unsigned int x_2_1_1 : 1; unsigned int x_2_1_2 : 1; } x2; })formula;
- (void)reset;
- (id).cxx_construct;
- (BOOL)isEmpty;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (void)dealloc;
- (void)setEmpty:(BOOL)arg1;
- (void)setRequireEqualsToken:(BOOL)arg1;
- (BOOL)requireEqualsToken;
- (id)initialWhitespace;
- (BOOL)formulaFixupsShouldStick;
- (BOOL)formulaWasFixable;
- (void)setFixupFormulas:(BOOL)arg1;
- (BOOL)fixupFormulas;
- (id)formulaDetokenizedText;
- (void)reparseWithStorage:(id)arg1;
- (BOOL)hasBareArgumentPlaceholders;
- (id)initWithCalculationEngine:(id)arg1 hostCell:(struct { unsigned short x1; unsigned char x2; unsigned char x3; })arg2 hostTable:(id)arg3;
- (id)p_formulaAsTextReturningTokenValues:(BOOL)arg1;
- (id)expressionTree;
- (id)p_fixFormula:(id)arg1;
- (void)reparseWithStorage:(id)arg1 adjustExpressionTree:(id)arg2;
- (id)nodesToCheckForBareArgumentPlaceholders;
- (void)setSyntaxError:(BOOL)arg1;
- (void)setInitialWhitespace:(id)arg1;
- (void)setExpressionTree:(id)arg1;
- (id)initWithCalculationEngine:(id)arg1 expressionTree:(id)arg2 hostCell:(struct { unsigned short x1; unsigned char x2; unsigned char x3; })arg3 hostTable:(id)arg4;
- (void)insertFormulaText:(id)arg1 includeWhitespace:(BOOL)arg2;
- (id)initWithContext:(id)arg1 calculationEngine:(id)arg2 hostCell:(struct { unsigned short x1; unsigned char x2; unsigned char x3; })arg3 TSCEFormula:(const struct TSCEFormula { struct TSCEASTNodeArray {} *x1; struct TSCEFormulaTranslationFlags { unsigned int x_2_1_1 : 1; unsigned int x_2_1_2 : 1; } x2; }*)arg4 ownerID:(struct __CFUUID { }*)arg5;
- (id)formulaPlainText;
- (id)calculationEngine;
- (BOOL)isSyntaxError;
- (void)setCalculationEngine:(id)arg1;

@end
