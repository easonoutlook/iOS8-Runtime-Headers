/* Generated by RuntimeBrowser.
   Image: /System/Library/PrivateFrameworks/iWorkImport.framework/iWorkImport
 */

/* RuntimeBrowser encountered one or more ivar type encodings for a function pointer. 
   The runtime does not encode function signature information.  We use a signature of: 
           "int (*funcName)()",  where funcName might be null. 
 */

@class TSKAnnotationAuthor, NSString, NSDate, <TSKModel>, TSDCommentStorage;

@interface TSWPHighlight : TSPObject <TSDAnnotationHosting, TSPCopying, TSKDocumentObject> {
    <TSKModel> *model;
    TSDCommentStorage *_commentStorage;
}

@property(retain) TSDCommentStorage * commentStorage;
@property(readonly) int annotationType;
@property(readonly) int annotationDisplayStringType;
@property(retain) TSKAnnotationAuthor * author;
@property(readonly) NSDate * date;
@property <TSKModel> * model;
@property(readonly) NSString * changeTrackingString;
@property(copy) TSDCommentStorage * storage;

+ (id)defaultHighlightWithContext:(id)arg1 includeCommentWithAuthor:(id)arg2;

- (int)annotationType;
- (id)author;
- (void)setAuthor:(id)arg1;
- (id)storage;
- (id)model;
- (void)setModel:(id)arg1;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (id)date;
- (BOOL)isEqual:(id)arg1;
- (id)description;
- (void)dealloc;
- (void)setCommentStorage:(id)arg1;
- (id)initWithContext:(id)arg1 commentStorage:(id)arg2;
- (BOOL)isCommentEmpty;
- (void)p_invalidateAnnotationResultsForDocumentRoot:(id)arg1;
- (id)commentStorage;
- (int)annotationDisplayStringType;
- (id)commandForDeletingComment;
- (void)commitText:(id)arg1;
- (void)wasRemovedFromDocumentRoot:(id)arg1;
- (void)willBeRemovedFromDocumentRoot:(id)arg1;
- (void)wasAddedToDocumentRoot:(id)arg1 context:(id)arg2;
- (void)willBeAddedToDocumentRoot:(id)arg1 context:(id)arg2;
- (void)loadFromArchive:(const struct HighlightArchive { int (**x1)(); struct UnknownFieldSet { struct vector<google::protobuf::UnknownField, std::__1::allocator<google::protobuf::UnknownField> > {} *x_2_1_1; } x2; struct Reference {} *x3; int x4; unsigned int x5[1]; }*)arg1 unarchiver:(id)arg2;
- (id)copyWithContext:(id)arg1;
- (void)setStorage:(id)arg1;
- (void)saveToArchiver:(id)arg1;
- (id)initFromUnarchiver:(id)arg1;

@end
