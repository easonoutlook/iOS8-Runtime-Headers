/* Generated by RuntimeBrowser.
   Image: /System/Library/PrivateFrameworks/PhotoEditSupport.framework/PhotoEditSupport
 */

@class NSMutableArray;

@interface BLRetouchEffectLayer : BLRetouchLayer  {
    struct CGRect { 
        struct CGPoint { 
            float x; 
            float y; 
        } origin; 
        struct CGSize { 
            float width; 
            float height; 
        } size; 
    } _area;
    BOOL _startFilled;
    NSMutableArray *_brushStrokes;
    BOOL _strokeInProgress;
    struct { 
        unsigned char blue; 
        unsigned char green; 
        unsigned char red; 
        unsigned char alpha; 
    } _samplePixel;
    float _edgeDetectSize;
    struct CGContext { } *_edgeDetectContextRef;
    struct CGContext { } *_layerMask;
    float _amount;
}

@property struct CGContext { }* layerMask;
@property struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; } area;
@property float amount;
@property(copy) NSMutableArray * brushStrokes;
@property(readonly) BOOL strokeInProgress;


- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })area;
- (BOOL)strokeInProgress;
- (void)setLayerMask:(struct CGContext { }*)arg1;
- (void)fillMask;
- (void)clearMask;
- (struct CGImage { }*)newMaskImage;
- (BOOL)solidBrush;
- (void)strokeDidFinish;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })drawBrushAtLocation:(struct CGPoint { float x1; float x2; })arg1 opacity:(float)arg2 erase:(BOOL)arg3 magicEdges:(BOOL)arg4 brushSize:(float)arg5 brushSoftness:(float)arg6;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })doDrawBrushAtLocation:(struct CGPoint { float x1; float x2; })arg1 opacity:(float)arg2 erase:(BOOL)arg3 magicEdges:(BOOL)arg4 brushSize:(float)arg5 brushSoftness:(float)arg6 firstPoint:(BOOL)arg7;
- (struct CGContext { }*)edgeDetectContextRefForSize:(float)arg1;
- (struct CGImage { }*)newImageFromContextWithEffect:(struct CGContext { }*)arg1;
- (BOOL)isAffectingOutput;
- (void)performFill;
- (void)fillMaskWithValue:(float)arg1;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })maskFrame;
- (struct CGContext { }*)layerMask;
- (BOOL)hasAmount;
- (void)setBrushStrokes:(id)arg1;
- (id)brushStrokes;
- (void)releaseMask;
- (struct CGContext { }*)newContextWithEffect:(struct CGContext { }*)arg1;
- (void)setLayerData:(id)arg1;
- (id)layerData;
- (struct CGContext { }*)newContextForRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1 inDestRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg2 andScale:(float)arg3;
- (void)setArea:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (BOOL)hasLayerMask;
- (float)amount;
- (void)setAmount:(float)arg1;
- (void)setEnabled:(BOOL)arg1;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })imageFrame;
- (void)dealloc;
- (id)init;

@end
