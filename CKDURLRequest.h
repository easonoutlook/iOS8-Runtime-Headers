/* Generated by RuntimeBrowser.
   Image: /System/Library/PrivateFrameworks/CloudKitDaemon.framework/CloudKitDaemon
 */

/* RuntimeBrowser encountered an ivar type encoding it does not handle. 
   See Warning(s) below.
 */

@class NSDictionary, NSHTTPURLResponse, NSFileHandle, NSMutableArray, NSString, CKDProtobufStreamWriter, NSRunLoop, NSData, NSInputStream, <CKDResponseBodyParser>, NSURLRequest, NSMutableDictionary, CKDClientContext, NSURLSessionConfiguration, NSDate, NSError, NSArray, CKDProtocolTranslator, <CKDAccountInfoProvider>, NSOperationQueue, NSURLSessionDataTask, NSURL;

@interface CKDURLRequest : NSObject <CKDURLSessionTaskDelegate, CKDFlowControlBudgetable, CKDProtobufMessageSigningDelegate, CKDFlowControllable> {
    <CKDAccountInfoProvider> *_accountInfoProvider;
    double _timeoutInterval;
    int _responseStatusCode;
    NSDate *_dateRequestWentOut;
    NSRunLoop *_runLoopToFireOn;
    NSString *_requestUUID;
    BOOL _didSendRequest;
    BOOL _didFinishLoading;
    BOOL _finished;
    BOOL _didRetryAuth;
    BOOL _didRetrySignature;
    <CKDResponseBodyParser> *_responseBodyParser;
    BOOL _allowAutomaticRedirects;

  /* Unexpected information at end of encoded ivar type: ? */
  /* Error parsing encoded ivar type info: @? */
    id _requestProgressBlock;


  /* Unexpected information at end of encoded ivar type: ? */
  /* Error parsing encoded ivar type info: @? */
    id _responseProgressBlock;


  /* Unexpected information at end of encoded ivar type: ? */
  /* Error parsing encoded ivar type info: @? */
    id _completionBlock;

    NSError *_error;
    unsigned int _numDownloadedElements;
    NSMutableDictionary *_overriddenHeaders;
    NSMutableArray *_redirectHistory;
    NSData *_fakeResponseData;
    BOOL _haveParsedFakeResponseData;
    CKDProtobufStreamWriter *_streamWriter;
    BOOL _usesBackgroundSession;
    BOOL _allowsCellularAccess;
    NSDictionary *_requestProperties;
    CKDClientContext *_context;
    int _databaseScope;
    CKDProtocolTranslator *_translator;
    NSString *_sourceApplicationBundleIdentifier;
    NSString *_sourceApplicationSecondaryIdentifier;
    NSString *__testUnderscoreProperty;
    NSArray *_requestOperations;
    NSArray *_requestOperationClasses;
    NSURLSessionConfiguration *_sessionConfiguration;
    NSURLSessionDataTask *_urlSessionTask;
    NSURLRequest *_request;
    NSHTTPURLResponse *_response;
    NSOperationQueue *_delegateQueue;
    unsigned int _accumulatedFlowControlCost;
    NSFileHandle *_responseFileHandle;
    NSFileHandle *_requestFileHandle;
    NSString *_responseLogFilePath;
    NSString *_requestLogFilePath;
    NSString *_deviceID;
}

@property(retain) <CKDAccountInfoProvider> * accountInfoProvider;
@property double timeoutInterval;
@property(retain) CKDClientContext * context;
@property int databaseScope;
@property(retain) CKDProtocolTranslator * translator;
@property BOOL allowAutomaticRedirects;
@property(retain) NSDictionary * requestProperties;
@property BOOL usesBackgroundSession;
@property BOOL allowsCellularAccess;
@property(retain) NSString * sourceApplicationBundleIdentifier;
@property(retain) NSString * sourceApplicationSecondaryIdentifier;
@property(readonly) CKDProtobufStreamWriter * streamWriter;
@property(copy) id requestProgressBlock;
@property(copy) id responseProgressBlock;
@property(copy) id completionBlock;
@property(retain) NSString * _testUnderscoreProperty;
@property(retain) <CKDResponseBodyParser> * responseBodyParser;
@property(readonly) NSString * httpMethod;
@property(readonly) NSDictionary * additionalHeaderValues;
@property(readonly) BOOL hasRequestBody;
@property(readonly) NSInputStream * requestBodyStream;
@property(readonly) NSArray * requestOperations;
@property(readonly) NSArray * requestOperationClasses;
@property(readonly) int operationType;
@property(readonly) NSString * path;
@property(readonly) int serverType;
@property(readonly) int partitionType;
@property(readonly) NSURL * url;
@property(readonly) BOOL shouldCompressBody;
@property(readonly) NSString * acceptContentType;
@property(readonly) NSString * requestContentType;
@property(readonly) NSString * protobufOperationName;
@property(readonly) BOOL isFinished;
@property(retain) NSError * error;
@property(readonly) NSDictionary * responseHeaders;
@property(readonly) int responseStatusCode;
@property(readonly) NSURL * lastRedirectURL;
@property(readonly) NSString * requestUUID;
@property(retain) NSURLSessionConfiguration * sessionConfiguration;
@property(retain) NSURLSessionDataTask * urlSessionTask;
@property(retain) NSURLRequest * request;
@property(retain) NSHTTPURLResponse * response;
@property(retain) NSOperationQueue * delegateQueue;
@property unsigned int accumulatedFlowControlCost;
@property unsigned int numDownloadedElements;
@property(retain) NSFileHandle * responseFileHandle;
@property(retain) NSFileHandle * requestFileHandle;
@property(retain) NSString * responseLogFilePath;
@property(retain) NSString * requestLogFilePath;
@property(copy) NSString * deviceID;

+ (id)_sharedCookieStorage;
+ (id)_logQueue;

- (int)operationType;
- (void)setRequest:(id)arg1;
- (id)error;
- (void)setError:(id)arg1;
- (id)requestFileHandle;
- (id)responseFileHandle;
- (void)setNumDownloadedElements:(unsigned int)arg1;
- (void)setDelegateQueue:(id)arg1;
- (void)set_testUnderscoreProperty:(id)arg1;
- (id)_testUnderscoreProperty;
- (id)translator;
- (void)setRequestProperties:(id)arg1;
- (id)requestProperties;
- (void)setAllowAutomaticRedirects:(BOOL)arg1;
- (id)lastRedirectURL;
- (id)responseHeaders;
- (void)_handleBadPasswordResponse;
- (void)overrideRequestHeader:(id)arg1 withValue:(id)arg2;
- (BOOL)expectsSingleObject;
- (BOOL)shouldLogResponseBody;
- (id)signatureMessageForMessageData:(id)arg1 error:(id*)arg2;
- (void)URLSessionTask:(id)arg1 conditionalRequirementsChanged:(BOOL)arg2;
- (void)URLSessionTaskIsWaitingForConnection:(id)arg1;
- (id)URLSessionTask:(id)arg1 requestForEstablishedConnection:(id)arg2;
- (void)URLSessionDataTask:(id)arg1 didReceiveData:(id)arg2;
- (void)URLSessionDataTask:(id)arg1 didReceiveResponse:(id)arg2 completionHandler:(id)arg3;
- (void)URLSessionTask:(id)arg1 didCompleteWithError:(id)arg2;
- (void)URLSessionTask:(id)arg1 didSendBodyData:(long long)arg2 totalBytesSent:(long long)arg3 totalBytesExpectedToSend:(long long)arg4;
- (void)URLSessionTask:(id)arg1 needNewBodyStream:(id)arg2;
- (void)URLSessionTask:(id)arg1 willPerformHTTPRedirection:(id)arg2 newRequest:(id)arg3 completionHandler:(id)arg4;
- (id)operationRequestWithType:(int)arg1;
- (unsigned int)numDownloadedElements;
- (id)_errorFromHTTPResponse:(id)arg1;
- (int)responseStatusCode;
- (id)requestProgressBlock;
- (id)requestBodyStream;
- (id)defaultParserForContentType:(id)arg1;
- (id)responseBodyParser;
- (id)responseProgressBlock;
- (void)_logHTTPResponse:(id)arg1;
- (BOOL)allowAutomaticRedirects;
- (void)setResponseProgressBlock:(id)arg1;
- (void)setRequestProgressBlock:(id)arg1;
- (void)_flushRequestResponseLogs;
- (void)reportStatusWithError:(id)arg1;
- (void)setSessionConfiguration:(id)arg1;
- (void)setUrlSessionTask:(id)arg1;
- (id)sessionConfiguration;
- (void)_populateURLSessionConfiguration;
- (void)setResponseBodyParser:(id)arg1;
- (void)_loadRequest:(id)arg1;
- (void)_logRequest:(id)arg1;
- (id)additionalHeaderValues;
- (id)_versionHeader;
- (id)acceptContentType;
- (id)requestContentType;
- (BOOL)hasRequestBody;
- (unsigned int)cachePolicy;
- (double)timeoutInterval;
- (BOOL)validate:(id*)arg1;
- (void)_performRequest;
- (BOOL)requiresTokenRegistration;
- (void)_registerPushTokens;
- (void)setDeviceID:(id)arg1;
- (BOOL)requiresDeviceID;
- (void)_fetchDeviceID;
- (void)setTranslator:(id)arg1;
- (BOOL)allowsAuthedAccount;
- (void)_fetchContainerScopedUserID;
- (void)_setupMescal;
- (BOOL)requiresConfiguration;
- (void)_setupConfiguration;
- (BOOL)requiresAppPartitionURL;
- (void)_setupPublicDatabaseURL;
- (BOOL)allowsAnonymousAccount;
- (BOOL)requiresSignature;
- (BOOL)shouldCompressBody;
- (id)protobufOperationName;
- (id)requestOperationClasses;
- (int)partitionType;
- (int)serverType;
- (void)requestDidParsePlistObject:(id)arg1;
- (int)_handlePlistResult:(id)arg1;
- (void)requestDidParseJSONObject:(id)arg1;
- (int)_handleServerJSONResult:(id)arg1;
- (void)requestDidParseNodeFailure:(id)arg1;
- (void)requestDidParseProtobufObject:(id)arg1;
- (int)_handleServerProtobufResult:(id)arg1;
- (void)_logParsedObject:(id)arg1;
- (Class)expectedResponseClass;
- (void)setAccumulatedFlowControlCost:(unsigned int)arg1;
- (unsigned int)accumulatedFlowControlCost;
- (void)tearDownResources;
- (id)streamWriter;
- (BOOL)includeContainerInfo;
- (id)requestOperations;
- (void)setResponseFileHandle:(id)arg1;
- (void)setRequestFileHandle:(id)arg1;
- (id)responseLogFilePath;
- (id)requestLogFilePath;
- (id)accountInfoProvider;
- (id)_responseFileHandle;
- (id)httpMethod;
- (id)_requestFileHandle;
- (void)setRequestLogFilePath:(id)arg1;
- (void)setResponseLogFilePath:(id)arg1;
- (void)_makeTrafficFileHandleWithPrefix:(id)arg1 outPath:(id*)arg2 outHandle:(id*)arg3;
- (id)urlSessionTask;
- (int)databaseScope;
- (id)requestUUID;
- (void)inheritParentSectionID:(id)arg1;
- (id)ckShortDescription;
- (id)flowControlKey;
- (unsigned int)flowControlCost;
- (id)CKPropertiesDescription;
- (void)performRequest;
- (void)finishRequestWithError:(id)arg1;
- (void)setAccountInfoProvider:(id)arg1;
- (void)setDatabaseScope:(int)arg1;
- (id)sourceApplicationBundleIdentifier;
- (void)setTimeoutInterval:(double)arg1;
- (id)deviceID;
- (id)sourceApplicationSecondaryIdentifier;
- (void)setSourceApplicationSecondaryIdentifier:(id)arg1;
- (void)setSourceApplicationBundleIdentifier:(id)arg1;
- (BOOL)usesBackgroundSession;
- (void)setAllowsCellularAccess:(BOOL)arg1;
- (BOOL)allowsCellularAccess;
- (void)setUsesBackgroundSession:(BOOL)arg1;
- (id)delegateQueue;
- (BOOL)isFinished;
- (void).cxx_destruct;
- (id)request;
- (id)response;
- (void)setCompletionBlock:(id)arg1;
- (id)completionBlock;
- (void)setContext:(id)arg1;
- (id)url;
- (id)path;
- (id)context;
- (id)description;
- (void)dealloc;
- (id)init;
- (void)setResponse:(id)arg1;
- (BOOL)markAsFinished;

@end
