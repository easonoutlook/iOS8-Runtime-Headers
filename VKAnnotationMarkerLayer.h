/* Generated by RuntimeBrowser.
   Image: /System/Library/PrivateFrameworks/VectorKit.framework/VectorKit
 */

/* RuntimeBrowser encountered one or more ivar type encodings for a function pointer. 
   The runtime does not encode function signature information.  We use a signature of: 
           "int (*funcName)()",  where funcName might be null. 
 */

@class VKAnnotationModel, VKAnnotationMarker, NSArray, VKAnnotationMarkerLayer, NSMutableArray;

@interface VKAnnotationMarkerLayer : NSObject  {
    VKAnnotationModel *_model;
    VKAnnotationMarkerLayer *_superlayer;
    NSMutableArray *_sublayers;
    VKAnnotationMarker *_annotationMarker;
    struct CGPoint { 
        float x; 
        float y; 
    } _centerOffset;
    struct CGPoint { 
        float x; 
        float y; 
    } _accumulatedCenterOffset;
    BOOL _hasScreenRect;
    struct { 
        double x0; 
        double x1; 
        double y0; 
        double y1; 
    } _screenRect;
    BOOL _hasMass;
    int _styleType;
    float _contentScale;
}

@property VKAnnotationMarkerLayer * superlayer;
@property(copy,readonly) NSArray * sublayers;
@property int styleType;
@property struct CGPoint { float x1; float x2; } centerOffset;
@property BOOL hasMass;
@property(readonly) float contentScale;
@property VKAnnotationModel * model;
@property VKAnnotationMarker * annotationMarker;
@property struct CGPoint { float x1; float x2; } accumulatedCenterOffset;
@property(readonly) BOOL hasScreenRect;
@property struct { double x1; double x2; double x3; double x4; } screenRect;


- (void)setHasMass:(BOOL)arg1;
- (struct CGPoint { float x1; float x2; })accumulatedCenterOffset;
- (struct CGPoint { float x1; float x2; })centerOffset;
- (void)setCenterOffset:(struct CGPoint { float x1; float x2; })arg1;
- (void)insertSublayer:(id)arg1 aboveSublayer:(id)arg2;
- (void)insertSublayer:(id)arg1 belowSublayer:(id)arg2;
- (id)_styleAttributes;
- (id)annotationMarker;
- (int)styleType;
- (BOOL)hasScreenRect;
- (BOOL)hasMass;
- (BOOL)shouldSnapToPixelsWithContext:(id)arg1;
- (void)updateWithContentScale:(float)arg1;
- (void)removeSublayer:(id)arg1;
- (void)setAccumulatedCenterOffset:(struct CGPoint { float x1; float x2; })arg1;
- (void)setSuperlayer:(id)arg1;
- (void)updateWithStyleQuery:(const struct shared_ptr<md::StyleQuery> { struct StyleQuery {} *x1; struct __shared_weak_count {} *x2; }*)arg1;
- (void)setScreenRect:(struct { double x1; double x2; double x3; double x4; })arg1;
- (void)setStyleType:(int)arg1;
- (struct { double x1; double x2; double x3; double x4; })screenRect;
- (void)setAnnotationMarker:(id)arg1;
- (float)distanceFromPoint:(struct VKPoint { double x1; double x2; double x3; })arg1 canvasSize:(struct CGSize { float x1; float x2; })arg2;
- (void)appendCommandsToBuffer:(struct CommandBuffer { int (**x1)(); struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > { struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> > { struct __rep { union { struct __long { unsigned int x_1_5_1; unsigned int x_1_5_2; char *x_1_5_3; } x_1_4_1; struct __short { union { unsigned char x_1_6_1; BOOL x_1_6_2; } x_2_5_1; BOOL x_2_5_2[11]; } x_1_4_2; struct __raw { unsigned long x_3_5_1[3]; } x_1_4_3; } x_1_3_1; } x_1_2_1; } x_2_1_1; } x2; struct RenderQueue {} *x3; struct ClearItem {} *x4; struct vector<ggl::RenderItem *, std::__1::allocator<ggl::RenderItem *> > { struct RenderItem {} **x_5_1_1; struct RenderItem {} **x_5_1_2; struct __compressed_pair<ggl::RenderItem **, std::__1::allocator<ggl::RenderItem *> > { struct RenderItem {} **x_3_2_1; } x_5_1_3; } x5; struct vector<ggl::Texture2DLoadItem, std::__1::allocator<ggl::Texture2DLoadItem> > { struct Texture2DLoadItem {} *x_6_1_1; struct Texture2DLoadItem {} *x_6_1_2; struct __compressed_pair<ggl::Texture2DLoadItem *, std::__1::allocator<ggl::Texture2DLoadItem> > { struct Texture2DLoadItem {} *x_3_2_1; } x_6_1_3; } x6; struct vector<ggl::BufferLoadItem, std::__1::allocator<ggl::BufferLoadItem> > { struct BufferLoadItem {} *x_7_1_1; struct BufferLoadItem {} *x_7_1_2; struct __compressed_pair<ggl::BufferLoadItem *, std::__1::allocator<ggl::BufferLoadItem> > { struct BufferLoadItem {} *x_3_2_1; } x_7_1_3; } x7; struct deque<geo::fast_shared_ptr<ggl::QueryItem>, std::__1::allocator<geo::fast_shared_ptr<ggl::QueryItem> > > { struct __split_buffer<geo::fast_shared_ptr<ggl::QueryItem> *, std::__1::allocator<geo::fast_shared_ptr<ggl::QueryItem> *> > { struct fast_shared_ptr<ggl::QueryItem> {} **x_1_2_1; struct fast_shared_ptr<ggl::QueryItem> {} **x_1_2_2; struct fast_shared_ptr<ggl::QueryItem> {} **x_1_2_3; struct __compressed_pair<geo::fast_shared_ptr<ggl::QueryItem> **, std::__1::allocator<geo::fast_shared_ptr<ggl::QueryItem> *> > { struct fast_shared_ptr<ggl::QueryItem> {} **x_4_3_1; } x_1_2_4; } x_8_1_1; unsigned int x_8_1_2; struct __compressed_pair<unsigned long, std::__1::allocator<geo::fast_shared_ptr<ggl::QueryItem> > > { unsigned long x_3_2_1; } x_8_1_3; } x8; struct deque<ggl::PendingQuery, std::__1::allocator<ggl::PendingQuery> > { struct __split_buffer<ggl::PendingQuery *, std::__1::allocator<ggl::PendingQuery *> > { struct PendingQuery {} **x_1_2_1; struct PendingQuery {} **x_1_2_2; struct PendingQuery {} **x_1_2_3; struct __compressed_pair<ggl::PendingQuery **, std::__1::allocator<ggl::PendingQuery *> > { struct PendingQuery {} **x_4_3_1; } x_1_2_4; } x_9_1_1; unsigned int x_9_1_2; struct __compressed_pair<unsigned long, std::__1::allocator<ggl::PendingQuery> > { unsigned long x_3_2_1; } x_9_1_3; } x9; id x10; }*)arg1 inContext:(id)arg2;
- (void)willLayoutWithContext:(id)arg1;
- (int)_vectorType;
- (void)stylesheetDidChange;
- (void)layoutWithContext:(id)arg1;
- (void)runAnimation:(id)arg1;
- (float)contentScale;
- (id).cxx_construct;
- (id)model;
- (void)setModel:(id)arg1;
- (void)_updateStyle;
- (id)sublayers;
- (void)removeFromSuperlayer;
- (id)superlayer;
- (void)dealloc;
- (void)addSublayer:(id)arg1;
- (id)init;

@end
