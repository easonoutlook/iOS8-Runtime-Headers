/* Generated by RuntimeBrowser.
   Image: /System/Library/PrivateFrameworks/GeoServices.framework/GeoServices
 */

@class GEOLatLng, GEOBusiness, NSMutableArray, GEOTimezone, NSString, GEOStructuredAddress, GEOMapRegion, GEOAddress;

@interface GEOPlace : PBCodable <GEOURLSerializable, NSCopying> {
    double _area;
    long long _geoId;
    long long _uID;
    GEOAddress *_address;
    int _addressGeocodeAccuracy;
    NSMutableArray *_business;
    GEOLatLng *_center;
    NSString *_contactName;
    NSString *_contactSpokenName;
    NSMutableArray *_entryPoints;
    NSString *_eventDisplayName;
    NSString *_inputLanguage;
    int _localSearchProviderID;
    GEOMapRegion *_mapRegion;
    NSString *_name;
    GEOAddress *_phoneticAddress;
    NSString *_phoneticLocaleIdentifier;
    NSString *_phoneticName;
    NSString *_spokenAddress;
    NSString *_spokenName;
    GEOStructuredAddress *_spokenStructuredAddress;
    GEOTimezone *_timezone;
    int _type;
    int _waypointLabelType;
    BOOL _isDisputed;
    struct { 
        unsigned int area : 1; 
        unsigned int geoId : 1; 
        unsigned int uID : 1; 
        unsigned int addressGeocodeAccuracy : 1; 
        unsigned int localSearchProviderID : 1; 
        unsigned int type : 1; 
        unsigned int waypointLabelType : 1; 
        unsigned int isDisputed : 1; 
    } _has;
}

@property(retain,readonly) NSString * yelpID;
@property(readonly) GEOBusiness * firstBusiness;
@property BOOL hasWaypointLabelType;
@property int waypointLabelType;
@property(readonly) BOOL hasInputLanguage;
@property(retain) NSString * inputLanguage;
@property(readonly) BOOL hasPhoneticLocaleIdentifier;
@property(retain) NSString * phoneticLocaleIdentifier;
@property(readonly) BOOL hasContactName;
@property(retain) NSString * contactName;
@property(readonly) BOOL hasContactSpokenName;
@property(retain) NSString * contactSpokenName;
@property(readonly) BOOL hasEventDisplayName;
@property(retain) NSString * eventDisplayName;
@property BOOL hasUID;
@property long long uID;
@property BOOL hasType;
@property int type;
@property(readonly) BOOL hasName;
@property(retain) NSString * name;
@property(readonly) BOOL hasMapRegion;
@property(retain) GEOMapRegion * mapRegion;
@property(readonly) BOOL hasAddress;
@property(retain) GEOAddress * address;
@property(readonly) BOOL hasPhoneticName;
@property(retain) NSString * phoneticName;
@property(readonly) BOOL hasPhoneticAddress;
@property(retain) GEOAddress * phoneticAddress;
@property(readonly) BOOL hasCenter;
@property(retain) GEOLatLng * center;
@property(retain) NSMutableArray * business;
@property BOOL hasAddressGeocodeAccuracy;
@property int addressGeocodeAccuracy;
@property(retain) NSMutableArray * entryPoints;
@property BOOL hasIsDisputed;
@property BOOL isDisputed;
@property BOOL hasLocalSearchProviderID;
@property int localSearchProviderID;
@property(readonly) BOOL hasSpokenName;
@property(retain) NSString * spokenName;
@property(readonly) BOOL hasSpokenAddress;
@property(retain) NSString * spokenAddress;
@property BOOL hasArea;
@property double area;
@property(readonly) BOOL hasSpokenStructuredAddress;
@property(retain) GEOStructuredAddress * spokenStructuredAddress;
@property(readonly) BOOL hasTimezone;
@property(retain) GEOTimezone * timezone;
@property BOOL hasGeoId;
@property long long geoId;

+ (id)placeForPlaceData:(id)arg1;
+ (id)_placesFromURL:(id)arg1 hasCurrentLocation:(BOOL*)arg2 currentLocationIndex:(unsigned int*)arg3 options:(id*)arg4;
+ (id)_urlToPresentCurrentLocationAndPlaces:(id)arg1 currentLocationIndex:(unsigned int)arg2 options:(id)arg3;
+ (id)_urlToPresentPlaces:(id)arg1 options:(id)arg2;
+ (id)_urlToPresentCurrentLocationWithOptions:(id)arg1;
+ (id)_urlToShowCurrentLocationWithOptions:(id)arg1;
+ (id)_urlToShowCurrentLocationAndPlaces:(id)arg1 currentLocationIndex:(unsigned int)arg2 options:(id)arg3;
+ (id)_urlToShowPlaces:(id)arg1 options:(id)arg2;
+ (id)_placesFromDirectionsAction:(id)arg1 hasCurrentLocation:(BOOL*)arg2 currentLocationIndex:(unsigned int*)arg3 options:(id*)arg4;
+ (id)_placesFromShowAction:(id)arg1 hasCurrentLocation:(BOOL*)arg2 currentLocationIndex:(unsigned int*)arg3 options:(id*)arg4;
+ (id)_placesFromPresentAction:(id)arg1 hasCurrentLocation:(BOOL*)arg2 currentLocationIndex:(unsigned int*)arg3 options:(id*)arg4;
+ (id)_urlToPresentDirectionsForPlaces:(id)arg1 options:(id)arg2;
+ (id)_urlToPresentDirectionsForItems:(id)arg1 options:(id)arg2;
+ (id)_urlForDirectionsFromOrigin:(id)arg1 toDestination:(id)arg2 options:(id)arg3;
+ (id)_urlToPresentAction:(id)arg1 present:(id)arg2;
+ (id)_urlRepresentationForCurrentLocation;
+ (id)_urlToShowURLRepresentations:(id)arg1 options:(id)arg2;
+ (id)_urlForAction:(id)arg1 rison:(id)arg2;

- (long long)uID;
- (struct { double x1; double x2; })coordinate;
- (BOOL)hasName;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (BOOL)readFrom:(id)arg1;
- (void)setMapRegion:(id)arg1;
- (id)mapRegion;
- (double)area;
- (id)address;
- (BOOL)hasAddress;
- (id)initWithLatitude:(double)arg1 longitude:(double)arg2;
- (BOOL)hasType;
- (void)setHasType:(BOOL)arg1;
- (id)initWithLocation:(id)arg1 addressDictionary:(id)arg2 name:(id)arg3 businessURL:(id)arg4 phoneNumber:(id)arg5 muid:(unsigned long long)arg6 attributionID:(id)arg7 sampleSizeForUserRatingScore:(unsigned int)arg8 normalizedUserRatingScore:(float)arg9;
- (id)initWithPlaceInfo:(id)arg1 entity:(id)arg2 address:(id)arg3 bounds:(id)arg4 roadAccessInfo:(id)arg5;
- (id)geoMapItem;
- (id)_urlToPresentDirectionsFromCurrentLocationWithOptions:(id)arg1;
- (id)_urlToPresentDirectionsToCurrentLocationWithOptions:(id)arg1;
- (id)_urlToPresentDirectionsFromPlace:(id)arg1 options:(id)arg2;
- (id)_urlToPresentDirectionsToPlace:(id)arg1 options:(id)arg2;
- (id)_urlForDirectionsFromCurrentLocationWithOptions:(id)arg1;
- (id)_urlForDirectionsToCurrentLocationWithOptions:(id)arg1;
- (id)_urlForDirectionsFromPlace:(id)arg1 options:(id)arg2;
- (id)_urlForDirectionsToPlace:(id)arg1 options:(id)arg2;
- (id)_urlToPresentWithOptions:(id)arg1;
- (id)_urlToShowWithOptions:(id)arg1;
- (BOOL)_isEquivalentURLRepresentationTo:(id)arg1;
- (id)urlRepresentation;
- (id)initWithUrlRepresentation:(id)arg1;
- (id)eventDisplayName;
- (BOOL)hasEventDisplayName;
- (id)contactSpokenName;
- (BOOL)hasContactSpokenName;
- (id)contactName;
- (BOOL)hasContactName;
- (id)phoneticLocaleIdentifier;
- (BOOL)hasPhoneticLocaleIdentifier;
- (id)inputLanguage;
- (BOOL)hasInputLanguage;
- (BOOL)hasWaypointLabelType;
- (void)setHasWaypointLabelType:(BOOL)arg1;
- (void)setWaypointLabelType:(int)arg1;
- (int)waypointLabelType;
- (long long)geoId;
- (id)spokenAddress;
- (id)spokenName;
- (int)localSearchProviderID;
- (id)phoneticAddress;
- (BOOL)hasGeoId;
- (void)setHasGeoId:(BOOL)arg1;
- (void)setGeoId:(long long)arg1;
- (BOOL)hasSpokenStructuredAddress;
- (BOOL)hasSpokenAddress;
- (BOOL)hasSpokenName;
- (BOOL)hasLocalSearchProviderID;
- (void)setHasLocalSearchProviderID:(BOOL)arg1;
- (void)setLocalSearchProviderID:(int)arg1;
- (BOOL)hasIsDisputed;
- (void)setHasIsDisputed:(BOOL)arg1;
- (void)setIsDisputed:(BOOL)arg1;
- (BOOL)isDisputed;
- (void)setHasAddressGeocodeAccuracy:(BOOL)arg1;
- (void)setAddressGeocodeAccuracy:(int)arg1;
- (BOOL)hasPhoneticAddress;
- (id)entryPointAtIndex:(unsigned int)arg1;
- (void)clearEntryPoints;
- (void)clearBusiness;
- (unsigned int)businessCount;
- (void)addEntryPoint:(id)arg1;
- (void)addBusiness:(id)arg1;
- (void)setEventDisplayName:(id)arg1;
- (void)setContactSpokenName:(id)arg1;
- (void)setContactName:(id)arg1;
- (void)setPhoneticLocaleIdentifier:(id)arg1;
- (void)setInputLanguage:(id)arg1;
- (void)setSpokenAddress:(id)arg1;
- (void)setSpokenName:(id)arg1;
- (void)setEntryPoints:(id)arg1;
- (void)setBusiness:(id)arg1;
- (void)setPhoneticAddress:(id)arg1;
- (id)phoneticName;
- (BOOL)hasPhoneticName;
- (BOOL)hasUID;
- (void)setHasUID:(BOOL)arg1;
- (void)setUID:(long long)arg1;
- (void)setPhoneticName:(id)arg1;
- (id)timezone;
- (BOOL)hasTimezone;
- (BOOL)hasArea;
- (void)setHasArea:(BOOL)arg1;
- (void)setArea:(double)arg1;
- (void)setTimezone:(id)arg1;
- (id)arrivalMapRegionForTransportType:(int)arg1;
- (id)firstBusiness;
- (id)arrivalMapRegion;
- (int)addressGeocodeAccuracy;
- (BOOL)hasAddressGeocodeAccuracy;
- (id)entryPoints;
- (unsigned int)entryPointsCount;
- (id)businessAtIndex:(unsigned int)arg1;
- (id)business;
- (id)initWithLatitude:(double)arg1 longitude:(double)arg2 addressDictionary:(id)arg3;
- (id)bestName;
- (double)radialDistance;
- (id)spokenStructuredAddress;
- (void)setSpokenStructuredAddress:(id)arg1;
- (BOOL)hasMapRegion;
- (BOOL)hasCenter;
- (id)dictionaryRepresentation;
- (void)setCenter:(id)arg1;
- (id)center;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (int)type;
- (void)setType:(int)arg1;
- (unsigned int)hash;
- (BOOL)isEqual:(id)arg1;
- (id)name;
- (void)setName:(id)arg1;
- (id)description;
- (void)dealloc;
- (void)setAddress:(id)arg1;
- (id)addressDictionary;
- (id)clRegion;
- (id)clLocation;
- (id)initWithCLLocation:(id)arg1;
- (unsigned long long)businessID;
- (id)yelpID;
- (id)initWithPlacemark:(id)arg1;

@end
