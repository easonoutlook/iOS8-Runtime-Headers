/* Generated by RuntimeBrowser.
   Image: /System/Library/PrivateFrameworks/SportsTrainer.framework/SportsTrainer
 */

@class STRunCaloriesLabel, UILabel, UIButton, STRunProgressView, STRunPaceLabel, UIView, STRunDistanceLabel, STRunTimeLabel, SWRunWorkoutProxy, <STRunViewDelegate>, NSString, UIImageView, NSTimer;

@interface STRunView : UIView  {
    <STRunViewDelegate> *_delegate;
    SWRunWorkoutProxy *_workoutProxy;
    NSTimer *_subsecondTimer;
    NSTimer *_workoutInfoTimer;
    double _elapsedWorkoutTime;
    double _estimatedElapsedWorkoutTime;
    double _lastWorkoutNotificationTime;
    UIView *_rotationContainer;
    int _orientation;
    int _interface;
    UIButton *_leftButton;
    UIButton *_rightButton;
    UIButton *_endWorkoutButton;
    UIButton *_previousTrackButton;
    UIButton *_nextTrackButton;
    UIImageView *_transportControlsDivider;
    STRunTimeLabel *_runTimeLabel;
    STRunDistanceLabel *_runDistanceLabel;
    STRunPaceLabel *_runPaceLabel;
    STRunCaloriesLabel *_runCaloriesLabel;
    UIView *_labelSeparator;
    UILabel *_nowPlayingSongLabel;
    STRunProgressView *_runProgressView;
    float _progressToGoal;
    NSTimer *_considerSeekTimer;
    int _currentSeekDirection;
    NSString *_throttledWorkoutState;
    struct { 
        unsigned int timerPaused : 1; 
        unsigned int shouldStartTimer : 1; 
        unsigned int isLockScreen : 1; 
        unsigned int animateForResumeEventsOnly : 1; 
        unsigned int canHighlightPowerSong : 1; 
        unsigned int validPaceReceived : 1; 
        unsigned int noMusic : 1; 
        unsigned int seekHandled : 1; 
        unsigned int seekAllowed : 1; 
        unsigned int needsNowPlayingLayout : 1; 
        unsigned int forceTimeExtrapolation : 1; 
        unsigned int goalCompleted : 1; 
        unsigned int useMetricDistance : 1; 
        unsigned int forceMetricForDistanceOnly : 1; 
        unsigned int throttleNextPauseResume : 1; 
        unsigned int shouldControlMusic : 1; 
        unsigned int unused : 16; 
    } _runFlagsBitfield;
}

@property <STRunViewDelegate> * delegate;
@property BOOL isLockScreen;
@property BOOL animateForResumeEventsOnly;
@property int interface;
@property int orientation;
@property(readonly) SWRunWorkoutProxy * workoutProxy;


- (void)_nowPlayingChanged:(id)arg1;
- (id)workoutProxy;
- (id)_powersongLandscapeButtonDownImage;
- (id)_powersongLandscapeButtonImage;
- (id)_powersongButtonDownImage;
- (id)_powersongButtonImage;
- (id)_endWorkoutLandscapeButtonDownImage;
- (id)_endWorkoutLandscapeButtonImage;
- (id)_endWorkoutButtonDownImage;
- (id)_mainButtonStringForGoalType:(id)arg1;
- (void)resumeWorkout;
- (void)resumeEventsOnly;
- (void)setAnimateForResumeEventsOnly:(BOOL)arg1;
- (BOOL)animateForResumeEventsOnly;
- (void)setIsLockScreen:(BOOL)arg1;
- (id)_flatGradientImageWithImage:(id)arg1 startColor:(id)arg2 startPoint:(struct CGPoint { float x1; float x2; })arg3 endColor:(id)arg4 endPoint:(struct CGPoint { float x1; float x2; })arg5;
- (id)_startWorkoutEndColor;
- (id)_startWorkoutStartColor;
- (void)_workoutInfoTimerTick:(id)arg1;
- (void)_subsecondTimerTick:(id)arg1;
- (id)_endWorkoutButtonImage;
- (id)_startWorkoutButtonImage;
- (void)_changeMusic;
- (void)_updateProgressViewWithDictionary:(id)arg1;
- (BOOL)_beginSeekInDirection:(int)arg1;
- (BOOL)_endSeekInDirection:(int)arg1;
- (void)_considerSeekTimerFired:(id)arg1;
- (void)_unthrottlePauseResume;
- (void)_finishResumeEventsOnly;
- (void)_resumeWorkoutForResume:(BOOL)arg1;
- (void)_pauseWorkoutForResume:(BOOL)arg1;
- (void)updateOrientation;
- (void)_layoutLabel:(id)arg1 inPosition:(int)arg2 isLandscape:(BOOL)arg3 isLockedMusicInterface:(BOOL)arg4 hasProgressView:(BOOL)arg5;
- (void)_layoutPaceInPosition:(int)arg1 isLandscape:(BOOL)arg2 isLockedMusicInterface:(BOOL)arg3 hasProgressView:(BOOL)arg4;
- (void)_layoutCaloriesInPosition:(int)arg1 isLandscape:(BOOL)arg2 isLockedMusicInterface:(BOOL)arg3 hasProgressView:(BOOL)arg4;
- (void)_layoutRunDistanceInPosition:(int)arg1 isLandscape:(BOOL)arg2 isLockedMusicInterface:(BOOL)arg3 hasProgressView:(BOOL)arg4;
- (void)_layoutRunTimeInPosition:(int)arg1 isLandscape:(BOOL)arg2 isLockedMusicInterface:(BOOL)arg3 hasProgressView:(BOOL)arg4;
- (BOOL)_isLockedMusicInterface;
- (void)_layoutNowPlayingLabelForWorkoutType:(int)arg1;
- (void)_layoutSecondaryLabelsForWorkoutType:(int)arg1;
- (void)_layoutPrimaryLabelForWorkoutType:(int)arg1;
- (void)_nextTrack;
- (void)_cancelConsiderSeeking:(id)arg1;
- (void)_beginConsiderSeeking:(id)arg1;
- (void)_endSeeking:(id)arg1;
- (void)_previousTrack;
- (void)selectPowerSong;
- (void)_updateSubviewsForWorkoutData:(id)arg1;
- (void)_layoutLabelsForWorkoutType:(int)arg1 presetGoal:(id)arg2;
- (void)_configureButtonsForWorkout;
- (void)_layoutMainButtonsForGoalType:(id)arg1;
- (void)_layoutBottomButtons;
- (int)_workoutTypeForGoalType:(id)arg1;
- (BOOL)isLockScreen;
- (void)_startUpdateTimers;
- (void)_stopUpdateTimers;
- (void)_playPowerSongEventFromRemote:(id)arg1;
- (void)_startWorkoutEventFromRemote:(id)arg1;
- (void)_workoutStateDidChange:(id)arg1;
- (void)_empedSearchStateChanged:(id)arg1;
- (id)initWithFrame:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1 workoutProxy:(id)arg2;
- (void)_stop;
- (void)_cancel;
- (void)setInterface:(int)arg1;
- (int)interface;
- (void)_applicationWillResignActive:(id)arg1;
- (void)setOrientation:(int)arg1;
- (void)resume;
- (void)_start;
- (void)suspend;
- (int)orientation;
- (id)delegate;
- (void)layoutSubviews;
- (void)didMoveToWindow;
- (id)initWithFrame:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (void)_resume;
- (void)_pause;
- (void)dealloc;
- (void)setDelegate:(id)arg1;
- (void)_applicationDidBecomeActiveNotification:(id)arg1;
- (void)_applicationDidEnterBackgroundNotification:(id)arg1;
- (void)_applicationResumed:(id)arg1;
- (void)_applicationWillSuspend:(id)arg1;

@end
