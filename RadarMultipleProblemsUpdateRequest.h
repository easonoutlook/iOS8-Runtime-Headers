/* Generated by RuntimeBrowser.
   Image: /System/Library/PrivateFrameworks/RadarCompose.framework/RadarCompose
 */

@class NSDate, RadarProblemCWE, RadarProblemRelatedProblem, NSOrderedSet, RadarProblemsTargetMilestoneUpdateRequest, RadarProblemComponent, NSString, RadarProblemMilestone, NSNumber;

@interface RadarMultipleProblemsUpdateRequest : NUCModel <NSCoding> {
}

@property(retain) NSOrderedSet * problemIDs;
@property(retain) RadarProblemComponent * component;
@property(retain) NSNumber * originator;
@property(retain) NSNumber * assignee;
@property(retain) NSNumber * dri;
@property(retain) NSNumber * resolvedBy;
@property(retain) NSNumber * epm;
@property(copy) NSString * state;
@property(copy) NSString * substate;
@property(copy) NSString * resolution;
@property(retain) NSNumber * duplicateOfProblemID;
@property(copy) NSString * classification;
@property(copy) NSString * reproducible;
@property(retain) RadarProblemMilestone * milestone;
@property(retain) NSNumber * priority;
@property(retain) NSString * event;
@property(retain) NSNumber * fixOrder;
@property(retain) NSString * diagnosis;
@property(retain) NSString * addKeywordById;
@property(retain) NSString * removeKeywordById;
@property(retain) id addSecurity;
@property(retain) id removeSecurity;
@property(retain) NSNumber * addCC;
@property(retain) NSNumber * removeCC;
@property(retain) RadarProblemsTargetMilestoneUpdateRequest * targetMilestone;
@property(copy) NSString * adcNotes;
@property BOOL isReadByAssignee;
@property BOOL moveStateForward;
@property BOOL moveStateBack;
@property BOOL clearFoundInBuild;
@property BOOL clearMustBeFixedByBuild;
@property BOOL clearFixedInBuild;
@property BOOL clearVerifiedInBuild;
@property BOOL clearMilestone;
@property BOOL clearDRI;
@property BOOL clearResolver;
@property BOOL clearSerialNo;
@property BOOL clearEvent;
@property BOOL clearEPM;
@property BOOL clearSecurityDRI;
@property BOOL clearSecurityVerifier;
@property(retain) RadarProblemRelatedProblem * relatedProblems;
@property(retain) NSDate * dateNeededCurrent;
@property(retain) NSDate * dateNeededOriginal;
@property(retain) NSDate * targetCompletionCurrent;
@property(retain) NSDate * targetCompletionOriginal;
@property(retain) NSDate * targetStartDate;
@property BOOL isApproved;
@property BOOL isUmbrella;
@property BOOL isAutoCalculated;
@property BOOL hasNewAPIImpact;
@property BOOL hasThirdPartyImpact;
@property BOOL hasPatentReviewImpact;
@property BOOL hasNewSPIImpact;
@property BOOL hasImportExportImpact;
@property BOOL hasConfidentialContentImpact;
@property BOOL hasHumanInterfaceImpact;
@property BOOL hasLocalizationImpact;
@property BOOL hasOpenSourceImpact;
@property(retain) NSNumber * effortCurrentTotal;
@property(retain) NSNumber * effortOriginalTotal;
@property(retain) NSNumber * effortPercentComplete;
@property(retain) NSNumber * effortRemaining;
@property(retain) NSNumber * effortExpended;
@property(retain) NSNumber * taskOrder;
@property(copy) NSString * testCase;
@property(copy) NSString * foundInBuild;
@property(copy) NSString * fixedInBuild;
@property(copy) NSString * verifiedInBuild;
@property(copy) NSString * fixedByInBuild;
@property BOOL isVerifiedByTester;
@property BOOL isPrivacyIssue;
@property(retain) RadarProblemCWE * cwe;
@property(copy) NSString * color;
@property(copy) NSString * attackVector;
@property(copy) NSString * authentication;
@property(copy) NSString * assets;
@property(copy) NSString * complexity;
@property(copy) NSString * exploitability;
@property(copy) NSString * impact;
@property(copy) NSString * userBase;
@property(copy) NSString * visibility;
@property(retain) NSNumber * securityDRI;
@property(retain) NSNumber * securityVerifier;
@property(retain) NSNumber * changeFromRecomReleaseVehicleId;
@property(retain) NSNumber * changeToRecomReleaseVehicleId;
@property(copy) NSNumber * affectedProductID;
@property(retain) NSNumber * changeFromPlanReleaseVehicleId;
@property(retain) NSNumber * changeToPlanReleaseVehicleId;
@property(copy) NSString * buildInfo;
@property(copy) NSString * type;
@property(copy) NSString * verifiedByPS;


- (id)dateFormat;
- (id)dictionary;

@end
