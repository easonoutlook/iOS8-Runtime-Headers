/* Generated by RuntimeBrowser.
   Image: /System/Library/PrivateFrameworks/ChatKit.framework/ChatKit
 */

@class UILongPressGestureRecognizer, UITapGestureRecognizer, <CKBalloonViewDelegate>, CKBalloonImageView, UIColor, CKManualUpdater;

@interface CKBalloonView : CKBalloonImageView <UIGestureRecognizerDelegate> {
    BOOL _orientation;
    BOOL _hasTail;
    BOOL _filled;
    BOOL _showingMenu;
    BOOL _canUseOpaqueMask;
    BOOL _hasOverlay;
    BOOL _wantsSkinnyMask;
    <CKBalloonViewDelegate> *_delegate;
    UITapGestureRecognizer *_doubleTapGestureRecognizer;
    UILongPressGestureRecognizer *_longPressGestureRecognizer;
    unsigned int _balloonCorners;
    CKManualUpdater *_displayUpdater;
    CKBalloonImageView *_overlay;
    struct UIEdgeInsets { 
        float top; 
        float left; 
        float bottom; 
        float right; 
    } _textAlignmentInsets;
}

@property <CKBalloonViewDelegate> * delegate;
@property BOOL orientation;
@property BOOL hasTail;
@property(getter=isFilled) BOOL filled;
@property struct UIEdgeInsets { float x1; float x2; float x3; float x4; } textAlignmentInsets;
@property(retain) UITapGestureRecognizer * doubleTapGestureRecognizer;
@property(retain) UILongPressGestureRecognizer * longPressGestureRecognizer;
@property(getter=isShowingMenu) BOOL showingMenu;
@property BOOL canUseOpaqueMask;
@property BOOL hasOverlay;
@property(readonly) UIColor * overlayColor;
@property BOOL wantsSkinnyMask;
@property unsigned int balloonCorners;
@property(retain) CKManualUpdater * displayUpdater;
@property(retain) CKBalloonImageView * overlay;


- (BOOL)isFilled;
- (void)configureForMessagePart:(id)arg1;
- (void)configureForMediaObject:(id)arg1 previewWidth:(float)arg2 orientation:(BOOL)arg3;
- (BOOL)hasOverlay;
- (BOOL)canUseOpaqueMask;
- (id)doubleTapGestureRecognizer;
- (struct UIEdgeInsets { float x1; float x2; float x3; float x4; })textAlignmentInsets;
- (void)export:(id)arg1;
- (void)sendAsTextMessage:(id)arg1;
- (void)setWantsSkinnyMask:(BOOL)arg1;
- (void)willHideMenu:(id)arg1;
- (void)willShowMenu:(id)arg1;
- (void)showMenu;
- (BOOL)isShowingMenu;
- (void)prepareForDisplayIfNeeded;
- (void)_dismissOverlay;
- (void)setHasOverlay:(BOOL)arg1 autoDismiss:(BOOL)arg2;
- (void)setHasOverlay:(BOOL)arg1;
- (void)setShowingMenu:(BOOL)arg1;
- (id)overlayColor;
- (BOOL)wantsSkinnyMask;
- (id)displayUpdater;
- (void)setTextAlignmentInsets:(struct UIEdgeInsets { float x1; float x2; float x3; float x4; })arg1;
- (struct CGSize { float x1; float x2; })sizeThatFits:(struct CGSize { float x1; float x2; })arg1 textAlignmentInsets:(struct UIEdgeInsets { float x1; float x2; float x3; float x4; }*)arg2;
- (void)setNeedsPrepareForDisplay;
- (void)setBalloonCorners:(unsigned int)arg1;
- (void)setFilled:(BOOL)arg1;
- (void)setCanUseOpaqueMask:(BOOL)arg1;
- (void)setHasTail:(BOOL)arg1;
- (void)setDisplayUpdater:(id)arg1;
- (void)prepareForDisplay;
- (void)setDoubleTapGestureRecognizer:(id)arg1;
- (void)tapGestureRecognized:(id)arg1;
- (void)longPressGestureRecognized:(id)arg1;
- (void)doubleTapGestureRecognized:(id)arg1;
- (BOOL)hasTail;
- (unsigned int)balloonCorners;
- (void)more:(id)arg1;
- (void)setOverlay:(id)arg1;
- (id)overlay;
- (void)_performAction:(SEL)arg1 sender:(id)arg2;
- (void)setOrientation:(BOOL)arg1;
- (void)copy:(id)arg1;
- (void)prepareForReuse;
- (BOOL)canBecomeFirstResponder;
- (BOOL)becomeFirstResponder;
- (BOOL)resignFirstResponder;
- (BOOL)orientation;
- (BOOL)canPerformAction:(SEL)arg1 withSender:(id)arg2;
- (id)delegate;
- (struct CGSize { float x1; float x2; })sizeThatFits:(struct CGSize { float x1; float x2; })arg1;
- (void)layoutSubviews;
- (id)initWithFrame:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (void)setLongPressGestureRecognizer:(id)arg1;
- (id)longPressGestureRecognizer;
- (id)description;
- (void)dealloc;
- (void)setDelegate:(id)arg1;

@end
