/* Generated by RuntimeBrowser.
   Image: /System/Library/Frameworks/SceneKit.framework/SceneKit
 */

/* RuntimeBrowser encountered one or more ivar type encodings for a function pointer. 
   The runtime does not encode function signature information.  We use a signature of: 
           "int (*funcName)()",  where funcName might be null. 
 */

@class NSMutableArray, <SCNPhysicsContactDelegate>, SCNScene, SCNPhysicsContact;

@interface SCNPhysicsWorld : NSObject <NSSecureCoding> {
    id _reserved;
    struct btDiscreteDynamicsWorld { int (**x1)(); struct btAlignedObjectArray<btCollisionObject *> { struct btAlignedAllocator<btCollisionObject *, 16> { } x_2_1_1; int x_2_1_2; int x_2_1_3; struct btCollisionObject {} **x_2_1_4; boolx_2_1_5; } x2; struct btDispatcher {} *x3; struct btDispatcherInfo { float x_4_1_1; int x_4_1_2; int x_4_1_3; float x_4_1_4; boolx_4_1_5; struct btIDebugDraw {} *x_4_1_6; boolx_4_1_7; boolx_4_1_8; boolx_4_1_9; float x_4_1_10; boolx_4_1_11; float x_4_1_12; } x4; struct btBroadphaseInterface {} *x5; struct btIDebugDraw {} *x6; boolx7; int (*x8)(); int (*x9)(); void *x10; struct btContactSolverInfo { float x_11_1_1; float x_11_1_2; float x_11_1_3; float x_11_1_4; float x_11_1_5; int x_11_1_6; float x_11_1_7; float x_11_1_8; float x_11_1_9; float x_11_1_10; float x_11_1_11; int x_11_1_12; float x_11_1_13; float x_11_1_14; float x_11_1_15; float x_11_1_16; int x_11_1_17; int x_11_1_18; int x_11_1_19; float x_11_1_20; float x_11_1_21; } x11; float x12; struct btAlignedObjectArray<btTypedConstraint *> { struct btAlignedAllocator<btTypedConstraint *, 16> { } x_13_1_1; int x_13_1_2; int x_13_1_3; struct btTypedConstraint {} **x_13_1_4; boolx_13_1_5; } x13; struct InplaceSolverIslandCallback {} *x14; struct btConstraintSolver {} *x15; struct btSimulationIslandManager {} *x16; struct btAlignedObjectArray<btTypedConstraint *> { struct btAlignedAllocator<btTypedConstraint *, 16> { } x_17_1_1; int x_17_1_2; int x_17_1_3; struct btTypedConstraint {} **x_17_1_4; boolx_17_1_5; } x17; struct btAlignedObjectArray<btRigidBody *> { struct btAlignedAllocator<btRigidBody *, 16> { } x_18_1_1; int x_18_1_2; int x_18_1_3; struct btRigidBody {} **x_18_1_4; boolx_18_1_5; } x18; struct btVector3 { float x_19_1_1[4]; } x19; float x20; boolx21; boolx22; boolx23; boolx24; struct btAlignedObjectArray<btActionInterface *> { struct btAlignedAllocator<btActionInterface *, 16> { } x_25_1_1; int x_25_1_2; int x_25_1_3; struct btActionInterface {} **x_25_1_4; boolx_25_1_5; } x25; int x26; struct btAlignedObjectArray<btPersistentManifold *> { struct btAlignedAllocator<btPersistentManifold *, 16> { } x_27_1_1; int x_27_1_2; int x_27_1_3; struct btPersistentManifold {} **x_27_1_4; boolx_27_1_5; } x27; boolx28; } *_world;
    struct btOverlappingPairCallback { int (**x1)(); } *_ghostPairCallback;
    struct btVehicleRaycaster { int (**x1)(); } *_vehicleRayCaster;
    struct btC3DDebugDraw { int (**x1)(); int x2; void *x3; } *_debugDrawer;
    struct c3dAether { 
        struct vector<c3dPhysicsField *, std::__1::allocator<c3dPhysicsField *> > { 
            struct c3dPhysicsField {} **__begin_; 
            struct c3dPhysicsField {} **__end_; 
            struct __compressed_pair<c3dPhysicsField **, std::__1::allocator<c3dPhysicsField *> > { 
                struct c3dPhysicsField {} **__first_; 
            } __end_cap_; 
        } _fields; 
    } _aether;
    BOOL _hasActiveFields;
    <SCNPhysicsContactDelegate> *_contactDelegate;
    SCNPhysicsContact *_contact;
    SCNScene *_scene;
    struct SCNVector3 { 
        float x; 
        float y; 
        float z; 
    } _gravity;
    float _speed;
    float _scale;
    double _timeStep;
    NSMutableArray *_fields;
    double _elapsedTime;
    NSMutableArray *_behaviors;
}

@property struct SCNVector3 { float x1; float x2; float x3; } gravity;
@property float speed;
@property double timeStep;
@property <SCNPhysicsContactDelegate> * contactDelegate;

+ (BOOL)supportsSecureCoding;
+ (id)SCNJSExportProtocol;

- (struct btDynamicsWorld { int (**x1)(); struct btAlignedObjectArray<btCollisionObject *> { struct btAlignedAllocator<btCollisionObject *, 16> { } x_2_1_1; int x_2_1_2; int x_2_1_3; struct btCollisionObject {} **x_2_1_4; boolx_2_1_5; } x2; struct btDispatcher {} *x3; struct btDispatcherInfo { float x_4_1_1; int x_4_1_2; int x_4_1_3; float x_4_1_4; boolx_4_1_5; struct btIDebugDraw {} *x_4_1_6; boolx_4_1_7; boolx_4_1_8; boolx_4_1_9; float x_4_1_10; boolx_4_1_11; float x_4_1_12; } x4; struct btBroadphaseInterface {} *x5; struct btIDebugDraw {} *x6; boolx7; int (*x8)(); int (*x9)(); void *x10; struct btContactSolverInfo { float x_11_1_1; float x_11_1_2; float x_11_1_3; float x_11_1_4; float x_11_1_5; int x_11_1_6; float x_11_1_7; float x_11_1_8; float x_11_1_9; float x_11_1_10; float x_11_1_11; int x_11_1_12; float x_11_1_13; float x_11_1_14; float x_11_1_15; float x_11_1_16; int x_11_1_17; int x_11_1_18; int x_11_1_19; float x_11_1_20; float x_11_1_21; } x11; float x12; }*)handle;
- (void)setGravity:(struct SCNVector3 { float x1; float x2; float x3; })arg1;
- (struct SCNVector3 { float x1; float x2; float x3; })gravity;
- (void)removeBehavior:(id)arg1;
- (void)setContactDelegate:(id)arg1;
- (id)contactDelegate;
- (void).cxx_destruct;
- (id).cxx_construct;
- (void)addBehavior:(id)arg1;
- (void)removeAllBehaviors;
- (void)setScale:(float)arg1;
- (float)scale;
- (void)_drawDebugInAuthoringEnvironment:(void*)arg1;
- (struct btVehicleRaycaster { int (**x1)(); }*)_defaultVehicleRayCaster;
- (void)_step:(double)arg1;
- (struct c3dAether { struct vector<c3dPhysicsField *, std::__1::allocator<c3dPhysicsField *> > { struct c3dPhysicsField {} **x_1_1_1; struct c3dPhysicsField {} **x_1_1_2; struct __compressed_pair<c3dPhysicsField **, std::__1::allocator<c3dPhysicsField *> > { struct c3dPhysicsField {} **x_3_2_1; } x_1_1_3; } x1; }*)_aetherHandle;
- (BOOL)_needsRedraw;
- (void)sceneWillDie;
- (id)initWithScene:(id)arg1;
- (id)_physicsContact;
- (void)_didDecodeSCNPhysicsWorld:(id)arg1;
- (void)_customDecodingOfSCNPhysicsWorld:(id)arg1;
- (void)_customEncodingOfSCNPhysicsWorld:(id)arg1;
- (void)setTimeStep:(double)arg1;
- (double)timeStep;
- (void)updateCollisionPairs;
- (id)convexSweepTestWithShape:(id)arg1 fromTransform:(struct SCNMatrix4 { float x1; float x2; float x3; float x4; float x5; float x6; float x7; float x8; float x9; float x10; float x11; float x12; float x13; float x14; float x15; float x16; })arg2 toTransform:(struct SCNMatrix4 { float x1; float x2; float x3; float x4; float x5; float x6; float x7; float x8; float x9; float x10; float x11; float x12; float x13; float x14; float x15; float x16; })arg3 options:(id)arg4;
- (id)contactTestWithBody:(id)arg1 options:(id)arg2;
- (id)contactTestBetweenBody:(id)arg1 andBody:(id)arg2 options:(id)arg3;
- (id)rayTestWithSegmentFromPoint:(struct SCNVector3 { float x1; float x2; float x3; })arg1 toPoint:(struct SCNVector3 { float x1; float x2; float x3; })arg2 options:(id)arg3;
- (id)allBehaviors;
- (id)_rayTestWithSegmentFromPoint:(struct btVector3 { float x1[4]; })arg1 toPoint:(struct btVector3 { float x1[4]; })arg2 options:(id)arg3;
- (void)_createDynamicWorld;
- (void)_preTick:(double)arg1;
- (void)setScene:(id)arg1;
- (void)_allowGhostObjects;
- (struct btDynamicsWorld { int (**x1)(); struct btAlignedObjectArray<btCollisionObject *> { struct btAlignedAllocator<btCollisionObject *, 16> { } x_2_1_1; int x_2_1_2; int x_2_1_3; struct btCollisionObject {} **x_2_1_4; boolx_2_1_5; } x2; struct btDispatcher {} *x3; struct btDispatcherInfo { float x_4_1_1; int x_4_1_2; int x_4_1_3; float x_4_1_4; boolx_4_1_5; struct btIDebugDraw {} *x_4_1_6; boolx_4_1_7; boolx_4_1_8; boolx_4_1_9; float x_4_1_10; boolx_4_1_11; float x_4_1_12; } x4; struct btBroadphaseInterface {} *x5; struct btIDebugDraw {} *x6; boolx7; int (*x8)(); int (*x9)(); void *x10; struct btContactSolverInfo { float x_11_1_1; float x_11_1_2; float x_11_1_3; float x_11_1_4; float x_11_1_5; int x_11_1_6; float x_11_1_7; float x_11_1_8; float x_11_1_9; float x_11_1_10; float x_11_1_11; int x_11_1_12; float x_11_1_13; float x_11_1_14; float x_11_1_15; float x_11_1_16; int x_11_1_17; int x_11_1_18; int x_11_1_19; float x_11_1_20; float x_11_1_21; } x11; float x12; }*)_handle;
- (void)_addFieldToWorld:(id)arg1;
- (void)_removeFieldFromWorld:(id)arg1;
- (void)_postCommandWithBlock:(id)arg1;
- (id)scene;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)setSpeed:(float)arg1;
- (float)speed;
- (void)dealloc;

@end
