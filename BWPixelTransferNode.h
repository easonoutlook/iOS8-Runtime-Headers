/* Generated by RuntimeBrowser.
   Image: /System/Library/PrivateFrameworks/Celestial.framework/Celestial
 */

@interface BWPixelTransferNode : BWNode  {
    int _cropMode;
    int _liveCropMode;
    struct CGRect { 
        struct CGPoint { 
            float x; 
            float y; 
        } origin; 
        struct CGSize { 
            float width; 
            float height; 
        } size; 
    } _inputCropRect;
    struct CGRect { 
        struct CGPoint { 
            float x; 
            float y; 
        } origin; 
        struct CGSize { 
            float width; 
            float height; 
        } size; 
    } _liveInputCropRect;
    BOOL _haveLiveInputCropRect;
    int _rotationDegrees;
    int _liveRotationDegrees;
    BOOL _flipHorizontal;
    BOOL _liveFlipHorizontal;
    BOOL _flipVertical;
    BOOL _liveFlipVertical;
    unsigned long _outputWidth;
    unsigned long _outputHeight;
    unsigned long _outputPixelFormat;
    struct OpaqueVTImageRotationSession { } *_rotationSession;
    int _rotationSessionRotationDegrees;
    BOOL _rotationSessionFlipHorizontal;
    BOOL _rotationSessionFlipVertical;
    struct opaqueCMFormatDescription { } *_outputFormatDescription;
    BOOL _makeCurrentConfigurationLiveOnNextRenderCallback;
}

+ (void)initialize;

- (BOOL)flipVertical;
- (BOOL)flipHorizontal;
- (unsigned long)outputPixelFormat;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })inputCropRect;
- (int)cropMode;
- (id)_preferredPixelFormatsWithInputPixelFormatFirst;
- (id)_preferredPixelFormats;
- (void)_ensureRotationSession;
- (BOOL)_emitIfMarkerBuffer:(struct opaqueCMSampleBuffer { }*)arg1;
- (void)_makeCurrentConfigurationLive;
- (void)_updateOutputRequirements;
- (BOOL)hasNonLiveConfigurationChanges;
- (void)makeCurrentConfigurationLive;
- (void)setInputCropRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (void)setFlipVertical:(BOOL)arg1;
- (void)setRotationDegrees:(int)arg1;
- (void)setFlipHorizontal:(BOOL)arg1;
- (void)setOutputPixelFormat:(unsigned long)arg1;
- (void)setCropMode:(int)arg1;
- (void)prepareForCurrentConfigurationToBecomeLive;
- (void)setOutputHeight:(unsigned long)arg1;
- (void)setOutputWidth:(unsigned long)arg1;
- (unsigned long)outputHeight;
- (unsigned long)outputWidth;
- (void)didSelectFormat:(id)arg1 forInput:(id)arg2;
- (void)renderSampleBuffer:(struct opaqueCMSampleBuffer { }*)arg1 forInput:(id)arg2;
- (id)nodeSubType;
- (void)didReachEndOfDataForInput:(id)arg1;
- (void)configurationWithID:(long long)arg1 updatedFormat:(id)arg2 didBecomeLiveForInput:(id)arg3;
- (id)nodeType;
- (int)rotationDegrees;
- (void)dealloc;
- (id)init;

@end
