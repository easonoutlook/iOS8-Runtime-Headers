/* Generated by RuntimeBrowser.
   Image: /System/Library/Frameworks/PhotosUI.framework/PhotosUI
 */

@class UIImage, PLPhotoEditModel, UIButton, PUTiltWheelControl, UIView, PUCropOverlayView, CIImage, NSDictionary, PLPhotoEditRenderer, PUCropAndStraightenView, PUCropToolControllerSpec, NSMutableDictionary, NSTimer;

@interface PUCropToolController : PUPhotoEditToolController <UIGestureRecognizerDelegate, PUCropAndStraightenViewDelegate> {
    BOOL __contentViewsHidden;
    BOOL __wantsPreviewViewHidden;
    BOOL __ignoreTrackingUpdates;
    BOOL __needsImageLoad;
    BOOL __activeTool;
    BOOL __needsModelLoad;
    BOOL __modelChangeLocal;
    BOOL __hasAutoAppliedCropSuggestion;
    BOOL __hasAppliedCropSuggestion;
    BOOL __hasRequestedCropSuggestion;
    PUTiltWheelControl *__tiltControl;
    UIButton *__rotateButton;
    UIButton *__aspectButton;
    UIButton *__cropToggleButton;
    PUCropAndStraightenView *__cropView;
    UIView *__cropCanvasView;
    PUCropOverlayView *__cropOverlayView;
    NSDictionary *__cropHandleViewsByHandle;
    UIView *__rotateSnapshotView;
    NSTimer *__fadeOutTimer;
    NSMutableDictionary *__initialLocationsInHandlesByHandle;
    NSMutableDictionary *__animationsByKeyPath;
    NSMutableDictionary *__animationTargetsByKeyPath;
    float __rotateSnapshotStartAngle;
    unsigned int __rotatingAnimationCount;
    unsigned int __contentViewsHiddenAnimationCount;
    PLPhotoEditModel *__lastKnownEditModel;
    PLPhotoEditRenderer *__renderer;
    UIImage *__image;
    CIImage *__CIImage;
    unsigned int __rotation;
    float __straightenAngle;
    float __aspectRatio;
    float __suggestedStraightenAngle;
    struct CGRect { 
        struct CGPoint { 
            float x; 
            float y; 
        } origin; 
        struct CGSize { 
            float width; 
            float height; 
        } size; 
    } __initialHandlePanCropRect;
    struct CGRect { 
        struct CGPoint { 
            float x; 
            float y; 
        } origin; 
        struct CGSize { 
            float width; 
            float height; 
        } size; 
    } __initialDoubleTapCropRect;
    struct UIEdgeInsets { 
        float top; 
        float left; 
        float bottom; 
        float right; 
    } __previewViewInsets;
    struct CGRect { 
        struct CGPoint { 
            float x; 
            float y; 
        } origin; 
        struct CGSize { 
            float width; 
            float height; 
        } size; 
    } __cropViewFrameForLastModelLoad;
    struct CGRect { 
        struct CGPoint { 
            float x; 
            float y; 
        } origin; 
        struct CGSize { 
            float width; 
            float height; 
        } size; 
    } __viewCropRect;
    struct CGRect { 
        struct CGPoint { 
            float x; 
            float y; 
        } origin; 
        struct CGSize { 
            float width; 
            float height; 
        } size; 
    } __normalizedImageRect;
    struct CGRect { 
        struct CGPoint { 
            float x; 
            float y; 
        } origin; 
        struct CGSize { 
            float width; 
            float height; 
        } size; 
    } __suggestedCrop;
}

@property(readonly) PUCropToolControllerSpec * spec;
@property(setter=_setTiltControl:,retain) PUTiltWheelControl * _tiltControl;
@property(setter=_setRotateButton:,retain) UIButton * _rotateButton;
@property(setter=_setAspectButton:,retain) UIButton * _aspectButton;
@property(setter=_setCropToggleButton:,retain) UIButton * _cropToggleButton;
@property(setter=_setCropView:,retain) PUCropAndStraightenView * _cropView;
@property(setter=_setCropCanvasView:,retain) UIView * _cropCanvasView;
@property(setter=_setCropOverlayView:,retain) PUCropOverlayView * _cropOverlayView;
@property(setter=_setCropHandleViewsByHandle:,retain) NSDictionary * _cropHandleViewsByHandle;
@property(setter=_setRotateSnapshotView:,retain) UIView * _rotateSnapshotView;
@property(setter=_setFadeOutTimer:,retain) NSTimer * _fadeOutTimer;
@property(setter=_setInitialLocationsInHandlesByHandle:,retain) NSMutableDictionary * _initialLocationsInHandlesByHandle;
@property(setter=_setInitialHandlePanCropRect:) struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; } _initialHandlePanCropRect;
@property(setter=_setInitialDoubleTapCropRect:) struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; } _initialDoubleTapCropRect;
@property(setter=_setContentViewsHidden:) BOOL _contentViewsHidden;
@property(setter=_setPreviewViewInsets:) struct UIEdgeInsets { float x1; float x2; float x3; float x4; } _previewViewInsets;
@property(setter=_setWantsPreviewViewHidden:) BOOL _wantsPreviewViewHidden;
@property(setter=_setIgnoreTrackingUpdates:) BOOL _ignoreTrackingUpdates;
@property(setter=_setAnimationsByKeyPath:,retain) NSMutableDictionary * _animationsByKeyPath;
@property(setter=_setAnimationTargetsByKeyPath:,retain) NSMutableDictionary * _animationTargetsByKeyPath;
@property(setter=_setRotateSnapshotStartAngle:) float _rotateSnapshotStartAngle;
@property(setter=_setRotatingAnimationCount:) unsigned int _rotatingAnimationCount;
@property(setter=_setContentViewsHiddenAnimationCount:) unsigned int _contentViewsHiddenAnimationCount;
@property(setter=_setNeedsImageLoad:) BOOL _needsImageLoad;
@property(getter=_isActiveTool,setter=_setActiveTool:) BOOL _activeTool;
@property(setter=_setNeedsModelLoad:) BOOL _needsModelLoad;
@property(setter=_setCropViewFrameForLastModelLoad:) struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; } _cropViewFrameForLastModelLoad;
@property(getter=_isModelChangeLocal,setter=_setModelChangeLocal:) BOOL _modelChangeLocal;
@property(setter=_setLastKnownEditModel:,retain) PLPhotoEditModel * _lastKnownEditModel;
@property(setter=_setRenderer:,retain) PLPhotoEditRenderer * _renderer;
@property(setter=_setImage:,retain) UIImage * _image;
@property(setter=_setCIImage:,retain) CIImage * _CIImage;
@property(setter=_setViewCropRect:) struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; } _viewCropRect;
@property(setter=_setNormalizedImageRect:) struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; } _normalizedImageRect;
@property(setter=_setRotation:) unsigned int _rotation;
@property(setter=_setStraightenAngle:) float _straightenAngle;
@property(setter=_setAspectRatio:) float _aspectRatio;
@property(setter=_setSuggestedCrop:) struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; } _suggestedCrop;
@property(setter=_setSuggestedStraightenAngle:) float _suggestedStraightenAngle;
@property(setter=_setHasAutoAppliedCropSuggestion:) BOOL _hasAutoAppliedCropSuggestion;
@property(setter=_setHasAppliedCropSuggestion:) BOOL _hasAppliedCropSuggestion;
@property(setter=_setHasRequestedCropSuggestion:) BOOL _hasRequestedCropSuggestion;


- (void).cxx_destruct;
- (void)updateViewConstraints;
- (void)viewDidLoad;
- (void)viewWillAppear:(BOOL)arg1;
- (id)localizedName;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (void)viewDidLayoutSubviews;
- (unsigned int)_rotation;
- (BOOL)gestureRecognizer:(id)arg1 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)arg2;
- (id)_image;
- (void)_setAnimationTargetsByKeyPath:(id)arg1;
- (void)_setAnimationsByKeyPath:(id)arg1;
- (BOOL)_contentViewsHidden;
- (void)_setInitialLocationsInHandlesByHandle:(id)arg1;
- (void)_setFadeOutTimer:(id)arg1;
- (id)_fadeOutTimer;
- (void)_setCropHandleViewsByHandle:(id)arg1;
- (void)_setCropOverlayView:(id)arg1;
- (void)_setCropCanvasView:(id)arg1;
- (void)_setCropView:(id)arg1;
- (void)_setCropToggleButton:(id)arg1;
- (void)_setTiltControl:(id)arg1;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })_cropRectForCurrentAspectRatio;
- (struct CGVector { float x1; float x2; })_applyAspectOfCropRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1 toHandleMovement:(struct CGVector { float x1; float x2; })arg2;
- (id)_animationTargetForKeyPath:(id)arg1;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })_viewCropToMatchPreview;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })_rectThatFillsFrame:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1 withImageRegion:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg2;
- (void)_toggleCrop;
- (unsigned int)rotationAfterRotation:(unsigned int)arg1;
- (void)_setLastKnownEditModel:(id)arg1;
- (void)_setActiveTool:(BOOL)arg1;
- (void)_autoApplyCropSuggestionIfNeeded;
- (void)_setWantsPreviewViewHidden:(BOOL)arg1;
- (void)_loadCropSuggestionIfNeeded;
- (id)_lastKnownEditModel;
- (int)_tiltControlOrientationForLayoutOrientation:(int)arg1;
- (void)_invalidateConstraintsForKey:(id)arg1;
- (void)_setContentViewsHiddenAnimationCount:(unsigned int)arg1;
- (void)_setContentViewsHidden:(BOOL)arg1 animated:(BOOL)arg2;
- (BOOL)_wantsPreviewViewHidden;
- (struct UIEdgeInsets { float x1; float x2; float x3; float x4; })_previewViewInsets;
- (BOOL)_isResettingValues;
- (BOOL)_isActiveTool;
- (BOOL)_ignoreTrackingUpdates;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })_addWidth:(float)arg1 toRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg2 anchorLeft:(BOOL)arg3;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })_addHeight:(float)arg1 toRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg2 anchorTop:(BOOL)arg3;
- (struct CGVector { float x1; float x2; })_correctInputVector:(struct CGVector { float x1; float x2; })arg1 forHandle:(unsigned int)arg2 onCropRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg3 lockDirection:(BOOL)arg4;
- (struct CGVector { float x1; float x2; })_deltaMaskForHandle:(unsigned int)arg1;
- (float)_aspectRatio;
- (struct CGPoint { float x1; float x2; })_pointForHandle:(unsigned int)arg1 onCropRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg2;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })_initialHandlePanCropRect;
- (void)_setInitialDoubleTapCropRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })_initialDoubleTapCropRect;
- (void)_setViewCropRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })_cropRectFromPanningHandle:(unsigned int)arg1 byAmount:(struct CGVector { float x1; float x2; })arg2;
- (void)_setInitialHandlePanCropRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (struct CGPoint { float x1; float x2; })_pointForHandle:(unsigned int)arg1;
- (id)_initialLocationsInHandlesByHandle;
- (void)_showMaskedContentAndCancelDelayedHide;
- (void)_showGridAndCancelDelayedHide;
- (void)_hideMaskedContent;
- (void)_hideGrid;
- (void)_cropToggleTapped:(id)arg1;
- (void)_handleCropHandlePan:(id)arg1;
- (void)_setAspectButton:(id)arg1;
- (void)_aspectButtonTapped:(id)arg1;
- (void)_setRotateButton:(id)arg1;
- (void)_rotateButtonTapped:(id)arg1;
- (void)_handleTouchingGesture:(id)arg1;
- (void)_tiltControlChanged:(id)arg1;
- (void)_handleCropViewDoubleTap:(id)arg1;
- (void)_updateTiltControl;
- (void)_updateCropToggleTitle;
- (void)_setAspectRatio:(float)arg1;
- (void)_resetAllValuesAnimated:(BOOL)arg1;
- (BOOL)_hasAppliedCropSuggestion;
- (float)_suggestedStraightenAngle;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })_suggestedCrop;
- (void)_setHasAutoAppliedCropSuggestion:(BOOL)arg1;
- (void)_applyCropSuggestion;
- (BOOL)_hasAllIdentityValues;
- (BOOL)_hasCropSuggestion;
- (void)_setSuggestedStraightenAngle:(float)arg1;
- (void)_setSuggestedCrop:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (void)_setHasRequestedCropSuggestion:(BOOL)arg1;
- (BOOL)_hasRequestedCropSuggestion;
- (BOOL)_hasAutoAppliedCropSuggestion;
- (void)_setHasAppliedCropSuggestion:(BOOL)arg1;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })_defaultCropRect;
- (float)_defaultRotation;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })_defaultNormalizedCropRect;
- (float)_defaultStraightenAngle;
- (void)_setCropViewFrameForLastModelLoad:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (void)_setRotation:(unsigned int)arg1;
- (void)_setStraightenAngle:(float)arg1;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })_suggestedCropRectForImageRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (BOOL)_isModelChangeLocal;
- (void)_setPreviewViewInsets:(struct UIEdgeInsets { float x1; float x2; float x3; float x4; })arg1;
- (id)_animationTargetsByKeyPath;
- (id)_animationsByKeyPath;
- (id)_animationForKeyPath:(id)arg1;
- (void)_setNormalizedImageRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (void)_updatePreviewViewInsets;
- (id)_animateValueFromValue:(float)arg1 toValue:(float)arg2 interpolation:(id)arg3 completion:(id)arg4;
- (void)_hideMaskedContentDelayed;
- (void)_hideGridDelayed;
- (void)_setAnimation:(id)arg1 forKeyPath:(id)arg2;
- (void)_setIgnoreTrackingUpdates:(BOOL)arg1;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })_denormalizeImageRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (void)_setAnimationTarget:(id)arg1 forKeyPath:(id)arg2;
- (void)_cancelAnimationForKeyPath:(id)arg1;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })_correctRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1 withAspect:(float)arg2;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })_normalizedImageRect;
- (void)_setContentViewsHidden:(BOOL)arg1 animated:(BOOL)arg2 completion:(id)arg3;
- (unsigned int)_contentViewsHiddenAnimationCount;
- (float)_rotateSnapshotStartAngle;
- (void)_setContentViewsHidden:(BOOL)arg1;
- (void)_setRotatingAnimationCount:(unsigned int)arg1;
- (unsigned int)_rotatingAnimationCount;
- (void)_setRotateSnapshotStartAngle:(float)arg1;
- (void)_setRotateSnapshotView:(id)arg1;
- (id)_rotateSnapshotView;
- (void)_setModelChangeLocal:(BOOL)arg1;
- (void)_setRotation:(unsigned int)arg1 animated:(BOOL)arg2;
- (void)_setAspectRatio:(float)arg1 animated:(BOOL)arg2;
- (void)_setStraightenAngle:(float)arg1 animated:(BOOL)arg2;
- (void)_setViewCropRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1 normalizedImageRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg2 animated:(BOOL)arg3;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })_viewCropRect;
- (void)_setViewCropRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1 normalizedImageRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg2;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })_normalizeImageRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (id)_CIImage;
- (void)_loadImageIfNeeded;
- (void)_installRenderedImageAndDisplayIfNeeded;
- (void)_setImage:(id)arg1;
- (void)_setRenderer:(id)arg1;
- (id)_renderer;
- (void)_setCIImage:(id)arg1;
- (BOOL)_needsImageLoad;
- (BOOL)_hasConstraintsForKey:(id)arg1;
- (id)_aspectButton;
- (id)_rotateButton;
- (void)_updateCropToggleConstraintsIfNeeded;
- (void)_updateCropCanvasConstraintsIfNeeded;
- (void)_updateCropActionButtonConstraintsIfNeeded;
- (void)_loadStateFromModel;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })_cropViewFrameForLastModelLoad;
- (BOOL)_needsModelLoad;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })_cropCanvasFrame;
- (void)_updateCropActionButtons;
- (id)_cropCanvasView;
- (id)_cropToggleButton;
- (id)_cropHandleViewsByHandle;
- (id)_tiltControl;
- (id)_cropOverlayView;
- (id)_cropView;
- (void)_setNeedsModelLoad:(BOOL)arg1;
- (void)_setNeedsImageLoad:(BOOL)arg1;
- (void)photoEditModelDidChange;
- (void)_updateTiltWheelConstraintsIfNeeded;
- (float)_straightenAngle;
- (void)cropAndStraightenViewDidTrack:(id)arg1;
- (void)cropAndStraightenViewDidEndTracking:(id)arg1;
- (void)cropAndStraightenViewWillBeginTracking:(id)arg1;
- (void)didBecomeActiveTool;
- (void)didResignActiveTool;
- (void)animateBecomingActiveTool;
- (void)animateResigningActiveTool;
- (void)willBecomeActiveTool;
- (void)willResignActiveTool;
- (void)resetToDefaultValueAnimated:(BOOL)arg1;
- (id)localizedResetToolActionTitle;
- (BOOL)canResetToDefaultValue;
- (struct UIEdgeInsets { float x1; float x2; float x3; float x4; })preferredPreviewViewInsets;
- (id)selectedToolbarIcon;
- (id)toolbarIcon;
- (BOOL)wantsDefaultPreviewView;
- (void)setLayoutOrientation:(int)arg1 withTransitionCoordinator:(id)arg2;

@end
