/* Generated by RuntimeBrowser.
   Image: /System/Library/Frameworks/NetworkExtension.framework/NetworkExtension
 */

@class NEKeychainItem, NEProxySettings, NSString, NSUUID, NSData, NEIdentityKeychainItem;

@interface NEVPNProtocol : NSObject <NEConfigurationValidating, NEPrettyDescription, NEConfigurationLegacySupport, NSCopying, NSSecureCoding> {
    BOOL _disconnectOnSleep;
    BOOL _disconnectOnUserSwitch;
    BOOL _disconnectOnLogout;
    BOOL _disconnectOnWake;
    BOOL _identityDataImported;
    NSString *_serverAddress;
    NSString *_username;
    int _disconnectOnIdleTimeout;
    NSUUID *_identifier;
    int _type;
    int _disconnectOnWakeTimeout;
    NEKeychainItem *_passwordKeychainItem;
    NSString *_passwordEncryption;
    NEProxySettings *_proxySettings;
    NSData *_identityDataInternal;
    NSData *_identityDataHash;
    int _keychainDomain;
    NEIdentityKeychainItem *_identity;
}

@property(copy) NSString * serverAddress;
@property(copy) NSString * username;
@property(copy) NSData * passwordReference;
@property(copy) NSData * identityReference;
@property(copy) NSData * identityData;
@property int disconnectOnIdleTimeout;
@property BOOL disconnectOnSleep;
@property BOOL disconnectOnUserSwitch;
@property BOOL disconnectOnLogout;
@property(readonly) NSUUID * identifier;
@property(readonly) int type;
@property BOOL disconnectOnWake;
@property int disconnectOnWakeTimeout;
@property(copy) NEKeychainItem * passwordKeychainItem;
@property(copy) NSString * passwordEncryption;
@property(copy) NEProxySettings * proxySettings;
@property(copy) NSData * identityReferenceInternal;
@property(copy) NSData * identityDataInternal;
@property BOOL identityDataImported;
@property(copy) NSData * identityDataHash;
@property int keychainDomain;
@property(retain) NEIdentityKeychainItem * identity;

+ (BOOL)supportsSecureCoding;

- (id)username;
- (id)identity;
- (void)setIdentity:(id)arg1;
- (void)setUsername:(id)arg1;
- (id)serverAddress;
- (void).cxx_destruct;
- (id)initWithType:(int)arg1;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (int)type;
- (id)identifier;
- (void)setKeychainDomain:(int)arg1;
- (void)setDisconnectOnLogout:(BOOL)arg1;
- (BOOL)disconnectOnLogout;
- (void)setDisconnectOnUserSwitch:(BOOL)arg1;
- (BOOL)disconnectOnUserSwitch;
- (void)copyPasswordsFromKeychainInDomain:(int)arg1;
- (id)identityData;
- (void)setIdentityData:(id)arg1;
- (id)identityReference;
- (void)setIdentityReference:(id)arg1;
- (id)passwordReference;
- (void)setPasswordReference:(id)arg1;
- (void)initDisconnectOptions:(id)arg1;
- (id)identityReferenceInternal;
- (void)setIdentityReferenceInternal:(id)arg1;
- (int)keychainDomain;
- (id)initFromLegacyDictionary:(id)arg1;
- (void)addDisconnectOptions:(id)arg1;
- (id)type2str;
- (void)setPasswordEncryption:(id)arg1;
- (void)setPasswordKeychainItem:(id)arg1;
- (void)setDisconnectOnWakeTimeout:(int)arg1;
- (void)setDisconnectOnWake:(BOOL)arg1;
- (void)setDisconnectOnSleep:(BOOL)arg1;
- (void)setDisconnectOnIdleTimeout:(int)arg1;
- (void)setProxySettings:(id)arg1;
- (void)setIdentityDataHash:(id)arg1;
- (void)setIdentityDataImported:(BOOL)arg1;
- (void)setIdentityDataInternal:(id)arg1;
- (void)setServerAddress:(id)arg1;
- (id)initWithProtocolIdentifier:(id)arg1;
- (int)disconnectOnWakeTimeout;
- (BOOL)disconnectOnWake;
- (BOOL)disconnectOnSleep;
- (int)disconnectOnIdleTimeout;
- (id)proxySettings;
- (id)identityDataHash;
- (BOOL)identityDataImported;
- (id)identityDataInternal;
- (id)passwordEncryption;
- (id)passwordKeychainItem;
- (struct __SCNetworkInterface { }*)createInterface;
- (BOOL)updateWithServiceProtocolsFromService:(struct __SCNetworkService { }*)arg1;
- (BOOL)setServiceProtocolsInService:(struct __SCNetworkService { }*)arg1;
- (void)migratePasswordsFromPreferences:(struct __SCPreferences { }*)arg1;
- (void)removeKeychainItemsInDomain:(int)arg1;
- (void)syncWithKeychainInDomain:(int)arg1 configuration:(id)arg2 suffix:(id)arg3;
- (id)copyLegacyDictionary;
- (id)descriptionWithIndent:(int)arg1;
- (BOOL)checkValidityAndCollectErrors:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)description;

@end
