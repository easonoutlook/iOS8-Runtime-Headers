/* Generated by RuntimeBrowser.
   Image: /System/Library/PrivateFrameworks/CorePDF.framework/CorePDF
 */

@class CPPage, NSMutableArray;

@interface CPZoneBorder : NSObject <NSCopying, CPCopying> {
    struct CGRect { 
        struct CGPoint { 
            float x; 
            float y; 
        } origin; 
        struct CGSize { 
            float width; 
            float height; 
        } size; 
    } bounds;
    CPPage *page;
    NSMutableArray *ownerArray;
    NSMutableArray *graphicObjects;
    NSMutableArray *neighbors;
    NSMutableArray *intersections;
    BOOL isHorizontal;
    BOOL hasForwardVector;
    BOOL hasBackwardVector;
    float overhangMin;
    float overhangMax;
}

+ (void)removeIntersectionBetweenBorder:(id)arg1 andBorder:(id)arg2;
+ (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })extendRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
+ (void)addIntersectionBetweenBorder:(id)arg1 andBorder:(id)arg2 atRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg3;
+ (int)clockwiseWindingNumberOfShapeWithBorders:(id)arg1;
+ (void)outerVertices:(struct CGPoint { float x1; float x2; }*)arg1 fromBorders:(id)arg2 swollenBy:(float)arg3;

- (void)combine:(id)arg1;
- (BOOL)crosses:(id)arg1;
- (BOOL)extractCycleTo:(id)arg1 goingForward:(BOOL)arg2 startingAtIndex:(unsigned int)arg3;
- (BOOL)hasVectorGoingForward:(BOOL)arg1 startingAtIndex:(unsigned int*)arg2;
- (void)instantiateVectors;
- (BOOL)intersectsWith:(id)arg1 atRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; }*)arg2;
- (void)setSide:(int)arg1 ofPage:(id)arg2;
- (BOOL)hasBackwardVector;
- (void)setHasBackwardVector:(BOOL)arg1;
- (BOOL)hasForwardVector;
- (void)setHasForwardVector:(BOOL)arg1;
- (void)removeNeighborAtIndex:(unsigned int)arg1;
- (void)removeGraphicObjectAtIndex:(unsigned int)arg1;
- (id)ownerArray;
- (void)removeFromArrayAtIndex:(unsigned int)arg1;
- (void)addToArray:(id)arg1 atIndex:(unsigned int)arg2;
- (id)initWithGraphicObject:(id)arg1;
- (void)removeLooseThreadsStartingFrom:(id)arg1;
- (void)removeFromArray;
- (void)addNeighbor:(id)arg1;
- (void)trimToLastIntersections;
- (void)addToArray:(id)arg1;
- (BOOL)hasCounterclockwiseVectorAtIndex:(unsigned int)arg1 startingForward:(BOOL)arg2;
- (BOOL)hasClockwiseVectorAtIndex:(unsigned int)arg1 startingForward:(BOOL)arg2;
- (id)copyWithoutIntersections;
- (BOOL)extractCycleTo:(id)arg1 goingForward:(BOOL)arg2 throughIntersectionIndex:(unsigned int)arg3 returningTo:(id)arg4 atRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; }*)arg5;
- (BOOL)continues:(id)arg1;
- (BOOL)windsClockwiseOnto:(id)arg1;
- (unsigned int)intersectionCount;
- (void)addGraphicObject:(id)arg1;
- (id)graphicObjects;
- (BOOL)hasNeighborShape:(id)arg1 atSide:(int)arg2;
- (id)neighborAtIndex:(unsigned int)arg1;
- (unsigned int)neighborCount;
- (unsigned int)indexOfIntersectionWith:(id)arg1;
- (BOOL)hasNeighborShape:(id)arg1;
- (id)graphicObjectAtIndex:(unsigned int)arg1;
- (unsigned int)graphicObjectCount;
- (id)initSuper;
- (int)compareYBounds:(id)arg1;
- (int)compareXBounds:(id)arg1;
- (long)zOrder;
- (BOOL)isHorizontal;
- (id)page;
- (BOOL)isVertical;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (void)setBounds:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })bounds;
- (void)dealloc;
- (id)init;

@end
