/* Generated by RuntimeBrowser.
   Image: /System/Library/PrivateFrameworks/GameCenterUI.framework/GameCenterUI
 */

@class <GKMatchmakerViewControllerDelegate>, GKMatchRequest, NSMutableArray, GKHostedMatchmakerViewController, GKMatch, NSString, GKInvite, GKRemoteMatchmakerViewController;

@interface GKMatchmakerViewController : UINavigationController <GKMatchDelegate> {
    BOOL _hosted;
    <GKMatchmakerViewControllerDelegate> *_matchmakerDelegateWeak;
    GKMatchRequest *_matchRequest;
    GKHostedMatchmakerViewController *_hostedViewController;
    GKRemoteMatchmakerViewController *_remoteViewController;
    GKInvite *_acceptedInvite;
    GKMatch *_match;
    NSMutableArray *_hostedPlayers;
}

@property <GKMatchmakerViewControllerDelegate> * matchmakerDelegate;
@property(retain,readonly) GKMatchRequest * matchRequest;
@property(getter=isHosted) BOOL hosted;
@property(copy) NSString * defaultInvitationMessage;
@property(retain) GKHostedMatchmakerViewController * hostedViewController;
@property(retain) GKRemoteMatchmakerViewController * remoteViewController;
@property(retain) GKInvite * acceptedInvite;
@property(retain) GKMatch * match;
@property(retain) NSMutableArray * hostedPlayers;

+ (BOOL)_preventsAppearanceProxyCustomization;

- (void)sendData:(id)arg1;
- (void)setHostedPlayers:(id)arg1;
- (id)hostedPlayers;
- (void)startMatchingWithRequest:(id)arg1;
- (void)setHostedPlayerReady:(id)arg1;
- (id)defaultInvitationMessage;
- (void)addPlayersToMatch:(id)arg1;
- (void)setHostedPlayer:(id)arg1 didConnect:(BOOL)arg2;
- (id)initWithInvite:(id)arg1;
- (void)setMatchmakerDelegate:(id)arg1;
- (void)invitedPlayer:(id)arg1 responded:(int)arg2;
- (void)finishWithPlayers;
- (void)finishWithMatch;
- (id)matchmakerDelegate;
- (void)setHostedPlayer:(id)arg1 connected:(BOOL)arg2;
- (void)setDefaultInvitationMessage:(id)arg1;
- (void)createMatchForAcceptedInvite;
- (void)inviterCancelledNotification:(id)arg1;
- (void)playersToInvite:(id)arg1;
- (void)setupNotifications;
- (void)setHostedViewController:(id)arg1;
- (id)hostedViewController;
- (id)initWithMatchRequest:(id)arg1;
- (void)authenticationChanged:(id)arg1;
- (void)_setupChildViewController;
- (id)match;
- (void)setMatch:(id)arg1;
- (void)setBrowsingForNearbyPlayers:(BOOL)arg1;
- (id)matchRequest;
- (void)cancelInviteToPlayer:(id)arg1;
- (void)localPlayerAcceptedGameInvite:(id)arg1;
- (void)match:(id)arg1 didFailWithError:(id)arg2;
- (void)match:(id)arg1 player:(id)arg2 didChangeConnectionState:(int)arg3;
- (void)match:(id)arg1 didReceiveData:(id)arg2 fromRemotePlayer:(id)arg3;
- (id)acceptedInvite;
- (void)setAcceptedInvite:(id)arg1;
- (BOOL)isHosted;
- (id)remoteViewController;
- (void)setRemoteViewController:(id)arg1;
- (void)viewDidLoad;
- (void)viewWillAppear:(BOOL)arg1;
- (BOOL)shouldAutorotateToInterfaceOrientation:(int)arg1;
- (unsigned int)supportedInterfaceOrientations;
- (void)applicationWillEnterForeground:(id)arg1;
- (void)cancel;
- (void)setHosted:(BOOL)arg1;
- (void)dealloc;
- (id)init;
- (void)finishWithError:(id)arg1;

@end
