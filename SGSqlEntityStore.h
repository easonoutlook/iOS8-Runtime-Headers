/* Generated by RuntimeBrowser.
   Image: /System/Library/PrivateFrameworks/CoreSuggestionsInternals.framework/CoreSuggestionsInternals
 */

@class SGSuggestHistory, NSString, SGSqliteDatabase;

@interface SGSqlEntityStore : NSObject  {
    SGSqliteDatabase *_db;
    NSString *_path;
    SGSuggestHistory *_history;
    BOOL _identityStoreDirty;
}

+ (id)defaultPath;
+ (id)sqlStoreInMemory;
+ (id)sqlStoreWithFilename:(id)arg1;
+ (id)defaultStore;

- (id)initWithFilename:(id)arg1;
- (unsigned int)entityCount;
- (id)allPseudoContacts;
- (id)allCuratedContacts;
- (id)allContactsWithEntityType:(unsigned int)arg1;
- (id)duplicateKeysMatchingEmailAddressPrefix:(id)arg1;
- (void)unpinByRecordId:(id)arg1;
- (void)pinByRecordId:(id)arg1;
- (void)updateMessages:(id)arg1 state:(unsigned int)arg2;
- (id)loadMessagesToRefresh;
- (id)confirmedFieldValuesForEntity:(id)arg1;
- (id)recordIdForKey:(id)arg1;
- (id)suggestEventsStartingAt:(double)arg1 endingAt:(double)arg2 prefix:(id)arg3 limitTo:(unsigned int)arg4;
- (id)suggestEventsStartingAt:(double)arg1 endingAt:(double)arg2 limitTo:(unsigned int)arg3;
- (id)loadCuratedEventsStartingAt:(double)arg1;
- (id)_filterOutNotActedOnEvents:(id)arg1;
- (id)suggestContactsByTag:(id)arg1;
- (id)suggestContactMatchesByContactDetailTag:(id)arg1;
- (id)_sanitizeWildcard:(id)arg1;
- (void)pruneEventsOlderThan:(double)arg1;
- (BOOL)removeCuratedContacts;
- (BOOL)removeEntitiesWithEntityTypeId:(long long)arg1;
- (void)_deleteTimeRangesByEntityId:(long long)arg1;
- (void)writeEntity:(id)arg1;
- (long long)latestSchemaVersion;
- (double)lastSeenTimestampForKey:(id)arg1;
- (id)historyForTesting;
- (id)dbHandleForTesting;
- (void)deleteMessagesByDuplicateKey:(id)arg1;
- (void)pruneLostMessagesWithSource:(id)arg1 count:(unsigned long long)arg2;
- (void)deleteMessages:(id)arg1;
- (void)markMessagesFound:(id)arg1;
- (void)markMessagesLost:(id)arg1;
- (id)_filterOutActedOnEvents:(id)arg1;
- (id)_filterOutAllButAcceptedWithUpdatedFields:(id)arg1;
- (id)_filterOutCancelledEvents:(id)arg1;
- (id)_filterOutCuratedEventClashes:(id)arg1;
- (id)_filterOutOlderVersionsOfPseudoEvents:(id)arg1;
- (id)suggestEventsStartingAt:(double)arg1 endingAt:(double)arg2 prefix:(id)arg3 limitTo:(unsigned int)arg4 options:(unsigned int)arg5;
- (id)suggestEventsStartingAt:(double)arg1 endingAt:(double)arg2 limitTo:(unsigned int)arg3 options:(unsigned int)arg4;
- (id)_sanitizePrefix:(id)arg1;
- (id)suggestEventsStartingAt:(double)arg1 endingAt:(double)arg2 limitTo:(unsigned int)arg3 additionalWhereClause:(id)arg4 options:(unsigned int)arg5 onPrep:(id)arg6;
- (id)_eventFromSqlResult:(struct sqlite3_stmt { }*)arg1;
- (void)confirmFieldValues:(id)arg1 forEntity:(id)arg2;
- (id)rejectFieldValuesForRecordId:(id)arg1;
- (id)loadEntitiesByEntityKey:(id)arg1 entityType:(long long)arg2 resolveDuplicates:(id)arg3;
- (id)displayableEntities:(id)arg1;
- (id)loadContactDetailsWithWhereClause:(id)arg1 onPrep:(id)arg2 type:(unsigned int)arg3 dedupeAgainst:(id)arg4;
- (id)_filterOutUndisplayableEntities:(id)arg1;
- (id)suggestContactByRecordId:(id)arg1;
- (id)duplicateKeysMatchingAnyTag:(id)arg1;
- (id)loadEntityByRecordId:(id)arg1;
- (id)suggestContactByKey:(id)arg1;
- (id)suggestContactsByMasterEntityQuery:(id)arg1 bindings:(id)arg2;
- (id)suggestContactByMasterEntityId:(long long)arg1;
- (BOOL)entityIsDisplayable:(id)arg1;
- (id)pinnedEntities:(id)arg1;
- (id)loadContactByRecordId:(id)arg1;
- (BOOL)contactEntityIsActedOn:(id)arg1;
- (BOOL)_removeEntitiesWhere:(id)arg1 onPrep:(id)arg2;
- (id)loadEventByRecordId:(id)arg1;
- (id)loadEventByKey:(id)arg1;
- (void)_addIndexingTagsTo:(id)arg1;
- (void)_writeParticipantMappingToDb:(id)arg1 entityId:(long long)arg2 parentKey:(id)arg3;
- (long long)_writeEntityToDb:(id)arg1;
- (long long)writeEntityFields:(id)arg1;
- (void)deleteEntitiesByDuplicateKey:(id)arg1;
- (id)loadParticipantsForEntityId:(long long)arg1;
- (void)loadEntityParticipants:(id)arg1;
- (id)entityFromSqlResult:(struct sqlite3_stmt { }*)arg1;
- (id)selectEntityQuery:(id)arg1;
- (BOOL)clearDatabase;
- (id)suggestContactByIdentityKey:(id)arg1 parentKey:(id)arg2;
- (id)loadEntityWithParticipantsByKey:(id)arg1;
- (id)loadEntityByKey:(id)arg1;
- (id)loadContactDetailsForRecordId:(id)arg1 type:(unsigned int)arg2;
- (void)createTables;
- (void).cxx_destruct;
- (BOOL)isLocked;
- (void)unlock;
- (void)lock;
- (long long)schemaVersion;

@end
