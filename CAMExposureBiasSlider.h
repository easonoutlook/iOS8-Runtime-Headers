/* Generated by RuntimeBrowser.
   Image: /System/Library/PrivateFrameworks/CameraKit.framework/CameraKit
 */

@class CAMExposureBiasSliderThumb, UIView;

@interface CAMExposureBiasSlider : UIView  {
    BOOL _suspendTrackFadeOut;
    float _exposureBiasMin;
    float _exposureBiasMax;
    float _exposureBiasValue;
    CAMExposureBiasSliderThumb *__thumbView;
    UIView *__minTrackView;
    UIView *__maxTrackView;
    UIView *__minTrackMaskView;
    UIView *__maxTrackMaskView;
    double __lastInteractionTime;
}

@property float exposureBiasMin;
@property float exposureBiasMax;
@property float exposureBiasValue;
@property BOOL suspendTrackFadeOut;
@property(readonly) float thumbMaxExtension;
@property(retain,readonly) CAMExposureBiasSliderThumb * _thumbView;
@property(retain,readonly) UIView * _minTrackView;
@property(retain,readonly) UIView * _maxTrackView;
@property(retain,readonly) UIView * _minTrackMaskView;
@property(retain,readonly) UIView * _maxTrackMaskView;
@property(readonly) double _lastInteractionTime;


- (id)_maxTrackMaskView;
- (id)_minTrackMaskView;
- (id)_thumbView;
- (void)forceTrackDimmed;
- (void)setSuspendTrackFadeOut:(BOOL)arg1;
- (float)thumbMaxExtension;
- (void)_dimTrackForInactivity;
- (BOOL)suspendTrackFadeOut;
- (float)_trackAlpha;
- (void)_animateTrackAlpha:(float)arg1 withDuration:(double)arg2;
- (float)exposureBiasValue;
- (float)exposureBiasMax;
- (float)exposureBiasMin;
- (struct CGPoint { float x1; float x2; })_sunCenterForNormalizedValue:(float)arg1;
- (void)_updateForChangedNormalizedExposureValue;
- (void)setExposureBiasValue:(float)arg1;
- (void)setExposureBiasMax:(float)arg1;
- (void)setExposureBiasMin:(float)arg1;
- (double)_lastInteractionTime;
- (void)_scheduleDelayedDim;
- (void)_cancelDelayedDim;
- (void)updateLastInteractionTime;
- (float)_normalizedExposureValue;
- (void).cxx_destruct;
- (id)_maxTrackView;
- (id)_minTrackView;
- (struct CGSize { float x1; float x2; })sizeThatFits:(struct CGSize { float x1; float x2; })arg1;
- (void)layoutSubviews;
- (id)initWithFrame:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;

@end
