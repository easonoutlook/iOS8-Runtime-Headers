/* Generated by RuntimeBrowser.
   Image: /System/Library/PrivateFrameworks/PhotoEditSupport.framework/PhotoEditSupport
 */

@class BLPixelImageBuffer, BLPhotoEffectsModel, BLCropModel, NSLock, BLAdjustmentModel, NSDictionary, BLRepairModel, BLImagePatchList, BLRetouchModel;

@interface BLPromiseImage : BLImage  {
    struct CGImage { } *_sourceCGImage;
    BLImagePatchList *_imagePatchList;
    BLImagePatchList *_repairImagePatchList;
    BLPixelImageBuffer *_flattenedImageBuffer;
    int _backOrientation;
    int _initialOrientation;
    int _actualOrientation;
    struct CGSize { 
        float width; 
        float height; 
    } _sourceSize;
    BLCropModel *_userCropModel;
    BLCropModel *_cropModel;
    BLAdjustmentModel *_adjustmentModel;
    BLPhotoEffectsModel *_photoEffectsModel;
    BLRetouchModel *_retouchModel;
    BLRepairModel *_repairModel;
    NSLock *_drawLock;
    NSDictionary *_adjustments;
    NSDictionary *_analysis;
}

@property(readonly) struct CGSize { float x1; float x2; } sourceSize;

+ (id)imageWithImage:(id)arg1;
+ (struct CGSize { float x1; float x2; })maximumSizeForFlattening;
+ (void)convertXMP:(id)arg1 toAdjustments:(id)arg2 andAnalysis:(id)arg3 size:(struct CGSize { float x1; float x2; })arg4 image:(id)arg5 needsHistogram:(BOOL*)arg6;

- (struct CGSize { float x1; float x2; })sourceSize;
- (id)flattenedPixelImageBufferInBoundingSize:(struct CGSize { float x1; float x2; })arg1 shouldScaleForScreen:(BOOL)arg2;
- (id)flattenedImageFromRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1 forSize:(struct CGSize { float x1; float x2; })arg2;
- (id)repairLayerStack;
- (void)setRepairLayerStack:(id)arg1;
- (id)retouchLayerStack;
- (void)setRetouchLayerStack:(id)arg1;
- (id)initWithCGImage:(struct CGImage { }*)arg1 flattenedImageBuffer:(id)arg2 orientation:(int)arg3 adjustmentData:(id)arg4 andAnalysisData:(id)arg5 andOptionFlags:(int)arg6;
- (id)initWithImagePatchList:(id)arg1 backOrientation:(int)arg2 orientation:(int)arg3 adjustmentData:(id)arg4 andAnalysisData:(id)arg5 andOptionFlags:(int)arg6;
- (id)initWithPromiseImage:(id)arg1 userCrop:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg2 andOptionFlags:(int)arg3;
- (id)initWithPromiseImage:(id)arg1 andOptionFlags:(int)arg2;
- (id)initWithCGImage:(struct CGImage { }*)arg1 backOrientation:(int)arg2 orientation:(int)arg3 adjustmentData:(id)arg4 andAnalysisData:(id)arg5 andOptionFlags:(int)arg6;
- (id)initWithCGImage:(struct CGImage { }*)arg1 orientation:(int)arg2 adjustmentData:(id)arg3 andAnalysisData:(id)arg4;
- (id)flattenedImageInBoundingSize:(struct CGSize { float x1; float x2; })arg1 shouldScaleForScreen:(BOOL)arg2;
- (id)flattenedImageInBoundingSize:(struct CGSize { float x1; float x2; })arg1 shouldScaleForScreen:(BOOL)arg2 progressBlock:(id)arg3;
- (BOOL)_flattenInContext:(struct CGContext { }*)arg1 targetSize:(struct CGSize { float x1; float x2; })arg2 progressBlock:(id)arg3;
- (void)prepareForDrawing;
- (struct CGSize { float x1; float x2; })_targetSizeForBoundingSize:(struct CGSize { float x1; float x2; })arg1 shouldScaleForScreen:(BOOL)arg2;
- (BOOL)hasEdits;
- (void)_drawImagePatchListInContext:(struct CGContext { }*)arg1 imagePatchList:(id)arg2 size:(struct CGSize { float x1; float x2; })arg3 drawScaleX:(float)arg4 drawScaleY:(float)arg5 totalPadding:(float)arg6;
- (void)drawInContext:(struct CGContext { }*)arg1 forRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg2 andSize:(struct CGSize { float x1; float x2; })arg3;
- (BOOL)hasRepair;
- (BOOL)hasFastDownstreamEffects;
- (BOOL)hasEdgeEffects;
- (BOOL)hasInkEffects;
- (BOOL)hasRepairOrRedeye;
- (BOOL)hasRetouch;
- (BOOL)hasPhotoEffects;
- (BOOL)hasColor;
- (BOOL)hasExposure;
- (BOOL)hasCrop;
- (BOOL)hasRedeye;
- (id)initWithCGImage:(struct CGImage { }*)arg1 orImagePatchList:(id)arg2 flattenedImageBuffer:(id)arg3 backOrientation:(int)arg4 orientation:(int)arg5 userCrop:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg6 adjustmentData:(id)arg7 andAnalysisData:(id)arg8 andOptionFlags:(int)arg9;
- (BOOL)hasRotation;
- (id)UIImage;
- (id)CIImage;
- (struct CGImage { }*)CGImage;
- (id)flattenedImageInBoundingSize:(struct CGSize { float x1; float x2; })arg1;
- (id)initWithCGImage:(struct CGImage { }*)arg1 orientation:(int)arg2 adjustmentData:(id)arg3 andAnalysisData:(id)arg4 andOptionFlags:(int)arg5;
- (void)dealloc;
- (struct CGSize { float x1; float x2; })maximumSize;

@end
