/* Generated by RuntimeBrowser.
   Image: /System/Library/PrivateFrameworks/GameCenterFoundation.framework/GameCenterFoundation
 */

/* RuntimeBrowser encountered an ivar type encoding it does not handle. 
   See Warning(s) below.
 */

@class NSArray, NSString, GKMatchRequestInternal;

@interface GKMatchRequest : NSObject  {
    GKMatchRequestInternal *_internal;

  /* Unexpected information at end of encoded ivar type: ? */
  /* Error parsing encoded ivar type info: @? */
    id _inviteeResponseHandler;


  /* Unexpected information at end of encoded ivar type: ? */
  /* Error parsing encoded ivar type info: @? */
    id _recipientResponseHandler;

}

@property unsigned int minPlayers;
@property unsigned int maxPlayers;
@property unsigned int playerGroup;
@property unsigned int playerAttributes;
@property(retain) NSArray * recipients;
@property(retain) NSArray * playersToInvite;
@property(copy) NSString * inviteMessage;
@property unsigned int defaultNumberOfPlayers;
@property(copy) id recipientResponseHandler;
@property(copy) id inviteeResponseHandler;
@property(retain) GKMatchRequestInternal * internal;

+ (unsigned int)maxPlayersAllowedForMatchOfType:(unsigned int)arg1;
+ (id)instanceMethodSignatureForSelector:(SEL)arg1;
+ (BOOL)instancesRespondToSelector:(SEL)arg1;

- (void)setValue:(id)arg1 forUndefinedKey:(id)arg2;
- (id)internal;
- (void)loadRecipientsWithCompletionHandler:(id)arg1;
- (void)setPlayersToInvite:(id)arg1;
- (id)playersToInvite;
- (void)removeLocalPlayerFromPlayersToInvite;
- (BOOL)isTurnBasedValid;
- (BOOL)isValidForHosted:(BOOL)arg1;
- (BOOL)isValidWithMax:(unsigned int)arg1;
- (BOOL)defaultNumberOfPlayersIsValid;
- (void)setRecipientResponseHandler:(id)arg1;
- (id)recipientResponseHandler;
- (void)setInviteeResponseHandler:(id)arg1;
- (id)inviteeResponseHandler;
- (void)setInternal:(id)arg1;
- (id)initWithInternalRepresentation:(id)arg1;
- (id)valueForUndefinedKey:(id)arg1;
- (id)forwardingTargetForSelector:(SEL)arg1;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (id)methodSignatureForSelector:(SEL)arg1;
- (unsigned int)hash;
- (BOOL)isEqual:(id)arg1;
- (void)setRecipients:(id)arg1;
- (id)recipients;
- (BOOL)respondsToSelector:(SEL)arg1;
- (id)description;
- (void)dealloc;
- (id)init;

@end
