/* Generated by RuntimeBrowser.
   Image: /System/Library/PrivateFrameworks/Celestial.framework/Celestial
 */

@class FigCaptureSourceFormat, NSString, NSDictionary;

@interface FigCaptureSourceConfiguration : NSObject <NSCoding, NSCopying> {
    NSString *_sourceID;
    struct OpaqueFigCaptureSource { } *_source;
    int _sourceType;
    NSDictionary *_sourceAttributes;
    FigCaptureSourceFormat *_requiredFormat;
    float _requiredMaxFrameRate;
    float _requiredMinFrameRate;
    float _videoZoomFactor;
    float _videoZoomRampAcceleration;
    int _imageControlMode;
    BOOL _automaticallyEnablesLowLightBoostWhenAvailable;
}

@property(copy) NSString * sourceID;
@property(readonly) struct OpaqueFigCaptureSource { }* source;
@property(retain) FigCaptureSourceFormat * requiredFormat;
@property float requiredMaxFrameRate;
@property float requiredMinFrameRate;
@property float videoZoomFactor;
@property float videoZoomRampAcceleration;
@property(readonly) int sourcePosition;
@property(readonly) int sourceType;
@property int imageControlMode;
@property BOOL automaticallyEnablesLowLightBoostWhenAvailable;

+ (int)sourceTypeForString:(id)arg1;
+ (id)stringForSourceType:(int)arg1;
+ (void)initialize;

- (id)initWithSourceType:(int)arg1;
- (id)initWithSource:(struct OpaqueFigCaptureSource { }*)arg1;
- (id)_sourceAttributes;
- (id)_sourceUID;
- (float)videoZoomRampAcceleration;
- (float)videoZoomFactor;
- (int)_sourceToken;
- (void)setImageControlMode:(int)arg1;
- (void)setVideoZoomRampAcceleration:(float)arg1;
- (void)setVideoZoomFactor:(float)arg1;
- (void)setRequiredMinFrameRate:(float)arg1;
- (void)setRequiredMaxFrameRate:(float)arg1;
- (void)setRequiredFormat:(id)arg1;
- (BOOL)_isCameraSource;
- (void)setSourceID:(id)arg1;
- (void)setAutomaticallyEnablesLowLightBoostWhenAvailable:(BOOL)arg1;
- (BOOL)automaticallyEnablesLowLightBoostWhenAvailable;
- (float)requiredMaxFrameRate;
- (float)requiredMinFrameRate;
- (id)sourceID;
- (int)imageControlMode;
- (id)requiredFormat;
- (int)sourcePosition;
- (struct OpaqueFigCaptureSource { }*)source;
- (int)sourceType;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (BOOL)isEqual:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)description;
- (void)dealloc;

@end
