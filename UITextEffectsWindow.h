/* Generated by RuntimeBrowser.
   Image: /System/Library/Frameworks/UIKit.framework/UIKit
 */

@class UIScreen, NSDictionary;

@interface UITextEffectsWindow : UIAutoRotatingWindow <_UIScreenBasedObject> {
    BOOL _inDealloc;
    unsigned int _activeEffectsCount;
    unsigned int _hostedUseCount;
    float _defaultWindowLevel;
    struct CGPoint { 
        float x; 
        float y; 
    } _hostedWindowOffset;
    NSDictionary *_perScreenOptions;
    unsigned int _activeRemoteViewCount;
    unsigned int _windowLevelCount;
    float _windowLevelStack[5];
}

@property(readonly) UIScreen * _intendedScreen;
@property(readonly) NSDictionary * _options;
@property BOOL useHostedInstance;
@property(readonly) unsigned int contextID;
@property float defaultWindowLevel;
@property struct CGPoint { float x1; float x2; } hostedWindowOffset;
@property(readonly) struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; } hostedFrame;

+ (void)lowerTextEffectsWindowsForHideNotificationCenter;
+ (void)raiseTextEffectsWindowsForShowNotificationCenter;
+ (void)releaseSharedInstances;
+ (id)sharedTextEffectsWindowAboveStatusBar;
+ (id)sharedTextEffectsWindow;
+ (id)_sharedTextEffectsWindowforScreen:(id)arg1 aboveStatusBar:(BOOL)arg2 allowHosted:(BOOL)arg3 matchesStatusBarOrientationOnAccess:(BOOL)arg4;
+ (id)sharedTextEffectsWindowForScreen:(id)arg1;

- (void)setHostedWindowOffset:(struct CGPoint { float x1; float x2; })arg1;
- (id)nonHostedWindow;
- (void)updateSubviewOrdering;
- (void)resetTransform;
- (struct CGPoint { float x1; float x2; })magnifierScreenPointForPoint:(struct CGPoint { float x1; float x2; })arg1 targetWindow:(id)arg2;
- (struct CGPoint { float x1; float x2; })classicWindowPointForPoint:(struct CGPoint { float x1; float x2; })arg1;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })hostedFrame;
- (void)_restoreWindowLevel;
- (void)_setWindowLevel:(float)arg1;
- (unsigned int)contextID;
- (void)setUseHostedInstance:(BOOL)arg1;
- (id)aboveStatusBarWindow;
- (void)updateForOrientation:(int)arg1 forceResetTransform:(BOOL)arg2;
- (void)updateForOrientation:(int)arg1;
- (void)sortSubviews;
- (void)delayHideWindow;
- (struct CGPoint { float x1; float x2; })_adjustPointForHostedDisplay:(struct CGPoint { float x1; float x2; })arg1 hasTarget:(BOOL)arg2 inset:(BOOL)arg3;
- (id)_intendedScreen;
- (BOOL)_matchingOptions:(id)arg1;
- (id)_initWithScreen:(id)arg1 options:(id)arg2;
- (float)defaultWindowLevel;
- (void)setDefaultWindowLevel:(float)arg1;
- (id)_basicInitWithScreen:(id)arg1 options:(id)arg2;
- (void)_matchDeviceOrientation;
- (BOOL)useHostedInstance;
- (struct CGPoint { float x1; float x2; })hostedWindowOffset;
- (id)_options;
- (void)_didRemoveSubview:(id)arg1;
- (void)didAddSubview:(id)arg1;
- (struct CGPoint { float x1; float x2; })convertPoint:(struct CGPoint { float x1; float x2; })arg1 toView:(id)arg2;
- (BOOL)_disableViewScaling;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })convertRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1 fromView:(id)arg2;
- (BOOL)_shouldResizeWithScene;
- (void)handleStatusBarChangeFromHeight:(float)arg1 toHeight:(float)arg2;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })convertRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1 toWindow:(id)arg2;
- (struct CGPoint { float x1; float x2; })convertPoint:(struct CGPoint { float x1; float x2; })arg1 toWindow:(id)arg2;
- (void)_configureContextOptions:(id)arg1;
- (void)_updateTransformLayerForClassicPresentation;
- (BOOL)isInternalWindow;
- (BOOL)_canAffectStatusBarAppearance;
- (BOOL)_usesWindowServerHitTesting;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })convertRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1 toView:(id)arg2;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })convertRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1 fromWindow:(id)arg2;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })_sceneBounds;
- (struct CGPoint { float x1; float x2; })convertPoint:(struct CGPoint { float x1; float x2; })arg1 fromWindow:(id)arg2;
- (BOOL)_shouldParticipateInVirtualResizing;
- (BOOL)_canActAsKeyWindowForScreen:(id)arg1;
- (BOOL)_shouldTintStatusBar;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })_sceneReferenceBounds;
- (BOOL)_isTextEffectsWindow;
- (int)interfaceOrientation;
- (void)sendSubviewToBack:(id)arg1;
- (void)bringSubviewToFront:(id)arg1;
- (struct CGPoint { float x1; float x2; })convertPoint:(struct CGPoint { float x1; float x2; })arg1 fromView:(id)arg2;
- (id)initWithFrame:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (void)dealloc;

@end
