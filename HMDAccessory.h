/* Generated by RuntimeBrowser.
   Image: /System/Library/PrivateFrameworks/HomeKitDaemon.framework/HomeKitDaemon
 */

@class HAPAccessory, NSObject<OS_dispatch_source>, NSMutableSet, HMDRoom, NSArray, NSObject<OS_dispatch_queue>, NSUUID, HMMessageDispatcher, HMDAccessory, HMDHome, NSMutableArray, NSString;

@interface HMDAccessory : NSObject <NSSecureCoding, HMMessageReceiver> {
    BOOL _isAccessoryPaired;
    BOOL _isAccessoryReachable;
    HMDHome *_home;
    NSString *_name;
    HAPAccessory *_hapAccessory;
    NSUUID *_uuid;
    NSString *_uniqueIdentifier;
    NSString *_configurationAppIdentifier;
    NSObject<OS_dispatch_queue> *_workQueue;
    NSObject<OS_dispatch_source> *_pairingRetryTimer;
    NSMutableArray *_discoveredServices;
    HMMessageDispatcher *_msgDispatcher;
    HMDRoom *_room;
    HMDAccessory *_bridge;
    NSMutableSet *_identifiersForBridgedAccessories;
}

@property HMDHome * home;
@property(retain) NSString * name;
@property(retain) HAPAccessory * hapAccessory;
@property(readonly) NSUUID * uuid;
@property(retain) NSString * uniqueIdentifier;
@property(getter=isPaired,readonly) BOOL paired;
@property(getter=isReachable,readonly) BOOL reachable;
@property(copy,readonly) NSArray * services;
@property(retain) NSString * configurationAppIdentifier;
@property(retain) NSObject<OS_dispatch_queue> * workQueue;
@property(retain) NSObject<OS_dispatch_source> * pairingRetryTimer;
@property(retain) NSMutableArray * discoveredServices;
@property(retain) HMMessageDispatcher * msgDispatcher;
@property BOOL isAccessoryPaired;
@property BOOL isAccessoryReachable;
@property(retain) HMDRoom * room;
@property HMDAccessory * bridge;
@property(retain) NSMutableSet * identifiersForBridgedAccessories;
@property(readonly) NSUUID * messageTargetUUID;
@property(readonly) NSObject<OS_dispatch_queue> * messageReceiveQueue;

+ (BOOL)supportsSecureCoding;

- (void)setRoom:(id)arg1;
- (id)room;
- (void)setHome:(id)arg1;
- (id)home;
- (id)services;
- (id)workQueue;
- (void)setIdentifiersForBridgedAccessories:(id)arg1;
- (void)setBridge:(id)arg1;
- (void)setDiscoveredServices:(id)arg1;
- (void)setPairingRetryTimer:(id)arg1;
- (id)pairingRetryTimer;
- (void)removeBridgedAccessory:(id)arg1;
- (void)addBridgedAccessory:(id)arg1;
- (void)removeAccessory;
- (void)configureWithAccessory:(id)arg1;
- (void)setIsAccessoryReachable:(BOOL)arg1;
- (void)notifyValue:(id)arg1 identifier:(id)arg2 forCharacteristic:(id)arg3;
- (void)_handleRenameService:(id)arg1;
- (void)_handleUpdateRoom:(id)arg1;
- (void)_handleCharacteristicRead:(id)arg1;
- (void)_handleCharacteristicWrite:(id)arg1;
- (BOOL)isAccessoryReachable;
- (id)bridge;
- (id)initWithAccessory:(id)arg1 messageDispatcher:(id)arg2;
- (id)identifiersForBridgedAccessories;
- (void)_writeValue:(id)arg1 forCharacteristic:(id)arg2 identifier:(id)arg3 withResponseHandler:(id)arg4;
- (void)_sendConnectivityNotification:(BOOL)arg1;
- (void)_populateServices;
- (void)setIsAccessoryPaired:(BOOL)arg1;
- (void)setHapAccessory:(id)arg1;
- (id)discoveredServices;
- (id)hapAccessory;
- (BOOL)isAccessoryPaired;
- (id)findCharacteristic:(id)arg1 forService:(id)arg2;
- (id)configurationAppIdentifier;
- (void)setConfigurationAppIdentifier:(id)arg1;
- (void)updateRoom:(id)arg1;
- (void)_handleRename:(id)arg1;
- (void)configure:(id)arg1 msgDispatcher:(id)arg2;
- (id)messageReceiveQueue;
- (id)messageTargetUUID;
- (void)_registerForMessages;
- (void)setMsgDispatcher:(id)arg1;
- (id)msgDispatcher;
- (void)setWorkQueue:(id)arg1;
- (BOOL)isReachable;
- (void)writeValue:(id)arg1 forCharacteristic:(id)arg2 withCompletionHandler:(id)arg3;
- (BOOL)isPaired;
- (id)uuid;
- (void)setUniqueIdentifier:(id)arg1;
- (void).cxx_destruct;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)uniqueIdentifier;
- (id)name;
- (void)setName:(id)arg1;
- (id)description;

@end
