/* Generated by RuntimeBrowser.
   Image: /System/Library/PrivateFrameworks/ChatKit.framework/ChatKit
 */

@class IMTranscriptChatItem, NSString, UIImage, NSAttributedString;

@interface CKChatItem : NSObject  {
    BOOL _sizeLoaded;
    IMTranscriptChatItem *_imChatItem;
    NSAttributedString *_transcriptText;
    float _maxWidth;
    NSAttributedString *_transcriptDrawerText;
    struct CGSize { 
        float width; 
        float height; 
    } _size;
    struct UIEdgeInsets { 
        float top; 
        float left; 
        float bottom; 
        float right; 
    } _textAlignmentInsets;
}

@property(retain) IMTranscriptChatItem * IMChatItem;
@property(readonly) unsigned char contiguousType;
@property(readonly) unsigned char attachmentContiguousType;
@property(readonly) BOOL hasTail;
@property(copy) NSAttributedString * transcriptText;
@property float maxWidth;
@property(readonly) struct CGSize { float x1; float x2; } size;
@property(readonly) struct UIEdgeInsets { float x1; float x2; float x3; float x4; } textAlignmentInsets;
@property(readonly) struct UIEdgeInsets { float x1; float x2; float x3; float x4; } transcriptTextAlignmentInsets;
@property(readonly) struct UIEdgeInsets { float x1; float x2; float x3; float x4; } contentInsets;
@property(readonly) BOOL transcriptOrientation;
@property(readonly) Class cellClass;
@property(copy,readonly) NSString * cellIdentifier;
@property(retain,readonly) UIImage * contactImage;
@property(readonly) BOOL displayDuringSend;
@property(copy) NSAttributedString * transcriptDrawerText;
@property(readonly) BOOL wantsDrawerLayout;
@property(readonly) BOOL isEditable;
@property(readonly) BOOL canCopy;
@property(readonly) BOOL canDelete;
@property(readonly) BOOL canForward;
@property(readonly) BOOL canExport;
@property(readonly) BOOL canSendAsTextMessage;
@property(getter=isSizeLoaded) BOOL sizeLoaded;

+ (id)chatItemWithIMChatItem:(id)arg1 rightBalloonMaxWidth:(float)arg2 leftBalloonMaxWidth:(float)arg3 otherMaxWidth:(float)arg4;

- (void)setMaxWidth:(float)arg1;
- (float)maxWidth;
- (void)setSizeLoaded:(BOOL)arg1;
- (BOOL)isSizeLoaded;
- (void)setTranscriptDrawerText:(id)arg1;
- (void)setTranscriptText:(id)arg1;
- (id)initWithIMChatItem:(id)arg1 maxWidth:(float)arg2;
- (BOOL)canSave;
- (BOOL)wantsDrawerLayout;
- (id)transcriptDrawerText;
- (id)cellIdentifier;
- (void)setIMChatItem:(id)arg1;
- (id)loadTranscriptDrawerText;
- (unsigned char)attachmentContiguousType;
- (unsigned char)contiguousType;
- (BOOL)canSendAsTextMessage;
- (BOOL)canExport;
- (id)transcriptText;
- (struct UIEdgeInsets { float x1; float x2; float x3; float x4; })transcriptTextAlignmentInsets;
- (void)unloadSize;
- (void)unloadTranscriptText;
- (BOOL)canForward;
- (BOOL)canDelete;
- (struct CGSize { float x1; float x2; })loadSizeThatFits:(struct CGSize { float x1; float x2; })arg1 textAlignmentInsets:(out struct UIEdgeInsets { float x1; float x2; float x3; float x4; }*)arg2;
- (BOOL)displayDuringSend;
- (BOOL)transcriptOrientation;
- (struct UIEdgeInsets { float x1; float x2; float x3; float x4; })textAlignmentInsets;
- (BOOL)hasTail;
- (id)loadTranscriptText;
- (id)IMChatItem;
- (id)contactImage;
- (struct UIEdgeInsets { float x1; float x2; float x3; float x4; })contentInsets;
- (BOOL)canCopy;
- (Class)cellClass;
- (BOOL)isEditable;
- (BOOL)isEqual:(id)arg1;
- (struct CGSize { float x1; float x2; })size;
- (id)description;
- (void)dealloc;

@end
