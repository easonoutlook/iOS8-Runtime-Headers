/* Generated by RuntimeBrowser.
   Image: /System/Library/PrivateFrameworks/PhotoLibrary.framework/PhotoLibrary
 */

@class UIView, PLVideoView, CAMStillImageCaptureResponse, NSDictionary, PLPhotoTileViewController, PLCropOverlay;

@interface PLImagePickerCameraView : CAMCameraView <PLVideoViewDelegate> {
    BOOL _allowsEditing;
    BOOL _allowsStillDuringVideo;
    BOOL _showsCropRegion;
    BOOL _displayedInPopover;
    BOOL _cropOverlayUsesTelephonyUI;
    BOOL _wantsImageData;
    BOOL _showingCropOverlay;
    BOOL __manipulatingCrop;
    BOOL __shouldSkipPostcaptureReview;
    BOOL __retakingPhoto;
    NSDictionary *_imagePickerOptions;
    int _photoSavingOptions;
    PLPhotoTileViewController *_tileViewController;
    CAMStillImageCaptureResponse *__mostRecentCaptureResponse;
    PLCropOverlay *__cropOverlay;
    PLVideoView *__videoView;
    int __enabledGestures;
    int __windowEdgeClip;
}

@property(retain) NSDictionary * imagePickerOptions;
@property BOOL allowsEditing;
@property BOOL allowsStillDuringVideo;
@property BOOL showsCropRegion;
@property BOOL controlsAreVisible;
@property(getter=isDisplayedInPopover) BOOL displayedInPopover;
@property(retain) UIView * customOverlayView;
@property BOOL cropOverlayUsesTelephonyUI;
@property BOOL wantsImageData;
@property int photoSavingOptions;
@property(getter=isShowingCropOverlay) BOOL showingCropOverlay;
@property(readonly) PLPhotoTileViewController * tileViewController;
@property(readonly) CAMStillImageCaptureResponse * _mostRecentCaptureResponse;
@property(readonly) PLCropOverlay * _cropOverlay;
@property(getter=_isManipulatingCrop,setter=_setManipulatingCrop:) BOOL _manipulatingCrop;
@property(readonly) PLVideoView * _videoView;
@property(setter=_setEnabledGestures:) int _enabledGestures;
@property(readonly) BOOL _shouldSkipPostcaptureReview;
@property(getter=_isRetakingPhoto,setter=_setRetakingPhoto:) BOOL _retakingPhoto;
@property(setter=_setWindowEdgeClip:) int _windowEdgeClip;


- (int)_enabledGestures;
- (id)_mostRecentCaptureResponse;
- (BOOL)isShowingCropOverlay;
- (int)photoSavingOptions;
- (BOOL)wantsImageData;
- (BOOL)showsCropRegion;
- (void)cropOverlayWasToggled:(id)arg1;
- (void)_setEnabledGestures:(int)arg1;
- (void)_previewVideoAtPath:(id)arg1;
- (BOOL)_shouldSkipPostcaptureReview;
- (BOOL)allowsStillDuringVideo;
- (BOOL)_isRetakingPhoto;
- (BOOL)_allowsVideoEditing;
- (id)imagePickerOptions;
- (void)_setRetakingPhoto:(BOOL)arg1;
- (BOOL)cropOverlayUsesTelephonyUI;
- (struct CGSize { float x1; float x2; })_displaySizeForPreviewForCameraMode:(int)arg1;
- (BOOL)_isManipulatingCrop;
- (void)_updateImageEditability;
- (void)_setWindowEdgeClip:(int)arg1;
- (BOOL)isDisplayedInPopover;
- (void)_createCropOverlayIfNecessary;
- (void)_setManipulatingCrop:(BOOL)arg1;
- (void)_resetImageTile;
- (id)tileViewController;
- (void)setAllowsStillDuringVideo:(BOOL)arg1;
- (void)setCustomOverlayView:(id)arg1;
- (id)customOverlayView;
- (void)setDisplayedInPopover:(BOOL)arg1;
- (void)setWantsImageData:(BOOL)arg1;
- (void)setPhotoSavingOptions:(int)arg1;
- (void)setShowingCropOverlay:(BOOL)arg1;
- (void)setCropOverlayUsesTelephonyUI:(BOOL)arg1;
- (id)_cropOverlay;
- (void)cropOverlay:(id)arg1 didFinishSaving:(id)arg2;
- (void)cropOverlayPause:(id)arg1;
- (void)cropOverlayPlay:(id)arg1;
- (void)cropOverlayWasOKed:(id)arg1;
- (void)cropOverlayWasCancelled:(id)arg1;
- (void)setShowsCropRegion:(BOOL)arg1;
- (BOOL)photoTileViewControllerIsDisplayingLandscape:(id)arg1;
- (void)videoViewDidEndPlayback:(id)arg1 didFinish:(BOOL)arg2;
- (void)videoViewDidPausePlayback:(id)arg1;
- (void)videoViewDidBeginPlayback:(id)arg1;
- (void)videoViewIsReadyToBeginPlayback:(id)arg1;
- (BOOL)videoViewCanBeginPlayback:(id)arg1;
- (float)videoViewScrubberYOrigin:(id)arg1 forOrientation:(int)arg2;
- (int)_windowEdgeClip;
- (void)embedControlsIntoNavigationItem:(id)arg1 animated:(BOOL)arg2;
- (BOOL)_wantsPreviewSizeAdjustmentForBars;
- (BOOL)_wantsForcedPreviewAspectRatio;
- (void)setAllowsMultipleModes:(BOOL)arg1;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })_bottomBarFrame;
- (void)captureController:(id)arg1 didStopRecordingForVideoRequest:(id)arg2;
- (void)setControlsAreVisible:(BOOL)arg1;
- (BOOL)_wantsOrientationAnimations;
- (BOOL)_isLockedToPortraitOrientation;
- (BOOL)_allowsStillDuringVideo;
- (void)verifyViewOrdering;
- (BOOL)_wantsFullScreenPreview;
- (void)cameraControllerPreviewDidStart:(id)arg1;
- (void)_removeVideoCaptureControls;
- (void)performPostcapturePreviewForVideoAtPath:(id)arg1;
- (BOOL)_supportsPreviewingAfterCapture;
- (BOOL)_shouldPausePreviewDuringCapture;
- (void)_showVideoCaptureControls;
- (BOOL)_wantsCaptureAnimations;
- (BOOL)_shouldStartPreviewWhenApplicationBecomesActive;
- (BOOL)_shouldBlurWhenSessionStops;
- (BOOL)_wantsSuspensionBlurs;
- (void)captureController:(id)arg1 didCompleteResponse:(id)arg2 forStillImageRequest:(id)arg3 error:(id)arg4;
- (void)viewWillBeDisplayed;
- (id)initWithFrame:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1 spec:(id)arg2;
- (void)setAllowsEditing:(BOOL)arg1;
- (BOOL)allowsEditing;
- (void)setAllowsImageEditing:(BOOL)arg1;
- (void)didMoveToWindow;
- (id)hitTest:(struct CGPoint { float x1; float x2; })arg1 withEvent:(id)arg2;
- (void)setImagePickerOptions:(id)arg1;
- (void)dealloc;
- (id)_videoView;

@end
