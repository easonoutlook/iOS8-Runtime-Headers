/* Generated by RuntimeBrowser.
   Image: /System/Library/Frameworks/AVFoundation.framework/libAVFAudio.dylib
 */

/* RuntimeBrowser encountered one or more ivar type encodings for a function pointer. 
   The runtime does not encode function signature information.  We use a signature of: 
           "int (*funcName)()",  where funcName might be null. 
 */

@class AVAudioSessionPortDescription, NSArray, NSString, AVAudioSessionRouteDescription;

@interface AVAudioSession : NSObject  {
    void *_impl;
}

@property(readonly) NSString * category;
@property(readonly) unsigned int categoryOptions;
@property(readonly) NSString * mode;
@property(getter=isOtherAudioPlaying,readonly) BOOL otherAudioPlaying;
@property(readonly) BOOL secondaryAudioShouldBeSilencedHint;
@property(readonly) AVAudioSessionRouteDescription * currentRoute;
@property(readonly) AVAudioSessionPortDescription * preferredInput;
@property(readonly) NSArray * availableInputs;

+ (id)allocWithZone:(struct _NSZone { }*)arg1;
+ (id)sharedInstance;
+ (void)privateAllocInitSingleton;

- (BOOL)setPreferredIOBufferDuration:(double)arg1 error:(id*)arg2;
- (double)preferredIOBufferDuration;
- (BOOL)setActive:(BOOL)arg1 error:(id*)arg2;
- (int)outputNumberOfChannels;
- (double)sampleRate;
- (BOOL)setCategory:(id)arg1 error:(id*)arg2;
- (unsigned int)promptStyle;
- (int)audioFormat;
- (BOOL)setActive:(BOOL)arg1 withOptions:(unsigned int)arg2 error:(id*)arg3;
- (id)outputDataSources;
- (BOOL)setCategory:(id)arg1 withOptions:(unsigned int)arg2 error:(id*)arg3;
- (BOOL)setActivationContext:(id)arg1 error:(id*)arg2;
- (id)category;
- (id)mode;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (id)delegate;
- (unsigned int)retainCount;
- (id)currentRoute;
- (void)setDelegate:(id)arg1;
- (id)autorelease;
- (id)retain;
- (oneway void)release;
- (id)init;
- (id)audioFormats;
- (BOOL)silenceOutput:(unsigned int)arg1 error:(id*)arg2;
- (void)privateUpdateOutputChannelCount:(id)arg1;
- (void)privateUpdateInputChannelCount:(id)arg1;
- (void)privateHandleSecondaryAudioHintChange:(id)arg1;
- (void)privateHandleServerDied;
- (void)privateHandleFormatChange:(id)arg1;
- (void)privateHandleFormatsChange:(id)arg1;
- (void)privateHandlePromptStyleChange:(id)arg1;
- (void)privateHandleOutputDataSourcesChange:(id)arg1;
- (void)privateHandleInputDataSourcesChange:(id)arg1;
- (void)privateHandleOutputVolumeChange:(id)arg1;
- (void)privateHandleInputGainChange:(id)arg1;
- (void)privateEndInterruptionWithFlags:(id)arg1;
- (void)privateBeginInterruption;
- (void)privateInputIsAvailableChanged:(id)arg1;
- (BOOL)setIAmTheAssistant:(BOOL)arg1 error:(id*)arg2;
- (BOOL)setDefaultChatMode:(id)arg1 error:(id*)arg2;
- (void)privateHandleServerReturned;
- (id)availableInputs;
- (unsigned int)opaqueSessionID;
- (id)preferredInput;
- (BOOL)setPreferredInput:(id)arg1 error:(id*)arg2;
- (BOOL)overrideOutputAudioPort:(unsigned int)arg1 error:(id*)arg2;
- (int)maximumOutputNumberOfChannels;
- (int)maximumInputNumberOfChannels;
- (int)preferredOutputNumberOfChannels;
- (int)preferredInputNumberOfChannels;
- (unsigned int)preferredIOBufferFrameSize;
- (unsigned int)IOBufferFrameSize;
- (double)IOBufferDuration;
- (double)outputSafetyOffset;
- (double)inputSafetyOffset;
- (double)outputLatency;
- (double)inputLatency;
- (BOOL)secondaryAudioShouldBeSilencedHint;
- (BOOL)isOtherAudioPlaying;
- (BOOL)isInputGainSettable;
- (id)outputDataSource;
- (id)inputDataSource;
- (id)inputDataSources;
- (struct AVAudioSessionImpl { struct GenericRunLoopThread {} *x1; id x2; id x3; struct KVOProperty<float> { int (**x_4_1_1)(); float x_4_1_2; boolx_4_1_3; id x_4_1_4; } x4; struct KVOProperty<float> { int (**x_5_1_1)(); float x_5_1_2; boolx_5_1_3; id x_5_1_4; } x5; struct KVONSArrayProperty { int (**x_6_1_1)(); id x_6_1_2; boolx_6_1_3; id x_6_1_4; } x6; struct KVONSArrayProperty { int (**x_7_1_1)(); id x_7_1_2; boolx_7_1_3; id x_7_1_4; } x7; struct KVOProperty<unsigned long> { int (**x_8_1_1)(); unsigned long x_8_1_2; boolx_8_1_3; id x_8_1_4; } x8; struct KVONSObjectProperty<NSArray *> { int (**x_9_1_1)(); id x_9_1_2; boolx_9_1_3; id x_9_1_4; } x9; struct KVOProperty<unsigned long> { int (**x_10_1_1)(); unsigned long x_10_1_2; boolx_10_1_3; id x_10_1_4; } x10; id x11; BOOL x12; struct KVOProperty<unsigned long> { int (**x_13_1_1)(); unsigned long x_13_1_2; boolx_13_1_3; id x_13_1_4; } x13; struct KVOProperty<unsigned long> { int (**x_14_1_1)(); unsigned long x_14_1_2; boolx_14_1_3; id x_14_1_4; } x14; unsigned int x15; }*)privateGetImplementation;
- (float)inputGain;
- (BOOL)fixHardwareFormatToMultiChannel:(BOOL)arg1 error:(id*)arg2;
- (BOOL)isHardwareFormatFixedToMultiChannel;
- (void)setAllowAllBuiltInDataSources:(BOOL)arg1;
- (BOOL)allowAllBuiltInDataSources;
- (BOOL)setForceSoundCheck:(BOOL)arg1 error:(id*)arg2;
- (BOOL)forceSoundCheck;
- (BOOL)isEarpieceActiveNoiseCancelationEnabled;
- (BOOL)setOutputDataSource:(id)arg1 error:(id*)arg2;
- (BOOL)setInputDataSource:(id)arg1 error:(id*)arg2;
- (BOOL)setInputGain:(float)arg1 error:(id*)arg2;
- (BOOL)setPreferredOutputNumberOfChannels:(int)arg1 error:(id*)arg2;
- (BOOL)setPreferredInputNumberOfChannels:(int)arg1 error:(id*)arg2;
- (BOOL)setPreferredIOBufferFrameSize:(unsigned int)arg1 error:(id*)arg2;
- (void)requestRecordPermission:(id)arg1;
- (unsigned int)recordPermission;
- (unsigned int)categoryOptions;
- (void)privateUpdateAudioFormat:(id)arg1;
- (void)privateUpdateAudioFormats:(id)arg1;
- (void)privateUpdatePromptStyle:(id)arg1;
- (void)privateUpdateDataSources:(id)arg1 forInput:(BOOL)arg2;
- (void)privateUpdateOutputVolume:(id)arg1;
- (double)preferredSampleRate;
- (BOOL)isInputAvailable;
- (BOOL)setPreferredSampleRate:(double)arg1 error:(id*)arg2;
- (id)privateRefreshAvailableInputs;
- (id)privateConfigureRouteDescription:(id)arg1;
- (id)privateGetSelectedDataSource:(BOOL)arg1;
- (id)privateGetDataSources:(BOOL)arg1;
- (void)privateUpdateInputGain:(id)arg1;
- (BOOL)privateSetPropertyValue:(unsigned long)arg1 withBool:(BOOL)arg2 error:(id*)arg3;
- (void)privateMarkKVOPropertiesDirty:(unsigned int)arg1;
- (float)outputVolume;
- (int)currentHardwareOutputNumberOfChannels;
- (int)currentHardwareInputNumberOfChannels;
- (double)currentHardwareSampleRate;
- (BOOL)inputIsAvailable;
- (double)preferredHardwareSampleRate;
- (BOOL)setPreferredHardwareSampleRate:(double)arg1 error:(id*)arg2;
- (BOOL)setMode:(id)arg1 error:(id*)arg2;
- (BOOL)setActive:(BOOL)arg1 withFlags:(int)arg2 error:(id*)arg3;
- (int)inputNumberOfChannels;

@end
