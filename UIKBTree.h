/* Generated by RuntimeBrowser.
   Image: /System/Library/Frameworks/UIKit.framework/UIKit
 */

@class NSMutableArray, NSString, NSMutableDictionary;

@interface UIKBTree : NSObject <NSCopying> {
    int type;
    NSString *name;
    NSMutableDictionary *properties;
    NSMutableArray *subtrees;
    NSMutableDictionary *cache;
    NSString *layoutTag;
}

@property int type;
@property(retain) NSString * name;
@property(retain) NSMutableDictionary * properties;
@property(retain) NSMutableArray * subtrees;
@property(retain) NSMutableDictionary * cache;
@property(retain) NSString * layoutTag;

+ (id)mergeStringForKeyName:(id)arg1;
+ (BOOL)shouldSkipCacheString:(id)arg1;
+ (id)treeOfType:(int)arg1;
+ (id)shapesForControlKeyShapes:(id)arg1 options:(int)arg2;
+ (id)stringForType:(int)arg1;
+ (id)uniqueName;
+ (id)key;
+ (id)keyboard;

- (BOOL)renderKeyInKeyplane:(id)arg1;
- (id)cacheDisplayString;
- (id)variantDisplayString;
- (BOOL)avoidAutoDeactivation;
- (float)fadeOutDuration;
- (BOOL)canFadeOutFromState:(int)arg1 toState:(int)arg2;
- (void)setForceMultitap:(BOOL)arg1;
- (void)setSplitMode:(int)arg1;
- (int)splitMode;
- (void)setGhost:(BOOL)arg1;
- (void)setActiveGeometriesList:(id)arg1;
- (void)setGeometriesList:(id)arg1;
- (BOOL)looksLike:(id)arg1;
- (float)primaryKeylayoutOffset;
- (BOOL)isLetters;
- (BOOL)usesAdaptiveKeys;
- (id)geometriesOrderedByPosition;
- (id)keysOrderedByPosition;
- (void)clearTransientCaches;
- (id)keyAttributes;
- (void)setAttributes:(id)arg1;
- (id)keyForString:(id)arg1;
- (BOOL)subtreesAreOrdered;
- (void)zipAttributes;
- (int)indexOfSubtree:(id)arg1;
- (id)subtreesWithProperty:(id)arg1 value:(id)arg2;
- (id)subtreeWithName:(id)arg1 rows:(id)arg2;
- (BOOL)isDuplicateOfTree:(id)arg1;
- (BOOL)isEqualToTree:(id)arg1;
- (id)initWithType:(int)arg1 withName:(id)arg2 withProperties:(id)arg3 withSubtrees:(id)arg4 withCache:(id)arg5;
- (BOOL)isHashed;
- (id)nameFromAttributes;
- (BOOL)_renderAsStringKey;
- (void)setVariantType:(int)arg1;
- (int)_variantType;
- (id)activeGeometriesList;
- (void)updateDictationKeyOnNumberPads:(BOOL)arg1;
- (id)findLeftMoreKey;
- (void)subsumeDisappearingKeyName:(id)arg1 intoKeyName:(id)arg2 factors:(id)arg3;
- (id)subtreeWithType:(int)arg1;
- (id)geometries;
- (void)_addKeylayoutKeys:(id)arg1;
- (void)cacheKey:(id)arg1;
- (BOOL)shouldCacheKey;
- (id)_cacheRootNameForKey:(id)arg1;
- (id)unhashedName;
- (struct { unsigned int x1 : 6; unsigned int x2 : 1; unsigned int x3 : 1; unsigned int x4 : 8; unsigned int x5 : 16; })stylingFromVisualStyle;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })_keyplaneFrame;
- (id)activeShapesFromOutputShapes:(id)arg1 inputShapes:(id)arg2;
- (id)geometriesList;
- (int)_keyCountOnNamedRow:(id)arg1;
- (id)listShapes;
- (void)zipGeometries:(BOOL)arg1 attributes:(BOOL)arg2;
- (id)attributeSet:(BOOL)arg1;
- (id)geometrySet:(BOOL)arg1;
- (BOOL)_needsScaling;
- (BOOL)isGenerated;
- (BOOL)isSameAsTree:(id)arg1;
- (void)setCache:(id)arg1;
- (BOOL)isLeafType;
- (void)setProperties:(id)arg1;
- (BOOL)dynamicDisplayTypeHint;
- (id)properties;
- (void)orderVariantKeys:(BOOL)arg1;
- (id)variantPopupBias;
- (BOOL)boolForProperty:(id)arg1;
- (int)variantType;
- (BOOL)behavesAsShiftKey;
- (int)highlightedVariantIndex;
- (int)flickDirection;
- (int)dragThreshold;
- (BOOL)modifiesKeyplane;
- (id)alternateKeyplaneName;
- (float)primaryKeylayoutWidthRatio;
- (BOOL)avoidsLanguageIndicator;
- (BOOL)setObject:(id)arg1 forProperty:(id)arg2;
- (id)keysOrderedByPositionWithoutZip;
- (BOOL)noLanguageIndicator;
- (void)setVariantPopupBias:(id)arg1;
- (void)updateVariantTypeForActions:(unsigned int)arg1;
- (id)componentName;
- (BOOL)hasLayoutTag:(id)arg1;
- (BOOL)forceMultitap;
- (BOOL)shouldSkipCandidateSelectionForVariants;
- (BOOL)usesKeyCharging;
- (BOOL)supportsType:(int)arg1;
- (void)updateMoreAndInternationalKeysWithOptions:(int)arg1;
- (void)mergeKeyNames:(id)arg1;
- (id)keysForMergeConditions;
- (id)cache;
- (BOOL)notUseCandidateSelection;
- (void)setFlickDirection:(int)arg1;
- (void)setDisplayRowHint:(int)arg1;
- (id)numberForProperty:(id)arg1;
- (id)keySet;
- (void)elaborateLayoutWithSize:(struct CGSize { float x1; float x2; })arg1 scale:(float)arg2;
- (void)precacheLayoutName:(id)arg1;
- (void)setIsGenerated:(BOOL)arg1;
- (void)zipGeometrySet;
- (void)setOverrideDisplayString:(id)arg1;
- (id)firstCachedKeyWithName:(id)arg1;
- (id)keysByKeyName:(id)arg1;
- (id)shiftAlternateKeyplaneName;
- (BOOL)isShiftKeyplane;
- (BOOL)looksLikeShiftAlternate;
- (id)localizationKey;
- (id)autolocalizedKeyCacheIterator;
- (void)setDisplayTypeHint:(int)arg1;
- (id)representedString;
- (id)fullRepresentedString;
- (id)keys;
- (id)keysWithString:(id)arg1;
- (id)subtreeWithName:(id)arg1;
- (id)stringForProperty:(id)arg1;
- (id)layoutName;
- (id)cachedKeysByKeyName:(id)arg1;
- (void)setFrameOnly:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (void)setGeometry:(id)arg1;
- (void)setClipCorners:(int)arg1;
- (int)displayTypeHint;
- (id)overrideDisplayString;
- (BOOL)ghost;
- (int)intForProperty:(id)arg1;
- (int)rendering;
- (int)displayRowHint;
- (int)visualStyle;
- (void)setDisabled:(BOOL)arg1;
- (BOOL)disabled;
- (void)setHighlightedVariantIndex:(int)arg1;
- (void)setSubtrees:(id)arg1;
- (void)setShape:(id)arg1;
- (id)shape;
- (void)setRendering:(int)arg1;
- (void)setInteractionType:(int)arg1;
- (void)setDisplayType:(int)arg1;
- (void)setRepresentedString:(id)arg1;
- (void)setDisplayString:(id)arg1;
- (id)subtrees;
- (int)interactionType;
- (int)clipCorners;
- (void)setVisualStyle:(int)arg1;
- (void)setPaddedFrame:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })paddedFrame;
- (id)geometry;
- (int)displayType;
- (id)keyplaneForKey:(id)arg1;
- (BOOL)isShiftKeyPlaneChooser;
- (BOOL)visible;
- (BOOL)shouldSkipCandidateSelection;
- (BOOL)usesAutoShift;
- (id)displayString;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })frameForKeylayoutName:(id)arg1;
- (void)setLayoutTag:(id)arg1;
- (id)layoutTag;
- (BOOL)isAlphabeticPlane;
- (struct { unsigned int x1 : 6; unsigned int x2 : 1; unsigned int x3 : 1; unsigned int x4 : 8; unsigned int x5 : 16; })visualStyling;
- (void)setVisualStyling:(struct { unsigned int x1 : 6; unsigned int x2 : 1; unsigned int x3 : 1; unsigned int x4 : 8; unsigned int x5 : 16; })arg1;
- (BOOL)isSplit;
- (int)textAlignment;
- (void)setVisible:(BOOL)arg1;
- (id)recursiveDescription;
- (id)initWithType:(int)arg1;
- (void)setTextAlignment:(int)arg1;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (void)setState:(int)arg1;
- (int)type;
- (void)setType:(int)arg1;
- (int)state;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })frame;
- (id)name;
- (void)setName:(id)arg1;
- (id)description;
- (void)setFrame:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (void)dealloc;

@end
