/* Generated by RuntimeBrowser.
   Image: /System/Library/PrivateFrameworks/iWorkImport.framework/iWorkImport
 */

@class TSDRep, TSDBezierPath, CALayer, CAShapeLayer;

@interface TSDKnob : NSObject  {
    int mType;
    struct CGPoint { 
        float x; 
        float y; 
    } mPosition;
    BOOL mOffsetValid;
    struct CGPoint { 
        float x; 
        float y; 
    } mOffset;
    float mRadius;
    unsigned int mTag;
    TSDRep *mRep;
    BOOL mWorksWhenRepLocked;
    BOOL mWorksWhenInVersionBrowsingMode;
    BOOL mShouldDisplayDirectlyOverRep;
    CALayer *mLayer;
    TSDBezierPath *mHitRegionPath;
    CAShapeLayer *mHitRegionLayer;
}

@property int type;
@property struct CGPoint { float x1; float x2; } position;
@property BOOL offsetValid;
@property struct CGPoint { float x1; float x2; } offset;
@property float radius;
@property unsigned int tag;
@property(readonly) CALayer * layer;
@property(copy) TSDBezierPath * hitRegionPath;
@property(readonly) TSDRep * rep;
@property BOOL worksWhenRepLocked;
@property BOOL worksWhenInVersionBrowsingMode;
@property BOOL shouldDisplayDirectlyOverRep;


- (id)knobImage;
- (struct CGPoint { float x1; float x2; })offset;
- (void)setOffset:(struct CGPoint { float x1; float x2; })arg1;
- (void)setTag:(unsigned int)arg1;
- (unsigned int)tag;
- (int)type;
- (void)setType:(int)arg1;
- (float)radius;
- (void)setRadius:(float)arg1;
- (struct CGPoint { float x1; float x2; })position;
- (id)description;
- (id)layer;
- (void)setPosition:(struct CGPoint { float x1; float x2; })arg1;
- (void)dealloc;
- (id)init;
- (id)hitRegionPath;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })boundingBoxOfHitRegionForRep:(id)arg1 scale:(float)arg2;
- (id)hitRegionLayerForRep:(id)arg1;
- (BOOL)isHitByUnscaledPoint:(struct CGPoint { float x1; float x2; })arg1 andRep:(id)arg2;
- (float)i_rotationInDegreesForKnobOnRep:(id)arg1;
- (BOOL)worksWhenInVersionBrowsingMode;
- (BOOL)worksWhenRepLocked;
- (void)setOffsetValid:(BOOL)arg1;
- (BOOL)offsetValid;
- (BOOL)shouldDisplayDirectlyOverRep;
- (void)setHitRegionPath:(id)arg1;
- (void)setShouldDisplayDirectlyOverRep:(BOOL)arg1;
- (void)setWorksWhenInVersionBrowsingMode:(BOOL)arg1;
- (void)setWorksWhenRepLocked:(BOOL)arg1;
- (int)dragType;
- (id)rep;
- (BOOL)obscuresKnob:(id)arg1;
- (BOOL)overlapsWithKnob:(id)arg1;
- (void)updateHitRegionPathForRep:(id)arg1;
- (BOOL)isHitByUnscaledPoint:(struct CGPoint { float x1; float x2; })arg1 andRep:(id)arg2 returningDistance:(float*)arg3;
- (id)initWithType:(int)arg1 position:(struct CGPoint { float x1; float x2; })arg2 radius:(float)arg3 tag:(unsigned int)arg4 onRep:(id)arg5;

@end
