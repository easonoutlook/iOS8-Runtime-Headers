/* Generated by RuntimeBrowser.
   Image: /System/Library/PrivateFrameworks/MPUFoundation.framework/MPUFoundation
 */

@class UIImageView, UIImage, UIColor, _MPUBorderView;

@interface MPUStandardImageStackItemView : MPUStackItemView  {
    _MPUBorderView *_borderView;
    UIImageView *_imageView;
    float _dropShadowAlpha;
    UIColor *_dropShadowColor;
    unsigned int _dropShadowEdges;
    float _dropShadowWidth;
    UIImage *_image;
    float _imageAlpha;
    float _overlayBorderWidth;
    float _overlayBorderAlpha;
    UIColor *_overlayBorderColor;
    float _overlayCenterAlpha;
    UIColor *_overlayCenterColor;
    struct CGRect { 
        struct CGPoint { 
            float x; 
            float y; 
        } origin; 
        struct CGSize { 
            float width; 
            float height; 
        } size; 
    } _imageContentsRect;
    struct CGAffineTransform { 
        float a; 
        float b; 
        float c; 
        float d; 
        float tx; 
        float ty; 
    } _imageTransform;
}

@property float dropShadowAlpha;
@property(retain) UIColor * dropShadowColor;
@property unsigned int dropShadowEdges;
@property float dropShadowWidth;
@property(retain) UIImage * image;
@property float imageAlpha;
@property struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; } imageContentsRect;
@property struct CGAffineTransform { float x1; float x2; float x3; float x4; float x5; float x6; } imageTransform;
@property float overlayBorderWidth;
@property float overlayBorderAlpha;
@property(retain) UIColor * overlayBorderColor;
@property float overlayCenterAlpha;
@property(retain) UIColor * overlayCenterColor;


- (void)setDropShadowColor:(id)arg1;
- (id)dropShadowColor;
- (void)setOverlayBorderColor:(id)arg1;
- (void)setOverlayCenterColor:(id)arg1;
- (void)setOverlayBorderWidth:(float)arg1;
- (void)setDropShadowWidth:(float)arg1;
- (void)setDropShadowEdges:(unsigned int)arg1;
- (void)setImageContentsRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (void)setImageAlpha:(float)arg1;
- (void)setOverlayBorderAlpha:(float)arg1;
- (void)setOverlayCenterAlpha:(float)arg1;
- (id)overlayCenterColor;
- (float)overlayCenterAlpha;
- (id)overlayBorderColor;
- (float)overlayBorderAlpha;
- (float)overlayBorderWidth;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })imageContentsRect;
- (float)imageAlpha;
- (float)dropShadowWidth;
- (unsigned int)dropShadowEdges;
- (float)dropShadowAlpha;
- (void)_updateForBorderViewChange;
- (void)setDropShadowAlpha:(float)arg1;
- (void).cxx_destruct;
- (id)image;
- (struct CGSize { float x1; float x2; })sizeThatFits:(struct CGSize { float x1; float x2; })arg1;
- (void)layoutSubviews;
- (void)setImage:(id)arg1;
- (id)initWithFrame:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (struct CGAffineTransform { float x1; float x2; float x3; float x4; float x5; float x6; })imageTransform;
- (void)setImageTransform:(struct CGAffineTransform { float x1; float x2; float x3; float x4; float x5; float x6; })arg1;

@end
