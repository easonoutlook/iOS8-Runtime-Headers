/* Generated by RuntimeBrowser.
   Image: /System/Library/PrivateFrameworks/iWorkImport.framework/iWorkImport
 */

@interface TSCH3DSceneObject : NSObject  {
}

+ (float)textRotationForChartInfo:(id)arg1;
+ (void)setSelectionPath:(id)arg1 selectionMode:(int)arg2 forScene:(id)arg3;
+ (id)renderCacheKey;
+ (id)sceneObject;

- (void)render:(id)arg1;
- (struct EdgeDetectionParameters { BOOL x1; BOOL x2; float x3; })edgeDetectionParameters;
- (BOOL)animationTextureSceneDelegateShouldSkipForRep:(id)arg1 finalElements:(BOOL)arg2 chunkStage:(int)arg3;
- (int)p_animationTextureSceneDelegateChunkPlane;
- (Class)chartBoundsLayoutSceneDelegateClass;
- (void)statePreservedGetSelectionKnobsPositions:(id)arg1;
- (void)statePreservedPrimeRenderCaches:(id)arg1;
- (void)prerender:(id)arg1;
- (float)shadowCameraDepthLimitAdjustmentFactorForScene:(id)arg1;
- (id)renderInfoForSelectionPath:(id)arg1 info:(id)arg2;
- (BOOL)canEditTextForSelectionPath:(id)arg1 forInfo:(id)arg2;
- (BOOL)canRenderSelectionPath:(id)arg1 forInfo:(id)arg2;
- (id)convertSelectionPathTo3D:(id)arg1 path:(id)arg2;
- (id)selectionPathForInfo:(id)arg1 scene:(id)arg2 pickedPoint:(id)arg3;
- (void)getSelectionKnobsPositions:(id)arg1;
- (void)primeRenderCaches:(id)arg1;
- (void)postrender:(id)arg1;
- (void)rayPick:(id)arg1;
- (void)statePreservedRayPick:(id)arg1;
- (void)postGetBounds:(id)arg1;
- (void)statePreservedPostrender:(id)arg1;
- (void)statePreservedRender:(id)arg1;
- (void)statePreservedPrerender:(id)arg1;
- (void)getBounds:(id)arg1;
- (void)addTitleAnimationToClips:(id)arg1;
- (BOOL)growAnimationLinearInterpolationForChartDeliveryStyle:(unsigned int)arg1;
- (BOOL)growAnimationSequenceInOrderForChartDeliveryStyle:(unsigned int)arg1;
- (struct box<glm::detail::tvec3<float> > { struct tvec3<float> { union { float x_1_2_1; float x_1_2_2; float x_1_2_3; } x_1_1_1; union { float x_2_2_1; float x_2_2_2; float x_2_2_3; } x_1_1_2; union { float x_3_2_1; float x_3_2_2; float x_3_2_3; } x_1_1_3; } x1; struct tvec3<float> { union { float x_1_2_1; float x_1_2_2; float x_1_2_3; } x_2_1_1; union { float x_2_2_1; float x_2_2_2; float x_2_2_3; } x_2_1_2; union { float x_3_2_1; float x_3_2_2; float x_3_2_3; } x_2_1_3; } x2; })shadowPlanePadding;
- (struct box<glm::detail::tvec1<float> > { struct tvec1<float> { union { float x_1_2_1; float x_1_2_2; float x_1_2_3; } x_1_1_1; } x1; struct tvec1<float> { union { float x_1_2_1; float x_1_2_2; float x_1_2_3; } x_2_1_1; } x2; })shadowBlendRangeForChartDeliveryStyle:(unsigned int)arg1;
- (void)addZAxisAnimationToClips:(id)arg1 scene:(id)arg2;

@end
