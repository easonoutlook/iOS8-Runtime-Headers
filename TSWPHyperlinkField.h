/* Generated by RuntimeBrowser.
   Image: /System/Library/PrivateFrameworks/iWorkImport.framework/iWorkImport
 */

/* RuntimeBrowser encountered one or more ivar type encodings for a function pointer. 
   The runtime does not encode function signature information.  We use a signature of: 
           "int (*funcName)()",  where funcName might be null. 
 */

@class NSURL, NSString;

@interface TSWPHyperlinkField : TSWPSmartField  {
    NSURL *_url;
}

@property(setter=setURL:,retain) NSURL * url;
@property(readonly) NSString * displayText;

+ (id)urlWithEmailAddress:(id)arg1 subject:(id)arg2;
+ (id)defaultWebURL;
+ (int)schemeFromURL:(id)arg1;
+ (id)urlReferenceFromURL:(id)arg1;
+ (id)newURLFromURLReference:(id)arg1;
+ (id)defaultMailURL;
+ (id)defaultFileURL;
+ (id)defaultURLFromDefaultsKey:(id)arg1 defaultValue:(id)arg2;
+ (BOOL)schemeIsValidForURLReference:(id)arg1;
+ (BOOL)schemeIsValidForURL:(id)arg1;
+ (id)defaultFieldStyleIdentifier;

- (id)fullPath;
- (id)filePath;
- (BOOL)allowsEditing;
- (void)setURL:(id)arg1;
- (BOOL)isFileURL;
- (int)scheme;
- (id)url;
- (BOOL)isEqual:(id)arg1;
- (void)dealloc;
- (id)displayText;
- (BOOL)hasDisplayText;
- (id)urlPrefix;
- (void)setURLReference:(id)arg1;
- (id)urlReference;
- (int)smartFieldKind;
- (void)adoptStylesheet:(id)arg1 withMapper:(id)arg2;
- (void)loadFromArchive:(const struct HyperlinkFieldArchive { int (**x1)(); struct UnknownFieldSet { struct vector<google::protobuf::UnknownField, std::__1::allocator<google::protobuf::UnknownField> > {} *x_2_1_1; } x2; struct SmartFieldArchive {} *x3; struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > {} *x4; int x5; unsigned int x6[1]; }*)arg1 unarchiver:(id)arg2;
- (id)initWithContext:(id)arg1 url:(id)arg2;
- (void)saveToArchive:(struct HyperlinkFieldArchive { int (**x1)(); struct UnknownFieldSet { struct vector<google::protobuf::UnknownField, std::__1::allocator<google::protobuf::UnknownField> > {} *x_2_1_1; } x2; struct SmartFieldArchive {} *x3; struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > {} *x4; int x5; unsigned int x6[1]; }*)arg1 archiver:(id)arg2;
- (id)copyWithContext:(id)arg1;
- (void)saveToArchiver:(id)arg1;
- (id)initFromUnarchiver:(id)arg1;

@end
