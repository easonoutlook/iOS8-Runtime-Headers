/* Generated by RuntimeBrowser.
   Image: /System/Library/PrivateFrameworks/CoreThemeDefinition.framework/CoreThemeDefinition
 */

@class NSString, TDPNGAsset, NSOrderedSet;

@interface TDSimpleArtworkRenditionSpec : TDRenditionSpec  {
    struct CGRect { 
        struct CGPoint { 
            float x; 
            float y; 
        } origin; 
        struct CGSize { 
            float width; 
            float height; 
        } size; 
    } _alignmentRect;
    BOOL _allowsMultiPassEncoding;
}

@property BOOL allowsMultiPassEncoding;
@property(retain) TDPNGAsset * asset;
@property(retain) NSOrderedSet * slices;
@property struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; } alignmentRect;
@property struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; } primitiveAlignmentRect;
@property(retain) NSString * alignmentRectString;

+ (void)initialize;

- (void)awakeFromFetch;
- (id)initWithEntity:(id)arg1 insertIntoManagedObjectContext:(id)arg2;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })alignmentRect;
- (void)setAllowsMultiPassEncoding:(BOOL)arg1;
- (BOOL)allowsMultiPassEncoding;
- (struct { struct CGSize { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; struct CGSize { float x_3_1_1; float x_3_1_2; } x3; })_edgeMetricsForAlignmentRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1 withRenditionSize:(struct { int x1; int x2; })arg2;
- (id)_sliceRectanglesForRenditionSize:(struct { int x1; int x2; })arg1;
- (void)setPrimitiveAlignmentRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })primitiveAlignmentRect;
- (void)setAlignmentRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (id)_slicesToUseForCSI;
- (id)createCSIRepresentationWithCompression:(BOOL)arg1 colorSpaceID:(unsigned int)arg2 document:(id)arg3;
- (void)_logWarning:(id)arg1;
- (void)_logExtra:(id)arg1;
- (id)associatedFileModificationDateWithDocument:(id)arg1;
- (void)_logError:(id)arg1;

@end
