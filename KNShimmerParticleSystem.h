/* Generated by RuntimeBrowser.
   Image: /System/Library/PrivateFrameworks/iWorkImport.framework/iWorkImport
 */

@class KNShimmerObjectSystem, TSDGLDataBufferAttribute;

@interface KNShimmerParticleSystem : KNShimmerSystem  {
    KNShimmerObjectSystem *mObjectSystem;
    TSDGLDataBufferAttribute *mObjectDataBufferAttributePosition;
    TSDGLDataBufferAttribute *mObjectDataBufferAttributeColor;
    TSDGLDataBufferAttribute *mObjectDataBufferAttributeSpeed;
}

@property KNShimmerObjectSystem * objectSystem;
@property TSDGLDataBufferAttribute * objectDataBufferAttributePosition;
@property TSDGLDataBufferAttribute * objectDataBufferAttributeColor;
@property TSDGLDataBufferAttribute * objectDataBufferAttributeSpeed;
@property unsigned int particleCount;
@property unsigned int visibleParticleCount;

+ (BOOL)willOverrideStartingPoints;
+ (id)newDataBufferAttributeWithName:(id)arg1;
+ (BOOL)willOverrideColors;

- (id)objectSystem;
- (struct { float x1; float x2; })p_hullPoint:(struct { float x1; float x2; })arg1 inVertexRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg2;
- (id)objectDataBufferAttributeColor;
- (id)objectDataBufferAttributeSpeed;
- (id)objectDataBufferAttributePosition;
- (void)drawGLSLWithPercent:(float)arg1 opacity:(float)arg2 rotation:(float)arg3 clockwise:(BOOL)arg4;
- (void)setObjectDataBufferAttributeSpeed:(id)arg1;
- (void)setObjectDataBufferAttributePosition:(id)arg1;
- (void)setObjectDataBufferAttributeColor:(id)arg1;
- (void)setObjectSystem:(id)arg1;
- (struct { float x1; float x2; float x3; float x4; })colorAtIndexPoint:(struct CGPoint { float x1; float x2; })arg1;
- (struct { float x1; float x2; })lifeSpanAtIndexPoint:(struct CGPoint { float x1; float x2; })arg1;
- (float)scaleAtIndexPoint:(struct CGPoint { float x1; float x2; })arg1;
- (struct { float x1; float x2; float x3; })speedAtIndexPoint:(struct CGPoint { float x1; float x2; })arg1;
- (struct CGPoint { float x1; float x2; })startingPointAtIndexPoint:(struct CGPoint { float x1; float x2; })arg1;
- (void)p_setupVertexData;

@end
