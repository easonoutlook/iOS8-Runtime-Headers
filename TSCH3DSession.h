/* Generated by RuntimeBrowser.
   Image: /System/Library/PrivateFrameworks/iWorkImport.framework/iWorkImport
 */

@class NSCountedSet, TSCH3DResourceCache, NSMutableSet, TSCH3DGLSharegroup, TSCH3DDocumentDataCache, TSCH3DGLContext;

@interface TSCH3DSession : NSObject  {
    BOOL mInteractiveCanvas;
    unsigned int mFailures;
    TSCH3DGLContext *mContext;
    TSCH3DResourceCache *mCache;
    TSCH3DGLSharegroup *mSharegroup;
    NSMutableSet *mActiveResourceSet;
    NSMutableSet *mAllResourceSet;
    NSCountedSet *mScopeProtectedResourceSet;
    int mVirtualScreen;
    TSCH3DDocumentDataCache *mDataCache;
}

@property(readonly) TSCH3DGLContext * context;
@property(readonly) TSCH3DGLContext * sharegroupContext;
@property int performance;
@property(readonly) BOOL hasFailed;
@property(readonly) BOOL isOneShot;
@property(readonly) BOOL mustRunOnMainThread;
@property int virtualScreen;
@property(readonly) TSCH3DDocumentDataCache * dataCache;


- (id)context;
- (void)dealloc;
- (id)init;
- (void)p_unlock;
- (void)p_lock;
- (void)setVirtualScreen:(int)arg1;
- (void)forceFlushResources:(id)arg1;
- (void)flushTrackedResources;
- (void)resetTrackingToActiveResources;
- (void)trackResourcesInBlock:(id)arg1;
- (void)p_setContext:(id)arg1;
- (id)p_contextOrNil;
- (void)resetFailures;
- (id)sharegroupContext;
- (id)initWithSharegroupToken:(id)arg1 dataCache:(id)arg2;
- (void)setFailed;
- (void)flushResources:(id)arg1;
- (BOOL)hasEnoughFreeMemoryOfBytes:(unsigned int)arg1;
- (BOOL)isProtectedResource:(id)arg1;
- (int)virtualScreen;
- (void)flushResourcesIfNecessary;
- (id)dataCache;
- (BOOL)hasFailed;
- (void)protectResource:(id)arg1 unprotectOnFail:(BOOL)arg2;
- (void)unprotectResource:(id)arg1 clearOnFailProtection:(BOOL)arg2;
- (id)shaderForObjectState:(const struct ObjectState { struct ObjcSharedPtr<NSSet> { id x_1_1_1; } x1; struct vector<TSCH3D::ObjectState::Lookup, std::__1::allocator<TSCH3D::ObjectState::Lookup> > { struct Lookup {} *x_2_1_1; struct Lookup {} *x_2_1_2; struct __compressed_pair<TSCH3D::ObjectState::Lookup *, std::__1::allocator<TSCH3D::ObjectState::Lookup> > { struct Lookup {} *x_3_2_1; } x_2_1_3; } x2; struct array<SFUtility::ObjcSharedPtr<NSObject>, 8> { struct ObjcSharedPtr<NSObject> { id x_1_2_1; } x_3_1_1[8]; } x3; struct array<TSCH3D::TextureAttributes, 8> { struct TextureAttributes { int x_1_2_1; int x_1_2_2; BOOL x_1_2_3; BOOL x_1_2_4; BOOL x_1_2_5; int x_1_2_6; struct TextureSizeHint { int x_7_3_1; struct tvec2<int> { union { int x_1_5_1; int x_1_5_2; int x_1_5_3; } x_2_4_1; union { int x_2_5_1; int x_2_5_2; int x_2_5_3; } x_2_4_2; } x_7_3_2; } x_1_2_7; BOOL x_1_2_8; } x_4_1_1[8]; } x4; }*)arg1 version:(id)arg2 initializeProgramBlock:(id)arg3;
- (id)handleOfResource:(id)arg1 loader:(id)arg2;
- (void)endFrameWithSharegroupDelegate:(id)arg1;
- (void)beginFrameWithSharegroupDelegate:(id)arg1;
- (void)addActiveResource:(id)arg1;
- (struct SessionLoadResourceResult { BOOL x1; BOOL x2; BOOL x3; id x4; id x5; })loadResource:(id)arg1 reload:(BOOL)arg2 withLoader:(id)arg3 config:(void*)arg4;
- (void)garbageCollectAllUnretainedResources;
- (int)performance;
- (void)setIfIsMoreDemandingPerformance:(int)arg1;
- (void)flushMemoryForResources:(id)arg1;
- (BOOL)mustRunOnMainThread;
- (BOOL)isOneShot;
- (void)setPerformance:(int)arg1;

@end
