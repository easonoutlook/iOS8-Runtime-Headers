/* Generated by RuntimeBrowser.
   Image: /System/Library/PrivateFrameworks/CloudDocsDaemon.framework/CloudDocsDaemon
 */

/* RuntimeBrowser encountered one or more ivar type encodings for a function pointer. 
   The runtime does not encode function signature information.  We use a signature of: 
           "int (*funcName)()",  where funcName might be null. 
 */

@class NSXPCListenerEndpoint, BRCCloudFileProvider, NSObject<OS_dispatch_source>, NSXPCListener, BRCAccountSession, BRCDiskSpaceReclaimer, BRCAccountHandler, NSObject<OS_dispatch_group>, BRCVersionsFileProvider, NSString, NSDate;

@interface BRCDaemon : NSObject <NSXPCListenerDelegate, BRCAccountHandlerDelegate> {
    NSObject<OS_dispatch_source> *_sigIntSrc;
    NSObject<OS_dispatch_source> *_sigQuitSrc;
    NSObject<OS_dispatch_source> *_sigTermSrc;
    NSObject<OS_dispatch_group> *_ipcBlockerGroup;
    NSXPCListener *_xpcListener;
    BOOL _unitTestMode;
    BOOL _resumed;
    BOOL _deviceUnlocked;
    BOOL _notifyOnUnlock;
    BRCAccountSession *_accountSession;
    BRCCloudFileProvider *_fileProvider;
    BRCVersionsFileProvider *_versionsProvider;
    BRCAccountHandler *_accountHandler;
    BOOL _disableAccountChangesHandling;
    BOOL _disableAppsChangesHandling;
    NSString *_logsDirPath;
    NSString *_appSupportDirPath;
    NSString *_cacheDirPath;
    NSString *_rootDirPath;
    Class _containerClass;
    NSString *_ubiquityTokenSalt;
    unsigned int _forceIsGreedyState;
    BRCDiskSpaceReclaimer *_diskReclaimer;
    NSDate *_startupDate;
}

@property BOOL disableAccountChangesHandling;
@property BOOL disableAppsChangesHandling;
@property unsigned int forceIsGreedyState;
@property(retain) NSString * logsDirPath;
@property(retain) NSString * appSupportDirPath;
@property(retain) NSString * cacheDirPath;
@property(retain) NSString * rootDirPath;
@property(readonly) BRCAccountHandler * accountHandler;
@property(retain) BRCAccountSession * accountSession;
@property(readonly) BRCDiskSpaceReclaimer * diskReclaimer;
@property(readonly) NSXPCListenerEndpoint * endpoint;
@property(readonly) NSString * ubiquityTokenSalt;
@property(readonly) NSDate * startupDate;
@property(retain) Class containerClass;
@property(readonly) BRCCloudFileProvider * fileProvider;
@property(readonly) BRCVersionsFileProvider * versionsProvider;

+ (id)daemon;

- (id)diskReclaimer;
- (void)setForceIsGreedyState:(unsigned int)arg1;
- (unsigned int)forceIsGreedyState;
- (BOOL)disableAppsChangesHandling;
- (BOOL)disableAccountChangesHandling;
- (Class)containerClass;
- (id)logsDirPath;
- (BOOL)status:(struct __sFILE { char *x1; int x2; int x3; short x4; short x5; struct __sbuf { char *x_6_1_1; int x_6_1_2; } x6; int x7; void *x8; int (*x9)(); int (*x10)(); int (*x11)(); int (*x12)(); struct __sbuf { char *x_13_1_1; int x_13_1_2; } x13; struct __sFILEX {} *x14; int x15; unsigned char x16[3]; unsigned char x17[1]; struct __sbuf { char *x_18_1_1; int x_18_1_2; } x18; int x19; long long x20; }*)arg1;
- (BOOL)selfCheck:(struct __sFILE { char *x1; int x2; int x3; short x4; short x5; struct __sbuf { char *x_6_1_1; int x_6_1_2; } x6; int x7; void *x8; int (*x9)(); int (*x10)(); int (*x11)(); int (*x12)(); struct __sbuf { char *x_13_1_1; int x_13_1_2; } x13; struct __sFILEX {} *x14; int x15; unsigned char x16[3]; unsigned char x17[1]; struct __sbuf { char *x_18_1_1; int x_18_1_2; } x18; int x19; long long x20; }*)arg1;
- (void)setUpAnonymousListener;
- (void)waitForConfiguration;
- (void)exitWithCode:(int)arg1;
- (void)waitUntilDeviceIsUnlocked;
- (BOOL)_haveRequiredKernelFeatures;
- (void)setUpSandbox;
- (id)cacheDirPath;
- (void)_initSignals;
- (void)handleExitSignal:(int)arg1;
- (id)accountHandler;
- (void)setUp;
- (void)setDisableAppsChangesHandling:(BOOL)arg1;
- (void)setDisableAccountChangesHandling:(BOOL)arg1;
- (void)setContainerClass:(Class)arg1;
- (void)setRootDirPath:(id)arg1;
- (void)setCacheDirPath:(id)arg1;
- (void)setAppSupportDirPath:(id)arg1;
- (void)setLogsDirPath:(id)arg1;
- (void)accountHandler:(id)arg1 didChangeSessionTo:(id)arg2;
- (void)accountHandler:(id)arg1 willChangeSessionFrom:(id)arg2;
- (id)ubiquityTokenSalt;
- (id)rootDirPath;
- (id)appSupportDirPath;
- (id)versionsProvider;
- (id)fileProvider;
- (id)startupDate;
- (void)setAccountSession:(id)arg1;
- (id)accountSession;
- (BOOL)listener:(id)arg1 shouldAcceptNewConnection:(id)arg2;
- (id)endpoint;
- (void).cxx_destruct;
- (void)resume;
- (id)init;

@end
