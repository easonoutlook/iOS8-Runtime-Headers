/* Generated by RuntimeBrowser.
   Image: /System/Library/PrivateFrameworks/iWorkImport.framework/iWorkImport
 */

@class NSIndexSet, TSCHChartInfo, TSDLayoutGeometry, TSCHChartModel, TSCHChartLayout, NSDictionary, TSCH3DVector, NSArray;

@interface TSCHChartDrawableLayout : TSWPTextHostLayout  {
    struct { 
        unsigned int chartLayoutState : 1; 
        unsigned int chartLayoutStructure : 1; 
    } mChartInvalidFlags;
    TSCHChartLayout *mChartLayout;
    TSDLayoutGeometry *mLayoutGeometryWhileCallingSuperComputeLayoutGeometry;
    TSDLayoutGeometry *mLastPureGeometry;
    struct CGSize { 
        float width; 
        float height; 
    } mMinSizeCache;
    BOOL mInResize;
    BOOL mSuppressChartLayoutInvalidation;
}

@property(readonly) TSCH3DVector * rotation3D;
@property(readonly) TSCHChartInfo * chartInfo;
@property(retain,readonly) TSCHChartLayout * chartLayout;
@property(readonly) BOOL is3DChart;
@property(readonly) NSIndexSet * pieWedgeExplosionSeriesIndices;
@property(copy) NSArray * pieWedgeExplosions;
@property(copy) NSDictionary * seriesIndexedPieWedgeExplosions;
@property(readonly) TSCHChartModel * model;
@property unsigned int dataSetIndex;
@property(copy) TSDLayoutGeometry * legendGeometry;
@property(copy) TSDLayoutGeometry * legendModelGeometry;
@property(retain) TSCHChartLayout * p_chartLayoutNoCreate;
@property(retain,readonly) TSCHChartLayout * p_chartLayout;
@property(copy) TSDLayoutGeometry * p_lastPureGeometry;


- (struct CGSize { float x1; float x2; })minimumSize;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })rectForSelection:(id)arg1;
- (id)model;
- (void)validate;
- (void)invalidate;
- (void)dealloc;
- (id)initWithInfo:(id)arg1;
- (void)layoutSearchForSpellingErrorsWithHitBlock:(id)arg1 stop:(BOOL*)arg2;
- (void)layoutSearchForString:(id)arg1 options:(unsigned int)arg2 hitBlock:(id)arg3;
- (int)wrapFitType;
- (id)computeInfoGeometryFromLayoutGeometry:(id)arg1;
- (BOOL)supportsParentRotation;
- (BOOL)canRotateChildLayout:(id)arg1;
- (id)computeInfoGeometryDuringResize;
- (void)setLegendModelGeometry:(id)arg1;
- (void)setLegendGeometry:(id)arg1;
- (id)legendGeometry;
- (void)setPieWedgeExplosions:(id)arg1;
- (id)pieWedgeExplosions;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })alignmentFrame;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })p_addMultiDataControlToBounds:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })boundsInfluencingExteriorWrap;
- (float)p_approximateMultiDataControlUnscaledHeight;
- (BOOL)canAspectRatioLockBeChangedByUser;
- (BOOL)resizeMayChangeAspectRatio;
- (struct CGSize { float x1; float x2; })p_calcMinSize;
- (void)invalidateChartLayoutStructure;
- (void)processChangedProperty:(int)arg1;
- (id)computeLayoutGeometry;
- (id)p_constrainAndResizePureGeometry:(id)arg1 withValidChartLayout:(id)arg2 toShadowGeometry:(id*)arg3 toInfoGeometry:(id*)arg4;
- (void)offsetGeometryBy:(struct CGPoint { float x1; float x2; })arg1;
- (void)p_convertValidChartLayout:(id)arg1 andInfoGeometry:(id)arg2 toPureGeometry:(id*)arg3 toShadowGeometry:(id*)arg4;
- (id)layoutGeometryFromInfo;
- (void)setP_lastPureGeometry:(id)arg1;
- (id)p_lastPureGeometry;
- (void)p_forceValidateChartLayout;
- (void)invalidateSize;
- (void)invalidateChartLayoutState;
- (void)p_clearChartLayout;
- (id)p_chartLayout2D;
- (id)pieWedgeExplosionsForSeriesIndices:(id)arg1;
- (id)pieWedgeExplosionSeriesIndices;
- (void)p_postLayoutPropertyValueDidChangeNotification;
- (id)p_chartLayout;
- (void)p_validateChartLayout;
- (id)chartDrawableInfo;
- (void)setP_chartLayoutNoCreate:(id)arg1;
- (id)p_chartLayoutNoCreate;
- (Class)repClassOverride;
- (BOOL)p_isPrintingInBackground;
- (BOOL)is3DChart;
- (id)legendModelGeometry;
- (void)setDataSetIndex:(unsigned int)arg1;
- (unsigned int)dataSetIndex;
- (id)seriesIndexedPieWedgeExplosions;
- (void)endResize;
- (void)beginResize;
- (void)endDynamicOperation;
- (void)beginDynamicOperation;
- (void)takeSizeFromTracker:(id)arg1;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })alignmentFrameForProvidingGuidesInRoot;
- (void)take3DDepth;
- (void)take3DRotationFromTracker:(id)arg1;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })boundsForStandardKnobs;
- (BOOL)changesShouldSetNeedsLayout:(id)arg1;
- (BOOL)changesShouldClearLayout:(id)arg1;
- (void)setChartLayoutPropertyValue:(id)arg1 forKey:(id)arg2;
- (void)setRotation3D:(id)arg1;
- (id)rotation3D;
- (id)chartLayout;
- (void)setSeriesIndexedPieWedgeExplosions:(id)arg1;
- (void)processChanges:(id)arg1;
- (id)propertiesThatInvalidateLayout;
- (id)renderersWithRep:(id)arg1;
- (id)chartInfo;

@end
