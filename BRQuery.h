/* Generated by RuntimeBrowser.
   Image: /System/Library/PrivateFrameworks/CloudDocs.framework/CloudDocs
 */

/* RuntimeBrowser encountered one or more ivar type encodings for a function pointer. 
   The runtime does not encode function signature information.  We use a signature of: 
           "int (*funcName)()",  where funcName might be null. 
 */

@class NSArray, NSOperationQueue, BRNotificationReceiver, NSMutableArray, NSMetadataQuery, NSString, NSMutableDictionary, NSPredicate;

@interface BRQuery : NSObject <BRNotificationReceiverDelegate> {
    NSMutableArray *_results;
    NSMutableDictionary *_resultsByRowID;
    BRNotificationReceiver *_receiver;
    NSMetadataQuery *_query;
    NSPredicate *_predicate;
    NSString *_bundleIdentifier;
    NSMutableDictionary *_toBeRemovedByFileObjectID;
    NSMutableDictionary *_toBeReplacedByFileObjectID;
    NSMutableDictionary *_toBeInsertedByFileObjectID;
    int _queryState;
    BOOL _ubiquitousGatherComplete;
    BOOL _needsCrashMarking;
    BOOL _needsCrashEvicting;
    BOOL _sendHasUpdateNotification;
    NSArray *_values;
    NSArray *_sortingAttributes;
    struct { 
        unsigned int first_max_num; 
        unsigned int first_max_ms; 
        unsigned int progress_max_num; 
        unsigned int progress_max_ms; 
        unsigned int update_max_num; 
        unsigned int update_max_ms; 
    } _batchingParameters;
    int (*_create_result_fn)();
    void *_create_result_context;
    int (*_create_result_callbacks_equal)();
    int (*_create_result_callbacks_release)();
    int (*_create_value_fn)();
    void *_create_value_context;
    int (*_create_value_callbacks_equal)();
    int (*_create_value_callbacks_release)();
    NSArray *_searchScopes;
    unsigned long _scopeOptions;
    int (*_sort_fn)();
    void *_sort_context;
    struct __CFRunLoop { } *_runLoop;
    NSOperationQueue *_queryQueue;
    int _disableCount;
}

@property NSMetadataQuery * query;

+ (void)initialize;
+ (id)willBeginPossibleCreationOfItemAtURL:(id)arg1;
+ (id)willBeginPossibleDeletionOfItemAtURL:(id)arg1;
+ (id)willBeginPossibleMoveOfItemAtURL:(id)arg1 toURL:(id)arg2;
+ (void)didEndPossibleFileOperation:(id)arg1;

- (void)_processChanges:(id)arg1;
- (void)_sendSingleShotHasUpdateNotificationIfNeeded;
- (void)_postNote:(struct __CFString { }*)arg1 userInfo:(id)arg2;
- (void)_processUpdates;
- (id)_replacementObjectsForArrayOfQueryItem:(id)arg1;
- (BOOL)_collectUpdates:(id)arg1;
- (void)_postNote:(struct __CFString { }*)arg1;
- (id)_replacementObjectForQueryItem:(id)arg1;
- (void)_runQuery;
- (void)_startReceiver;
- (void)_performBlock:(id)arg1;
- (void)_setQueryState:(int)arg1;
- (void)notificationReceiverDidReceiveNotifications:(id)arg1;
- (void)notificationsReceiverDidInvalidate:(id)arg1;
- (void)notificationsReceiverDidFinishGathering:(id)arg1;
- (void)notificationsReceiverDidReceiveNotificationsBatch:(id)arg1;
- (void)setQueryQueue:(id)arg1;
- (id)queryQueue;
- (void)setQuery:(id)arg1;
- (id)query;
- (void)stop;
- (id)description;
- (void)dealloc;
- (void)finalize;
- (void)setBatchingParameters:(struct { unsigned int x1; unsigned int x2; unsigned int x3; unsigned int x4; unsigned int x5; unsigned int x6; })arg1;
- (id)initWithQuery:(id)arg1 values:(id)arg2 sortingAttributes:(id)arg3 items:(id)arg4;
- (void)setCreateResultFunction:(int (*)())arg1 withContext:(void*)arg2 callbacks:(const struct { int x1; int (*x2)(); int (*x3)(); int (*x4)(); int (*x5)(); }*)arg3;
- (void)setCreateValueFunction:(int (*)())arg1 withContext:(void*)arg2 callbacks:(const struct { int x1; int (*x2)(); int (*x3)(); int (*x4)(); int (*x5)(); }*)arg3;
- (void)setSortComparator:(int (*)())arg1 withContext:(void*)arg2;
- (void)setSearchScope:(id)arg1 withOptions:(unsigned long)arg2;
- (void)setExternalDocumentsBundleIdentifier:(id)arg1;
- (unsigned char)executeWithOptions:(unsigned long)arg1;
- (void)setSendHasUpdateNotification:(BOOL)arg1;
- (void)processUpdates;
- (id)valuesOfAttribute:(id)arg1;
- (unsigned int)countOfResultsForAttributeName:(id)arg1 value:(id)arg2;
- (id)attributeValueForName:(id)arg1 forResultAtIndex:(int)arg2;
- (int)indexOfResult:(const void*)arg1;
- (const void*)resultAtIndex:(int)arg1;
- (void)enableUpdates;
- (void)disableUpdates;
- (unsigned int)resultCount;

@end
