/* Generated by RuntimeBrowser.
   Image: /System/Library/Frameworks/CoreData.framework/CoreData
 */

@class NSXPCStoreNotificationObserver, NSXPCStoreConnection, NSGenerationToken, NSPersistentStoreCache, NSSQLCore, NSSQLModel, NSString, NSMutableDictionary;

@interface NSXPCStore : NSIncrementalStore  {
    NSPersistentStoreCache *_cache;
    NSMutableDictionary *_changeCache;
    NSXPCStoreConnection *_myConnection;
    NSSQLModel *_model;
    NSSQLCore *_core;
    NSString *_sanityCheckToken;
    NSXPCStoreNotificationObserver *_observer;
    NSGenerationToken *_identifier;
    NSString *_remoteStoreChangedNotificationName;
}

@property(copy,readonly) NSString * remoteStoreChangedNotificationName;

+ (id)archiver:(id)arg1 willEncodeObject:(id)arg2;
+ (id)replacementObjectForXPCConnection:(id)arg1 encoder:(id)arg2 object:(id)arg3;
+ (void)initialize;
+ (int)debugDefault;
+ (BOOL)_isOnExtendedTimeout;

- (BOOL)loadMetadata:(id*)arg1;
- (id)obtainPermanentIDsForObjects:(id)arg1 error:(id*)arg2;
- (id)replacementObjectForXPCConnection:(id)arg1 encoder:(id)arg2 object:(id)arg3;
- (void)disconnect;
- (void)setURL:(id)arg1;
- (void)setIdentifier:(id)arg1;
- (id)model;
- (id)type;
- (void)dealloc;
- (struct _NSScalarObjectID { Class x1; }*)newForeignKeyID:(long long)arg1 entity:(id)arg2;
- (id)_newObjectIDForEntityDescription:(id)arg1 pk:(long long)arg2;
- (Class)_objectIDClass;
- (void)_clearCachedRowForObjectWithID:(id)arg1;
- (struct _NSScalarObjectID { Class x1; }*)newObjectIDForEntity:(id)arg1 pk:(long long)arg2;
- (id)entityForEntityDescription:(id)arg1;
- (id)objectIDFactoryForEntity:(id)arg1;
- (void)decodePrefetchResult:(id)arg1 forSources:(id)arg2 context:(id)arg3;
- (void)cacheContents:(id)arg1 ofRelationship:(id)arg2 onObjectWithID:(id)arg3 withTimestamp:(double)arg4;
- (id)newValueForRelationship:(id)arg1 forObjectWithID:(id)arg2 withContext:(id)arg3 error:(id*)arg4;
- (id)executeRequest:(id)arg1 withContext:(id)arg2 error:(id*)arg3;
- (void)managedObjectContextDidUnregisterObjectsWithIDs:(id)arg1;
- (void)managedObjectContextDidRegisterObjectsWithIDs:(id)arg1;
- (id)_sanityCheckToken;
- (void)willRemoveFromPersistentStoreCoordinator:(id)arg1;
- (id)serviceName;
- (id)unarchiver:(id)arg1 didDecodeObject:(id)arg2;
- (void)cacheContents:(id)arg1 ofRelationship:(id)arg2 onObjectWithID:(id)arg3;
- (id)decodeValue:(id)arg1 forRelationship:(id)arg2 onSource:(id)arg3 inContext:(id)arg4 error:(id*)arg5;
- (id)newValuesForObjectWithID:(id)arg1 withContext:(id)arg2 error:(id*)arg3;
- (id)decodeResults:(id)arg1 forFaultOfObjectWithID:(id)arg2 context:(id)arg3 error:(id*)arg4;
- (id)_createAndCacheRowForObjectWithID:(id)arg1 propertyValues:(id)arg2 inContext:(id)arg3 error:(id*)arg4;
- (id)executePullChangesRequest:(id)arg1 withContext:(id)arg2 error:(id*)arg3;
- (id)executeFetchRequest:(id)arg1 withContext:(id)arg2 error:(id*)arg3;
- (id)executeSaveRequest:(id)arg1 withContext:(id)arg2 error:(id*)arg3;
- (id)_executeSaveRequest:(id)arg1 forceInsertsToUpdates:(BOOL)arg2 withContext:(id)arg3 interrupts:(unsigned int*)arg4 error:(id*)arg5;
- (void)_commitChangesForRequest:(id)arg1;
- (id)encodeSaveRequest:(id)arg1 forceInsertsToUpdates:(BOOL)arg2;
- (id)encodeObjectsForSave:(id)arg1 forDelete:(BOOL)arg2;
- (id)_cacheNodePropertiesFromObject:(id)arg1;
- (id)decodeResults:(id)arg1 forFetch:(id)arg2 context:(id)arg3 error:(id*)arg4;
- (void)decodePrefetchArray:(id)arg1 forSources:(id)arg2 context:(id)arg3;
- (void)cacheFetchedRows:(id)arg1 forManagedObjects:(id)arg2;
- (void)setupRemoteStoreObserver;
- (BOOL)load:(id*)arg1;
- (id)remoteStoreChangedNotificationName;
- (id)sendMessage:(id)arg1 fromContext:(id)arg2 interrupts:(unsigned int*)arg3 error:(id*)arg4;
- (void)disconnectConnection:(id)arg1;
- (id)retainedConnection;
- (void)teardownRemoteStoreObserver;
- (Class)objectIDFactoryForSQLEntity:(id)arg1;
- (void)setSQLCore:(id)arg1;
- (id)initWithPersistentStoreCoordinator:(id)arg1 configurationName:(id)arg2 URL:(id)arg3 options:(id)arg4;
- (id)sqlCore;
- (void)_updateRollbackCacheForObjectWithID:(id)arg1 relationship:(id)arg2 withValuesFrom:(id)arg3;
- (id)_cachedRowForRelationship:(id)arg1 onObjectWithID:(id)arg2;
- (id)_cachedRowForObjectWithID:(id)arg1;

@end
