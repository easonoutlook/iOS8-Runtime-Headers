/* Generated by RuntimeBrowser.
   Image: /System/Library/Frameworks/QuartzCore.framework/QuartzCore
 */

/* RuntimeBrowser encountered one or more ivar type encodings for a function pointer. 
   The runtime does not encode function signature information.  We use a signature of: 
           "int (*funcName)()",  where funcName might be null. 
 */

@interface CABasicAnimation : CAPropertyAnimation  {
}

@property BOOL roundsToInteger;
@property float startAngle;
@property float endAngle;
@property(retain) id fromValue;
@property(retain) id toValue;
@property(retain) id byValue;

+ (id)normalizedAnimationWithKeyPath:(id)arg1 fromValue:(id)arg2 toValue:(id)arg3;

- (void)CA_prepareRenderValue;
- (float)endAngle;
- (void)setEndAngle:(float)arg1;
- (void)applyForTime:(double)arg1 presentationObject:(id)arg2 modelObject:(id)arg3;
- (float)startAngle;
- (void)setStartAngle:(float)arg1;
- (void)setRoundsToInteger:(BOOL)arg1;
- (void)setByValue:(id)arg1;
- (double)_timeFunction:(double)arg1;
- (BOOL)roundsToInteger;
- (struct Animation { int (**x1)(); struct Atomic { struct { int x_1_2_1; } x_2_1_1; } x2; float x3; struct Ref<CA::Render::Timing> { struct Timing {} *x_4_1_1; } x4; struct Ref<CA::Render::Vector> { struct Vector {} *x_5_1_1; } x5; void *x6; unsigned int x7; unsigned int x8; unsigned int x9; unsigned int x10; }*)_copyRenderAnimationForLayer:(id)arg1;
- (BOOL)_setCARenderAnimation:(struct Animation { int (**x1)(); struct Atomic { struct { int x_1_2_1; } x_2_1_1; } x2; float x3; struct Ref<CA::Render::Timing> { struct Timing {} *x_4_1_1; } x4; struct Ref<CA::Render::Vector> { struct Vector {} *x_5_1_1; } x5; void *x6; unsigned int x7; unsigned int x8; unsigned int x9; unsigned int x10; }*)arg1 layer:(id)arg2;
- (void)setToValue:(id)arg1;
- (void)setFromValue:(id)arg1;
- (id)byValue;
- (id)toValue;
- (id)fromValue;
- (void)pkui_updateForAdditiveAnimationFromTransform:(struct CATransform3D { float x1; float x2; float x3; float x4; float x5; float x6; float x7; float x8; float x9; float x10; float x11; float x12; float x13; float x14; float x15; float x16; })arg1 toTransform:(struct CATransform3D { float x1; float x2; float x3; float x4; float x5; float x6; float x7; float x8; float x9; float x10; float x11; float x12; float x13; float x14; float x15; float x16; })arg2;
- (void)pkui_updateForAdditiveAnimationFromSize:(struct CGSize { float x1; float x2; })arg1 toSize:(struct CGSize { float x1; float x2; })arg2;
- (void)pkui_updateForAdditiveAnimationFromPoint:(struct CGPoint { float x1; float x2; })arg1 toPoint:(struct CGPoint { float x1; float x2; })arg2;
- (void)pkui_updateForAdditiveAnimationFromScalar:(float)arg1 toScalar:(float)arg2;
- (void)pkui_updateForAdditiveAnimationFromTransform:(struct CATransform3D { float x1; float x2; float x3; float x4; float x5; float x6; float x7; float x8; float x9; float x10; float x11; float x12; float x13; float x14; float x15; float x16; })arg1 toTransform:(struct CATransform3D { float x1; float x2; float x3; float x4; float x5; float x6; float x7; float x8; float x9; float x10; float x11; float x12; float x13; float x14; float x15; float x16; })arg2 withLayerTransform:(struct CATransform3D { float x1; float x2; float x3; float x4; float x5; float x6; float x7; float x8; float x9; float x10; float x11; float x12; float x13; float x14; float x15; float x16; })arg3;
- (void)pkui_updateForAdditiveAnimationFromSize:(struct CGSize { float x1; float x2; })arg1 toSize:(struct CGSize { float x1; float x2; })arg2 withLayerSize:(struct CGSize { float x1; float x2; })arg3;
- (void)pkui_updateForAdditiveAnimationFromScalar:(float)arg1 toScalar:(float)arg2 withLayerScalar:(float)arg3;
- (void)pkui_updateForAdditiveAnimationFromPoint:(struct CGPoint { float x1; float x2; })arg1 toPoint:(struct CGPoint { float x1; float x2; })arg2 withLayerPoint:(struct CGPoint { float x1; float x2; })arg3;
- (double)TSD_animationPercentByApplyingTimingFunctionForKeyPath:(id)arg1 atTime:(double)arg2;
- (void)p_getValue:(id*)arg1 animationPercent:(double*)arg2 atTime:(double)arg3 initialValue:(id)arg4;
- (id)TSD_valueAtTime:(double)arg1 initialValue:(id)arg2;

@end
