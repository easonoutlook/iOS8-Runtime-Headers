/* Generated by RuntimeBrowser.
   Image: /System/Library/PrivateFrameworks/AppLaunchStats.framework/AppLaunchStats
 */

/* RuntimeBrowser encountered an ivar type encoding it does not handle. 
   See Warning(s) below.
 */

@class AppLaunchStatsREventHandler, AppLaunchStatsSBSettings, NSString, NSObject<OS_xpc_object>, AppLaunchStatsLaunchQueue, AppLaunchStatsSaveAndRestore, NSRunLoop, AppLaunchStatsNetwork, NSNumber, AppLaunchStatsStatistics, AppLaunchStatsStateHandlerQueue, AppLaunchStatsAppWorkSpace, NSMutableDictionary, AppLaunchStatsDelayLaunch, AppLaunchStatsSBMonitor, AppLaunchStatsState, BudgetPool, AppLaunchStatsDiag, NSDate, AppLaunchStatsScheduler, NSObject<OS_dispatch_queue>, NSObject<OS_dispatch_source>, CDSession, <AppLaunchStatsDelegate>, NSDistributedNotificationCenter;

@interface AppLaunchStats : NSObject <DuetLoggerProtocol, DuetSaveAndRestore> {
    AppLaunchStatsState *aplsState;
    AppLaunchStatsAppWorkSpace *aplsAppWorkSpace;
    AppLaunchStatsDelayLaunch *aplsDelayLaunch;
    AppLaunchStatsLaunchQueue *aplsLaunchQueue;
    AppLaunchStatsSaveAndRestore *aplsSaveAndRestore;
    AppLaunchStatsSBMonitor *aplsSBMonitor;
    AppLaunchStatsSBSettings *aplsSBSettings;
    AppLaunchStatsStateHandlerQueue *aplsStateHandlerQueue;
    AppLaunchStatsREventHandler *aplsREventHandler;

  /* Unexpected information at end of encoded ivar type: ? */
  /* Error parsing encoded ivar type info: @? */
    id pendingHandler;


  /* Unexpected information at end of encoded ivar type: ? */
  /* Error parsing encoded ivar type info: @? */
    id recommendHandler;

    AppLaunchStatsScheduler *aplsScheduler;
    AppLaunchStatsDiag *aplsDiag;
    AppLaunchStatsNetwork *aplsNetworkMeter;
    AppLaunchStatsStatistics *aplsStats;
    BudgetPool *topicLimiter;
    NSMutableDictionary *topicAbleList;
    CDSession *topicSession;
    unsigned char prefUIKitFakeSwitch;
    int messageStatusAPSD;
    int resourceStatus;
    int externaltriggerType;
    NSDistributedNotificationCenter *distNotCenter;
    NSDate *lastDateOfAliveList;
    NSDate *lastExternalTrigTime;
    NSDate *timeOfLastFetch;
    NSDate *oneHourBudgetReset;
    NSNumber *batteryCapacity;
    NSRunLoop *aplsRunLoop;
    NSString *fakeBundleID;
    boolisClassCLocked;
    boolisAppForecastUpdating;
    boolisDataBudgetUpdating;
    boolisNoprewarmUpdating;
    boolisInternalInstall;
    boolisPowerBudgetsUpdating;
    boollastFetchWasTooLongAgo;
    booldisableAllDueToSleep;
    booldisableFetch;
    booldisableHighPriorityPush;
    booldisableLowPriorityPush;
    booldisableTrending;
    int allowedMaxCount;
    int lockStateToken;
    int whiteListAppToken;
    int externalTrigToken;
    int trendToken;
    int pushListToken;
    int pushToken;
    int configToken;
    int aplsNotifyToken;
    int semaphoreSigToken;
    int classCLockedToken;
    int displayStateToken;
    int pluggedInToken;
    long long lowPriorityStartTime;
    NSObject<OS_dispatch_queue> *appLaunchStatDQueue;
    NSObject<OS_dispatch_queue> *appLaunchStatPushQueue;
    NSObject<OS_dispatch_queue> *delegateQueue;
    NSObject<OS_dispatch_source> *theTimer;
    NSObject<OS_xpc_object> *conn;
    <AppLaunchStatsDelegate> *delegate;
}

@property(readonly) AppLaunchStatsState * aplsState;
@property(readonly) id pendingHandler;
@property(readonly) NSObject<OS_dispatch_queue> * appLaunchStatDQueue;
@property(readonly) NSObject<OS_xpc_object> * conn;


- (id)conn;
- (id)pendingHandler;
- (void)setDelayLaunchFor:(id)arg1 with:(double)arg2;
- (id)doConvertTopicString:(id)arg1 withRange:(struct _NSRange { unsigned int x1; unsigned int x2; })arg2 withSubStringIndex:(unsigned int)arg3;
- (bool)hasOpportunisticFetchFeature:(id)arg1;
- (void)energyForecastStartingOnDate:(id)arg1 duration:(double)arg2 granularity:(int)arg3 completionHandler:(id)arg4;
- (void)retrieveAppScoresWithQueryHandler:(id)arg1;
- (void)setAppLaunchStatsPendingHandler:(id)arg1 queue:(id)arg2;
- (void)setAppLaunchStatsDelegate:(id)arg1 queue:(id)arg2;
- (void)setAppLaunchStatsPendingDelegate:(id)arg1 queue:(id)arg2;
- (void)setAppLaunchRecommendationHandler:(id)arg1;
- (void)preWarmHasEnded:(id)arg1 withResult:(unsigned int)arg2 withTriggerType:(int)arg3 withSequence:(unsigned long long)arg4;
- (void)preWarmHasStarted:(id)arg1 withResult:(unsigned int)arg2 withTriggerType:(int)arg3 withSequence:(unsigned long long)arg4;
- (void)okToPassPushMessageForTopic:(id)arg1 onQueue:(id)arg2 withHandler:(id)arg3;
- (void)trendQueryLaunchApp:(id)arg1;
- (void)okToLaunchMessageFor:(id)arg1 forReasons:(id)arg2 withHandler:(id)arg3;
- (id)defaultsDomainReadString:(id)arg1;
- (void)sendLSTxtqueriesWithMask:(unsigned long long)arg1;
- (void)triggerLaunchQueue:(id)arg1;
- (void)ableAdmissionForTopic:(id)arg1 attribute:(id)arg2 value:(id)arg3 withHandler:(id)arg4;
- (id)convertTopicIDtoBundleID:(id)arg1;
- (int)bundlePredictionZone:(id)arg1 launchzone:(int)arg2 top:(int)arg3 filter:(bool)arg4;
- (void)modifyPoolValue:(id)arg1 number:(long long)arg2;
- (void)carryDailyBudget:(id)arg1 completionHandler:(id)arg2;
- (void)dataForecastStartingOnDate:(id)arg1 duration:(double)arg2 granularity:(int)arg3 completionHandler:(id)arg4;
- (void)appActivityForecastStartingOnDate:(id)arg1 duration:(double)arg2 granularity:(int)arg3 appFilter:(id)arg4 completionHandler:(id)arg5;
- (void)setPendingWorkQueue:(id)arg1;
- (void)initRegisterNotifications;
- (void)testDatabaseAge:(id)arg1;
- (void)updateAppAlivelist;
- (void)updateDailyOutOfBandForecast;
- (void)updatePowerBudgetPool;
- (void)stopDataTransferWithBudgetHandler:(const char *)arg1 seqnum:(long long)arg2 handler:(id)arg3;
- (void)updateDailyPowerBudgets;
- (void)updateDailyDataBudget;
- (void)replaceTimeSlot:(id)arg1;
- (void)updateAliveList;
- (void)updateResourceAvailability;
- (void)resetBudgetPoolClient;
- (void)resetBudgetPool;
- (void)updateDailyAppForecast;
- (void)testOneHourBudgetExpirytime;
- (void)registerAppForTrending:(id)arg1;
- (void)testAndReleaseBlueList;
- (void)checkWifiChargerConnected;
- (void)setup_lstconnection;
- (void)whatToLaunch:(id)arg1;
- (id)appLaunchStatDQueue;
- (bool)hasOpportunisticFetchFeatureWithType:(id)arg1 withFetch:(int)arg2;
- (void)receiveConnectedStateNotification:(unsigned long long)arg1;
- (void)receiveIncomingLowPriorityPushRequestForReservationStation:(id)arg1;
- (void)initSharedNotification;
- (void)receiveIncomingLowPriorityPushList:(unsigned long long)arg1;
- (void)updateTrendingBehavior:(unsigned long long)arg1 withBundleID:(id)arg2;
- (void)launchExternalTriggers:(unsigned long long)arg1;
- (void)initAfterClassCUnlockedForClient;
- (void)initAfterClassCUnlocked;
- (bool)isSpringBoardInstance;
- (void)updateStateFromExternalNotification:(unsigned long long)arg1;
- (void)retrieveAppScoresWithHandler:(id)arg1;
- (void)runPCtimerHeartBeat:(bool)arg1;
- (void)deleteAllEntriesInDB;
- (void)aplsSBMonitorEvent:(int)arg1;
- (void)removeAppFromLST:(id)arg1;
- (id)aplsState;
- (void)onTick;
- (void)restore:(id)arg1;
- (void)reloadConfiguration;
- (void)logLight:(struct __asl_object_s { }*)arg1 withMsg:(struct __asl_object_s { }*)arg2 withLevel:(int)arg3;
- (void)logAll:(struct __asl_object_s { }*)arg1 withMsg:(struct __asl_object_s { }*)arg2 withLevel:(int)arg3;
- (void)save:(id)arg1;
- (void).cxx_destruct;
- (void)dealloc;
- (id)init;

@end
