/* Generated by RuntimeBrowser.
   Image: /System/Library/PrivateFrameworks/iWorkImport.framework/iWorkImport
 */

@class NSArray, TSCHChartPieElementsRenderer, NSDictionary, TSCHChartPieWedgeKnobTracker;

@interface TSCHPieChartRep : TSCHChartRep <TSCHChartPieWedgeExplosionTracking> {
    TSCHChartPieElementsRenderer *mPieElementRenderer;
    NSArray *mWedgeKnobs;
    NSDictionary *mSeriesIndexedPieWedgeDraggingLayers;
    BOOL mHasDrawnSinceWedgeKnobTrackerCreated;
}

@property(readonly) TSCHChartPieWedgeKnobTracker * wedgeExplosionTracker;


- (void)dealloc;
- (float)dragTravelAlongBisectorBetweenStartPoint:(struct CGPoint { float x1; float x2; })arg1 andEndingPoint:(struct CGPoint { float x1; float x2; })arg2 forSeries:(unsigned int)arg3;
- (struct CGPoint { float x1; float x2; })p_distanceForExplosionValue:(float)arg1 startExplosionValue:(float)arg2 seriesIndex:(unsigned int)arg3;
- (id)wedgeExplosionTracker;
- (float)p_radius;
- (id)p_makePieWedgeKnob;
- (id)pieElementRenderer;
- (void)setCurrentKnobTracker:(id)arg1;
- (int)dragTypeAtCanvasPoint:(struct CGPoint { float x1; float x2; })arg1;
- (id)subselectionLayer;
- (BOOL)forceRenderBlankBackground;
- (void)explosionsDidUpdateForNewSeriesIndexedExplosions:(id)arg1;
- (BOOL)pieWedgeHitByUnscaledPoint:(struct CGPoint { float x1; float x2; })arg1 seriesIndex:(unsigned int)arg2 distanceFromCenter:(struct CGPoint { float x1; float x2; }*)arg3;
- (float)newExplosionValueForFinalDragPoint:(struct CGPoint { float x1; float x2; })arg1 startingFrom:(struct CGPoint { float x1; float x2; })arg2 forSeries:(unsigned int)arg3 knob:(id)arg4;
- (struct CGPoint { float x1; float x2; })effectivePointForDragPoint:(struct CGPoint { float x1; float x2; })arg1 startingFrom:(struct CGPoint { float x1; float x2; })arg2 forSeries:(unsigned int)arg3;
- (void)addAdditionalChildLayersToArray:(id)arg1;
- (id)newTrackerForKnob:(id)arg1;
- (void)updatePositionsOfKnobs:(id)arg1;
- (void)addChartKnobsToArray:(id)arg1;
- (id)knobForDynamicStyleChangeKey:(id)arg1;
- (void)clearRenderers;
- (id)initWithLayout:(id)arg1 canvas:(id)arg2;
- (void)knobTrackingDidEnd:(id)arg1;
- (void)knobTrackingDidBegin:(id)arg1;
- (void)renderIntoContext:(struct CGContext { }*)arg1 visible:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg2;
- (void)processChanges:(id)arg1;

@end
