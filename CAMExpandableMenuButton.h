/* Generated by RuntimeBrowser.
   Image: /System/Library/PrivateFrameworks/CameraKit.framework/CameraKit
 */

@class UIView, <CAMExpandableMenuButtonDelegate>, NSIndexSet, NSMutableIndexSet, NSMutableArray;

@interface CAMExpandableMenuButton : UIControl  {
    BOOL _expanded;
    int _selectedIndex;
    int _expansionOrientation;
    int _orientation;
    <CAMExpandableMenuButtonDelegate> *_expandableMenuDelegate;
    NSMutableArray *__menuItems;
    UIView *__headerView;
    NSIndexSet *__hiddenIndexesWhileCollapsed;
    NSMutableIndexSet *__highlightedIndexesWhileCollapsed;
    struct UIEdgeInsets { 
        float top; 
        float left; 
        float bottom; 
        float right; 
    } _tappableEdgeInsets;
}

@property int selectedIndex;
@property(getter=isExpanded,readonly) BOOL expanded;
@property int expansionOrientation;
@property int orientation;
@property struct UIEdgeInsets { float x1; float x2; float x3; float x4; } tappableEdgeInsets;
@property <CAMExpandableMenuButtonDelegate> * expandableMenuDelegate;
@property(readonly) NSMutableArray * _menuItems;
@property(readonly) UIView * _headerView;
@property(copy,readonly) NSIndexSet * _hiddenIndexesWhileCollapsed;
@property(copy,readonly) NSMutableIndexSet * _highlightedIndexesWhileCollapsed;

+ (double)expansionDuration;

- (int)numberOfMenuItems;
- (id)_headerView;
- (id)_highlightedIndexesWhileCollapsed;
- (id)_menuItems;
- (id)expandableMenuDelegate;
- (BOOL)shouldIgnoreMenuInteraction;
- (void)completeExpansionToProposedFrame:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (void)collapseMenuAnimated:(BOOL)arg1;
- (void)expandMenuAnimated:(BOOL)arg1;
- (void)_convertAllSubviewsToProposedFrame:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (void)_applyMenuItemTextAlignmentForCurrentOrientation;
- (void)_applyMenuItemAlphaForCurrentExpansionState;
- (void)_applyMenuItemColorsForCurrentState;
- (void)_updateFromSelectedIndexChange;
- (id)_hiddenIndexesWhileCollapsed;
- (struct CGSize { float x1; float x2; })_layoutForVerticalExpansionOrientation:(BOOL)arg1 expanded:(BOOL)arg2;
- (struct CGSize { float x1; float x2; })_layoutForHorizontalExpansionOrientation:(BOOL)arg1 expanded:(BOOL)arg2;
- (int)expansionOrientation;
- (struct CGSize { float x1; float x2; })_layoutForVerticalCollapsedPortraitButton:(BOOL)arg1;
- (struct CGSize { float x1; float x2; })_layoutForVerticalCollapsedLandscapeButton:(BOOL)arg1;
- (struct CGSize { float x1; float x2; })_layoutForVerticalExpandedPortraitButton:(BOOL)arg1;
- (struct CGSize { float x1; float x2; })_layoutForVerticalExpandedLandscapeButton:(BOOL)arg1;
- (struct CGSize { float x1; float x2; })_layoutForHorizontalCollapsedLandscapeButton:(BOOL)arg1;
- (struct CGSize { float x1; float x2; })_layoutForHorizontalExpandedPortraitButton:(BOOL)arg1;
- (struct CGSize { float x1; float x2; })_layoutForHorizontalExpandedLandscapeButton:(BOOL)arg1;
- (struct CGSize { float x1; float x2; })_layoutForHorizontalCollapsedPortraitButton:(BOOL)arg1;
- (id)_selectedLabel;
- (BOOL)_wantsSelectedItemToBeVisible;
- (struct CGSize { float x1; float x2; })_layoutMenuButton:(BOOL)arg1 expanded:(BOOL)arg2;
- (void)_handleTapGestureRecognizer:(id)arg1;
- (void)_updateFromOrientationChangeAnimated:(BOOL)arg1;
- (void)_updateFromExpansionChangeAnimated:(BOOL)arg1;
- (id)hiddenIndexesWhileCollapsed;
- (id)titleForMenuItemAtIndex:(int)arg1;
- (id)initWithExpansionOrientation:(int)arg1;
- (void)setHighlighted:(BOOL)arg1 forIndex:(int)arg2;
- (struct UIEdgeInsets { float x1; float x2; float x3; float x4; })tappableEdgeInsets;
- (void)updateToContentSize:(id)arg1;
- (void)finishExpansionAnimated:(BOOL)arg1;
- (void)startExpansionWithProposedFrame:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })alignmentRectForFrame:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1 expanded:(BOOL)arg2;
- (void)finishCollapsingAnimated:(BOOL)arg1;
- (void)startCollapsingWithProposedFrame:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })frameForAlignmentRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1 expanded:(BOOL)arg2;
- (struct CGSize { float x1; float x2; })intrinsicContentSizeForExpansion:(BOOL)arg1;
- (void)setExpandableMenuDelegate:(id)arg1;
- (void)setExpansionOrientation:(int)arg1;
- (void)setTappableEdgeInsets:(struct UIEdgeInsets { float x1; float x2; float x3; float x4; })arg1;
- (void).cxx_destruct;
- (void)setOrientation:(int)arg1;
- (id)headerView;
- (void)setSelectedIndex:(int)arg1;
- (int)selectedIndex;
- (BOOL)isExpanded;
- (struct CGSize { float x1; float x2; })intrinsicContentSize;
- (struct UIEdgeInsets { float x1; float x2; float x3; float x4; })alignmentRectInsets;
- (int)orientation;
- (void)setOrientation:(int)arg1 animated:(BOOL)arg2;
- (void)layoutSubviews;
- (void)reloadData;
- (id)init;

@end
