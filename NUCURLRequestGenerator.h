/* Generated by RuntimeBrowser.
   Image: /System/Library/PrivateFrameworks/RadarCompose.framework/RadarCompose
 */

/* RuntimeBrowser encountered an ivar type encoding it does not handle. 
   See Warning(s) below.
 */

@class NSURL, NSMutableDictionary;

@interface NUCURLRequestGenerator : NSObject <NSCoding, NSCopying> {
    BOOL _allowsCellularAccess;
    BOOL _shouldHandleCookies;
    BOOL _shouldUsePipelining;
    unsigned int _cachePolicy;
    unsigned int _networkServiceType;

  /* Unexpected information at end of encoded ivar type: ? */
  /* Error parsing encoded ivar type info: @? */
    id _queryStringBlock;

    NSURL *_baseURL;
    unsigned int _jsonWritingOptions;
    NSMutableDictionary *_defaultHeadersDictionary;
    unsigned int _strEncoding;
    unsigned long _cfStrEncoding;
    double _timeoutInterval;
}

@property BOOL allowsCellularAccess;
@property unsigned int cachePolicy;
@property BOOL shouldHandleCookies;
@property BOOL shouldUsePipelining;
@property unsigned int networkServiceType;
@property double timeoutInterval;
@property(copy) id queryStringBlock;
@property(copy) NSURL * baseURL;
@property unsigned int jsonWritingOptions;
@property(retain) NSMutableDictionary * defaultHeadersDictionary;
@property unsigned int strEncoding;
@property unsigned long cfStrEncoding;

+ (id)jsonContentTypeString;
+ (id)generator;
+ (void)initialize;

- (id)requestWithMethod:(id)arg1 forURLString:(id)arg2 uriParameters:(id)arg3 jsonBody:(id)arg4 error:(id*)arg5;
- (id)requestWithMethod:(id)arg1 forURLString:(id)arg2 uriParameters:(id)arg3 hasFormData:(BOOL)arg4 error:(id*)arg5;
- (void)setStringEncoding:(unsigned int)arg1;
- (unsigned int)stringEncoding;
- (void)setBaseURLPath:(id)arg1;
- (void)clearAuthHeader;
- (void)setAuthHeaderForSPNEGO:(id)arg1;
- (void)setAuthHeaderWithCookie:(id)arg1;
- (void)setAuthHeaderWithToken:(id)arg1;
- (void)setBasicAuthForUsername:(id)arg1 andPassword:(id)arg2;
- (id)defaultRequestHeaders;
- (void)setJsonWritingOptions:(unsigned int)arg1;
- (void)setQueryStringBlock:(id)arg1;
- (void)setShouldUsePipelining:(BOOL)arg1;
- (void)setShouldHandleCookies:(BOOL)arg1;
- (void)setDefaultHeadersDictionary:(id)arg1;
- (unsigned int)jsonWritingOptions;
- (BOOL)setRequestBody:(id)arg1 withJSONObject:(id)arg2 error:(id*)arg3;
- (id)requestWithMethod:(id)arg1 forURL:(id)arg2 uriParameters:(id)arg3 jsonBody:(id)arg4 error:(id*)arg5;
- (unsigned long)cfStrEncoding;
- (BOOL)methodsWithParametersInURI:(id)arg1;
- (id)queryStringFromParameters:(id)arg1;
- (id)queryStringBlock;
- (BOOL)shouldUsePipelining;
- (BOOL)shouldHandleCookies;
- (id)requestWithMethod:(id)arg1 forURL:(id)arg2 uriParameters:(id)arg3 hasFormData:(BOOL)arg4 error:(id*)arg5;
- (void)setCfStrEncoding:(unsigned long)arg1;
- (void)setStrEncoding:(unsigned int)arg1;
- (unsigned int)strEncoding;
- (void)setDefaultValue:(id)arg1 forHTTPHeaderField:(id)arg2;
- (id)defaultHeadersDictionary;
- (void)setBaseURL:(id)arg1;
- (void)setUserAgent:(id)arg1;
- (unsigned int)cachePolicy;
- (double)timeoutInterval;
- (void)setTimeoutInterval:(double)arg1;
- (void)setAllowsCellularAccess:(BOOL)arg1;
- (BOOL)allowsCellularAccess;
- (void).cxx_destruct;
- (id)baseURL;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)init;
- (void)setCachePolicy:(unsigned int)arg1;
- (id)userAgent;
- (void)setNetworkServiceType:(unsigned int)arg1;
- (unsigned int)networkServiceType;

@end
