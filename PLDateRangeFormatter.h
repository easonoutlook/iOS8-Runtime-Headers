/* Generated by RuntimeBrowser.
   Image: /System/Library/PrivateFrameworks/PhotoLibraryServices.framework/PhotoLibraryServices
 */

@class NSLocale, NSDateFormatter;

@interface PLDateRangeFormatter : NSObject  {
    BOOL _autoUpdateOnChanges;
    BOOL _includeDayNumbers;
    BOOL _includeDayNumbersWhenMonthsDiffer;
    BOOL _useRelativeDayFormatting;
    BOOL _useShortMonths;
    BOOL _useShortDaysInRanges;
    BOOL _useTime;
    BOOL _yearOnly;
    BOOL _timeOnly;
    NSDateFormatter *__sameDayDateFormatter;
    NSDateFormatter *__sameDayNoYearDateFormatter;
    NSDateFormatter *__dayOfTheWeekDateFormatter;
    NSDateFormatter *__relativeDateFormatterDay;
    NSDateFormatter *__yearDateFormatter;
    struct UDateIntervalFormat { } *__monthDayIntervalFormat;
    struct UDateIntervalFormat { } *__monthDayNoYearIntervalFormat;
    struct UDateIntervalFormat { } *__differentMonthDayIntervalFormat;
    struct UDateIntervalFormat { } *__differentMonthDayNoYearIntervalFormat;
    struct UDateIntervalFormat { } *__dayOfTheWeekIntervalFormat;
    struct UDateIntervalFormat { } *__timeIntervalFormat;
    struct UDateIntervalFormat { } *__yearIntervalFormat;
    NSLocale *__currentLocale;
}

@property BOOL includeDayNumbers;
@property BOOL includeDayNumbersWhenMonthsDiffer;
@property BOOL useRelativeDayFormatting;
@property BOOL useShortMonths;
@property BOOL useShortDaysInRanges;
@property BOOL useTime;
@property BOOL yearOnly;
@property BOOL timeOnly;
@property BOOL autoUpdateOnChanges;
@property(setter=_setCurrentLocale:,retain) NSLocale * _currentLocale;
@property(retain,readonly) NSDateFormatter * _sameDayDateFormatter;
@property(retain,readonly) NSDateFormatter * _sameDayNoYearDateFormatter;
@property(retain,readonly) NSDateFormatter * _dayOfTheWeekDateFormatter;
@property(retain,readonly) NSDateFormatter * _yearDateFormatter;
@property(retain,readonly) NSDateFormatter * _relativeDateFormatterDay;
@property(readonly) struct UDateIntervalFormat { }* _monthDayIntervalFormat;
@property(readonly) struct UDateIntervalFormat { }* _monthDayNoYearIntervalFormat;
@property(readonly) struct UDateIntervalFormat { }* _differentMonthDayIntervalFormat;
@property(readonly) struct UDateIntervalFormat { }* _differentMonthDayNoYearIntervalFormat;
@property(readonly) struct UDateIntervalFormat { }* _dayOfTheWeekIntervalFormat;
@property(readonly) struct UDateIntervalFormat { }* _timeIntervalFormat;
@property(readonly) struct UDateIntervalFormat { }* _yearIntervalFormat;

+ (void)_dumpAllDateCombinationsWithFormatters;

- (void)_localeChanged:(id)arg1;
- (id)_currentLocale;
- (BOOL)useTime;
- (void)_updateStartAndEndDatesAndDumpDateCombinationWithStartDate:(id)arg1 endDate:(id)arg2 currentDate:(id)arg3 dateFormatter:(id)arg4 calendarUnit:(unsigned int)arg5 value:(int)arg6;
- (void)_updateCurrentDateAndDumpDateCombinationWithStartDate:(id)arg1 endDate:(id)arg2 currentDate:(id)arg3 dateFormatter:(id)arg4 calendarUnit:(unsigned int)arg5 value:(int)arg6;
- (void)_dumpDateCombinationWithStartDate:(id)arg1 endDate:(id)arg2 currentDate:(id)arg3 dateFormatter:(id)arg4;
- (BOOL)autoUpdateOnChanges;
- (void)setAutoUpdateOnChanges:(BOOL)arg1;
- (id)formattedDate:(id)arg1;
- (void)_dumpDateCombinations;
- (id)_relativeCombinationsForDate:(id)arg1;
- (id)_dateCombinationAfterUpdatingStartAndEndDatesWithStartDate:(id)arg1 endDate:(id)arg2 currentDate:(id)arg3 dateFormatter:(id)arg4 calendarUnit:(unsigned int)arg5 value:(int)arg6;
- (id)_dateCombinationAfterUpdatingCurrentDateWithStartDate:(id)arg1 endDate:(id)arg2 currentDate:(id)arg3 dateFormatter:(id)arg4 calendarUnit:(unsigned int)arg5 value:(int)arg6;
- (void)_updateDateComponents:(id)arg1 withValueValue:(int)arg2 forCalendarUnit:(unsigned int)arg3;
- (id)_dateCombinationWithStartDate:(id)arg1 endDate:(id)arg2 currentDate:(id)arg3 dateFormatter:(id)arg4;
- (void)setTimeOnly:(BOOL)arg1;
- (void)setYearOnly:(BOOL)arg1;
- (void)setUseTime:(BOOL)arg1;
- (void)setUseShortDaysInRanges:(BOOL)arg1;
- (void)setUseShortMonths:(BOOL)arg1;
- (void)setUseRelativeDayFormatting:(BOOL)arg1;
- (void)setIncludeDayNumbersWhenMonthsDiffer:(BOOL)arg1;
- (void)setIncludeDayNumbers:(BOOL)arg1;
- (void)_postChangeNotification;
- (void)_invalidateFormats;
- (void)_significantTimeChange:(id)arg1;
- (id)formattedDateRangeWithStartDate:(id)arg1 endDate:(id)arg2;
- (id)formattedDateRangeWithStartDate:(id)arg1 endDate:(id)arg2 currentDate:(id)arg3;
- (id)_sameDayDateFormatter;
- (id)_sameDayNoYearDateFormatter;
- (BOOL)timeOnly;
- (struct UDateIntervalFormat { }*)_timeIntervalFormat;
- (id)_yearDateFormatter;
- (struct UDateIntervalFormat { }*)_monthDayIntervalFormat;
- (struct UDateIntervalFormat { }*)_monthDayNoYearIntervalFormat;
- (struct UDateIntervalFormat { }*)_differentMonthDayIntervalFormat;
- (struct UDateIntervalFormat { }*)_differentMonthDayNoYearIntervalFormat;
- (struct UDateIntervalFormat { }*)_yearIntervalFormat;
- (BOOL)yearOnly;
- (id)_relativeDateFormatterDay;
- (id)_formattedDateWithUDateFormatter:(struct UDateIntervalFormat { }*)arg1 startDate:(id)arg2 endDate:(id)arg3;
- (struct UDateIntervalFormat { }*)_dayOfTheWeekIntervalFormat;
- (BOOL)_date:(id)arg1 isWithinDaysInThePast:(int)arg2;
- (BOOL)_date:(id)arg1 isWithinDaysInThePast:(int)arg2 fromCurrentDate:(id)arg3;
- (BOOL)useShortDaysInRanges;
- (id)_dayDifferentMonthsTemplate;
- (struct UDateIntervalFormat { }*)_newUDateFormatterForLocale:(id)arg1 template:(id)arg2;
- (BOOL)useRelativeDayFormatting;
- (id)_dayTemplate;
- (id)_sameMonthTemplate;
- (BOOL)includeDayNumbersWhenMonthsDiffer;
- (BOOL)includeDayNumbers;
- (BOOL)useShortMonths;
- (void)_releaseUDateFormatter:(struct UDateIntervalFormat { }*)arg1;
- (void)_setCurrentLocale:(id)arg1;
- (void)configureForFormatPreset:(unsigned int)arg1;
- (id)_dayOfTheWeekDateFormatter;
- (void)dealloc;
- (id)init;

@end
