/* Generated by RuntimeBrowser.
   Image: /System/Library/PrivateFrameworks/CoreRC.framework/CoreRC
 */

@class NSObject<OS_dispatch_queue>, CECBusPollingOperation, CECInterface;

@interface CoreCECBusProvider : CoreCECBus <CECInterfaceDelegate, CECBusPollingOperationDelegate, NSCopying, NSSecureCoding> {
    CECInterface *_interface;
    unsigned char _powerStatus;
    CECBusPollingOperation *_pollingOperation;
}

@property(readonly) NSObject<OS_dispatch_queue> * serialQueue;
@property unsigned char powerStatus;
@property(retain,readonly) CECInterface * interface;
@property(retain) CECBusPollingOperation * pollingOperation;

+ (BOOL)supportsSecureCoding;

- (BOOL)sendMessage:(id)arg1 error:(id*)arg2;
- (BOOL)updateActiveSource:(id)arg1 error:(id*)arg2;
- (BOOL)refreshDevicesWithInitiator:(id)arg1 error:(id*)arg2;
- (void)pollingOperation:(id)arg1 encounteredError:(id)arg2 forMessage:(id)arg3;
- (void)pollingOperation:(id)arg1 deviceNotRespondingAtAddress:(unsigned char)arg2;
- (void)pollingOperationCompleted:(id)arg1;
- (BOOL)pollingOperation:(id)arg1 shouldSkipAddress:(unsigned char)arg2;
- (void)receivedMessage:(id)arg1;
- (id)destinationConfirmedForMessage:(id)arg1;
- (id)_cecErrorWithInterfaceError:(id)arg1;
- (BOOL)sendMessage:(id)arg1 withRetryCount:(unsigned char)arg2 error:(id*)arg3;
- (id)destinationExpectedForMessage:(id)arg1;
- (id)addDeviceWithLogicalAddress:(unsigned char)arg1 message:(id)arg2 reason:(unsigned int)arg3;
- (void)setPollingOperation:(id)arg1;
- (id)pollingOperation;
- (void)interface:(id)arg1 receivedFrame:(struct CECFrame { unsigned char x1[16]; unsigned int x2 : 5; unsigned int x3 : 3; })arg2;
- (void)setPowerStatus:(unsigned char)arg1;
- (id)addDeviceWithLogicalAddress:(unsigned char)arg1 physicalAddress:(id)arg2 deviceType:(unsigned int)arg3 message:(id)arg4 reason:(unsigned int)arg5;
- (BOOL)linkStateChanged:(BOOL)arg1 error:(id*)arg2;
- (void)setSystemAudioModeStatus:(unsigned int)arg1;
- (id)addDeviceWithType:(unsigned int)arg1 error:(id*)arg2;
- (void)setTvLanguageCodeASCII:(struct CECLanguage { unsigned char x1[3]; })arg1;
- (void)setOsdNameASCII:(union CECOSDName { unsigned char x1[15]; struct { unsigned char x_2_1_1; unsigned char x_2_1_2[14]; } x2; })arg1;
- (id)propertyForKey:(id)arg1 error:(id*)arg2;
- (BOOL)setProperty:(id)arg1 forKey:(id)arg2 error:(id*)arg3;
- (void)interfacePropertiesChanged:(id)arg1;
- (unsigned char)powerStatus;
- (id)serialQueue;
- (id)interface;
- (Class)classForCoder;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (unsigned int)hash;
- (BOOL)isEqual:(id)arg1;
- (void)dealloc;
- (id)init;
- (id)initWithInterface:(id)arg1;

@end
