/* Generated by RuntimeBrowser.
   Image: /System/Library/Frameworks/UIKit.framework/UIKit
 */

@class UITouch, UILabel, UIKBKeyView, UIView, NSMutableArray, NSString, UIKBBackgroundView;

@interface UIKeyboardPredictionView : UIView  {
    UIKBBackgroundView *m_backgroundView;
    NSMutableArray *m_predictionCells;
    unsigned int m_activeIndex;
    NSString *m_openQuote;
    NSString *m_closeQuote;
    UIView *m_message;
    UILabel *m_messageLabel;
    UIKBKeyView *m_messageKeyView;
    double m_messageShownTime;
    struct CGPoint { 
        float x; 
        float y; 
    } m_initLocation;
    BOOL m_dragging;
    BOOL m_hasLongCandidates;
    BOOL _show;
    UITouch *_activeTouch;
}

@property(retain) UITouch * activeTouch;
@property BOOL show;

+ (float)predictionViewHeight;
+ (unsigned int)numberOfCandidates;
+ (id)activeInstance;
+ (BOOL)enabled;
+ (id)sharedInstance;

- (void)activateCandidateAtPoint:(struct CGPoint { float x1; float x2; })arg1;
- (void)acceptCandidate;
- (unsigned int)predictionCount;
- (void)showMessageWithSize:(struct CGSize { float x1; float x2; })arg1;
- (void)removeMessage;
- (void)acceptCandidateAtCell:(id)arg1;
- (void)deactivateCandidate;
- (void)setActiveCellWithPoint:(struct CGPoint { float x1; float x2; })arg1;
- (void)setActiveCellWithIndex:(unsigned int)arg1;
- (void)setTouchedCellState:(int)arg1;
- (void)releaseMessage;
- (int)maxMessageCount;
- (void)updateQuotes;
- (void)setShow:(BOOL)arg1;
- (void)updateBackgroundWithRenderConfig:(id)arg1;
- (id)activeTouch;
- (void)setActiveTouch:(id)arg1;
- (void)setPredictions:(id)arg1 shouldAcceptTopCandidate:(BOOL)arg2;
- (void)setShowsPredictionView:(BOOL)arg1 animate:(BOOL)arg2;
- (float)height;
- (void)touchesEnded:(id)arg1 withEvent:(id)arg2;
- (void)touchesMoved:(id)arg1 withEvent:(id)arg2;
- (void)touchesBegan:(id)arg1 withEvent:(id)arg2;
- (void)suspend;
- (id)initWithFrame:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (BOOL)show;
- (id)description;
- (void)setFrame:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (void)dealloc;

@end
