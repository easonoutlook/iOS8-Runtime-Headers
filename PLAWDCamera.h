/* Generated by RuntimeBrowser.
   Image: /System/Library/PrivateFrameworks/PowerlogLiteOperators.framework/PowerlogLiteOperators
 */

@class PLOperator, NSMutableSet, PLEntryNotificationOperatorComposition;

@interface PLAWDCamera : PLAWDAuxMetrics  {
    BOOL _prevFrontCameraState;
    BOOL _prevBackCameraState;
    BOOL _prevTorchCameraState;
    PLEntryNotificationOperatorComposition *_cameraEventCallbackFront;
    PLEntryNotificationOperatorComposition *_cameraEventCallbackBack;
    PLEntryNotificationOperatorComposition *_cameraEventCallbackTorch;
    double _frontCameraTimestamp;
    double _backCameraTimestamp;
    double _torchCameraTimestamp;
}

@property(retain) PLEntryNotificationOperatorComposition * cameraEventCallbackFront;
@property(retain) PLEntryNotificationOperatorComposition * cameraEventCallbackBack;
@property(retain) PLEntryNotificationOperatorComposition * cameraEventCallbackTorch;
@property PLOperator * operator;
@property(retain) NSMutableSet * runningMetrics;
@property BOOL prevFrontCameraState;
@property BOOL prevBackCameraState;
@property BOOL prevTorchCameraState;
@property double frontCameraTimestamp;
@property double backCameraTimestamp;
@property double torchCameraTimestamp;

+ (id)entryAggregateDefinitionAwdCamera;
+ (id)entryAggregateDefinitions;
+ (id)getSharedObjWithOperator:(id)arg1;

- (id)cameraEventCallbackTorch;
- (id)cameraEventCallbackBack;
- (id)cameraEventCallbackFront;
- (void)reInitCameraStats;
- (double)torchCameraTimestamp;
- (double)backCameraTimestamp;
- (void)addEntryToCameraTable:(id)arg1 withValue:(double)arg2;
- (double)frontCameraTimestamp;
- (void)setTorchCameraTimestamp:(double)arg1;
- (BOOL)prevTorchCameraState;
- (void)setBackCameraTimestamp:(double)arg1;
- (BOOL)prevBackCameraState;
- (void)setFrontCameraTimestamp:(double)arg1;
- (BOOL)prevFrontCameraState;
- (void)resetCameraTable;
- (void)setPrevTorchCameraState:(BOOL)arg1;
- (void)setPrevBackCameraState:(BOOL)arg1;
- (void)setPrevFrontCameraState:(BOOL)arg1;
- (void)setCameraEventCallbackTorch:(id)arg1;
- (void)handleTorchCameraCallback:(id)arg1;
- (void)setCameraEventCallbackBack:(id)arg1;
- (void)handleBackCameraCallback:(id)arg1;
- (void)setCameraEventCallbackFront:(id)arg1;
- (void)handleFrontCameraCallback:(id)arg1;
- (void)initCameraStats;
- (BOOL)submitDataToAWDServer:(id)arg1 withAwdConn:(id)arg2;
- (void)stopMetricCollection:(id)arg1;
- (void)startMetricCollection:(id)arg1;
- (void).cxx_destruct;

@end
