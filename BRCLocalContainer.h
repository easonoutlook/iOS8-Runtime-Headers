/* Generated by RuntimeBrowser.
   Image: /System/Library/PrivateFrameworks/CloudDocsDaemon.framework/CloudDocsDaemon
 */

/* RuntimeBrowser encountered an ivar type encoding it does not handle. 
   See Warning(s) below.
 */

/* RuntimeBrowser encountered one or more ivar type encodings for a function pointer. 
   The runtime does not encode function signature information.  We use a signature of: 
           "int (*funcName)()",  where funcName might be null. 
 */

@class NSDictionary, BRCServerContainer, BRCOperation, NSMutableSet, CDAttribute, NSString, NSMutableIndexSet, <BRCLocalContainerDelegate>, BRCVersionUploader, PQLNameInjection, NSObject<OS_dispatch_group>, BRContainer, BRCDBThrottle, NSNumber, BRCVersionDownloader, PQLConnection, BRCRelativePath, NSObject<OS_dispatch_source>, NSError, NSArray, BRCAccountSession, NSURL;

@interface BRCLocalContainer : NSObject <BRCContainer> {
    BRCAccountSession *_session;
    BOOL _activated;
    unsigned int _schemaVersion;
    unsigned long long _readerLastRowID;

  /* Unexpected information at end of encoded ivar type: I */
  /* Error parsing encoded ivar type info: AI */
    /* Warning: Unrecognized filer type: 'A' using 'void*' */ void*_activeQueries;


  /* Unexpected information at end of encoded ivar type: I */
  /* Error parsing encoded ivar type info: AI */
    /* Warning: Unrecognized filer type: 'A' using 'void*' */ void*_activeRecursiveQueries;


  /* Unexpected information at end of encoded ivar type: I */
  /* Error parsing encoded ivar type info: AI */
    /* Warning: Unrecognized filer type: 'A' using 'void*' */ void*_activeAliasQueries;

    unsigned long long _maxLostStamp;
    NSNumber *_deepScanStamp;
    unsigned long long _lostHeapKey;

  /* Unexpected information at end of encoded ivar type: I */
  /* Error parsing encoded ivar type info: AI */
    /* Warning: Unrecognized filer type: 'A' using 'void*' */ void*_syncState;

    BRCOperation *_syncUpOperation;
    NSError *_lastSyncUpError;
    BRCOperation *_syncDownOperation;
    NSError *_lastSyncDownError;
    NSObject<OS_dispatch_source> *_syncUpThrottleSource;
    BRCVersionDownloader *_versionDownloader;
    BRCVersionUploader *_versionUploader;
    NSObject<OS_dispatch_group> *_faultingGroup;
    NSMutableIndexSet *_pendingCoordinatedIOs;
    NSMutableSet *_pendingFileCoordinators;
    NSMutableSet *_foregroundXPCClients;
    NSMutableSet *_XPCClientsUsingUbiquity;
    CDAttribute *_coreDuetContainerEventAttribute;
    NSString *_coreDuetAdmissionTicket;
    BOOL _isDuetSetup;
    BOOL _deactivated;
    BOOL _needsSave;
    BOOL _containerMetadataNeedsSyncUp;
    <BRCLocalContainerDelegate> *_delegate;
    PQLConnection *_db;
    unsigned int _state;
    BRCServerContainer *_serverContainer;
    NSString *_containerID;
    NSString *_mangledID;
    BRCRelativePath *_root;
    NSNumber *_fileID;
    NSNumber *_generationID;
    PQLNameInjection *_itemsTable;
    PQLNameInjection *_pkgItemsTable;
    PQLNameInjection *_desiredAdditionsTable;
    PQLNameInjection *_serverItemsTable;
    PQLNameInjection *_serverVersionsTable;
    NSArray *_tableNames;
    BRCDBThrottle *_readerThrottle;
    BRCDBThrottle *_applyThrottle;
    NSArray *_syncThrottles;
    BRContainer *_containerMetadata;
    NSString *_containerMetadataEtag;
    unsigned long long _requestID;
    unsigned long long _syncUpRetryStamp;
}

@property(readonly) unsigned int state;
@property(readonly) BOOL deactivated;
@property(retain) <BRCLocalContainerDelegate> * delegate;
@property(retain) BRCRelativePath * root;
@property(readonly) BRCRelativePath * path;
@property(readonly) BRCRelativePath * documentsPath;
@property(readonly) NSURL * url;
@property(readonly) NSNumber * fileID;
@property(readonly) NSNumber * generationID;
@property(readonly) NSString * mangledID;
@property(retain) BRCServerContainer * serverContainer;
@property(retain) BRCAccountSession * accountSession;
@property(readonly) BRCVersionUploader * versionUploader;
@property(readonly) BRCVersionDownloader * versionDownloader;
@property(readonly) BOOL allowsCellularAccess;
@property(readonly) BRContainer * containerMetadata;
@property(retain) NSString * containerMetadataEtag;
@property BOOL containerMetadataNeedsSyncUp;
@property(readonly) BOOL isForeground;
@property(readonly) NSString * coreDuetAdmissionTicket;
@property(readonly) PQLConnection * db;
@property(readonly) PQLNameInjection * itemsTable;
@property(readonly) PQLNameInjection * pkgItemsTable;
@property(readonly) PQLNameInjection * desiredAdditionsTable;
@property(readonly) PQLNameInjection * serverItemsTable;
@property(readonly) PQLNameInjection * serverVersionsTable;
@property(readonly) BRCDBThrottle * readerThrottle;
@property(readonly) BRCDBThrottle * applyThrottle;
@property(readonly) BOOL hasActiveQueries;
@property(readonly) BOOL hasActiveRecursiveQueries;
@property(readonly) BOOL hasActiveAliasQueries;
@property(readonly) NSNumber * deepScanStamp;
@property(readonly) unsigned long long lostHeapKey;
@property(readonly) unsigned long long currentRequestID;
@property(readonly) unsigned int syncState;
@property(readonly) NSArray * syncThrottles;
@property unsigned long long syncUpRetryStamp;
@property(readonly) BOOL hasUploads;
@property(readonly) BOOL hasDownloads;
@property(readonly) BOOL isGreedy;
@property(readonly) BOOL needsSave;
@property(readonly) NSString * containerID;
@property(readonly) NSString * zoneName;
@property(readonly) NSDictionary * plist;
@property(readonly) NSArray * tableNames;

+ (BOOL)_sql_upgrade_to_version1:(id)arg1;
+ (struct PQLResultSet { Class x1; }*)containersEnumerator:(id)arg1;
+ (id)containerByID:(id)arg1 withDB:(id)arg2;

- (id)root;
- (id)serverVersionsTable;
- (void)setServerContainer:(id)arg1;
- (BOOL)deactivated;
- (void)notifyWhenFaultingIsDone:(id)arg1;
- (BOOL)fileIDIsStaged:(unsigned long long)arg1;
- (unsigned long long)documentCount;
- (unsigned long long)documentEvictableSizeUsage;
- (unsigned long long)documentSizeUsage;
- (BOOL)hasLocalChanges;
- (BOOL)hasUbiquitousDocuments;
- (void)didSyncDownRequestID:(unsigned long long)arg1 recoverFromRank:(id)arg2 caughtUpWithServer:(BOOL)arg3 flushClientTruth:(BOOL)arg4;
- (void)syncDownOperation:(id)arg1 didFinishWithError:(id)arg2;
- (void)didUploadAllItems;
- (id)deepScanStamp;
- (void)itemNeedsReading:(id)arg1 atPath:(id)arg2;
- (struct PQLResultSet { Class x1; }*)evictableDocumentsEnumerator;
- (struct PQLResultSet { Class x1; }*)itemsEnumeratorWithParentID:(id)arg1;
- (struct PQLResultSet { Class x1; }*)stagedItemsEnumerator;
- (struct PQLResultSet { Class x1; }*)bouncedItemsEnumerator;
- (struct PQLResultSet { Class x1; }*)itemsNeedingUploadEnumeratorWithItemIDFilter:(id)arg1;
- (struct PQLResultSet { Class x1; }*)serverItemsEnumerator;
- (struct PQLResultSet { Class x1; }*)itemsEnumerator;
- (BOOL)existsByParentID:(id)arg1 andName:(id)arg2;
- (BOOL)existsByItemID:(id)arg1;
- (id)itemByRowID:(unsigned int)arg1;
- (BOOL)isGreedy;
- (void)removeClientUsingUbiquity:(id)arg1;
- (void)addClientUsingUbiquity:(id)arg1;
- (void)removeForegroundClient:(id)arg1;
- (void)addForegroundClient:(id)arg1;
- (void)unregisterQueryWithAliases:(BOOL)arg1 isRecursive:(BOOL)arg2;
- (id)documentsPath;
- (void)startDownloadItem:(id)arg1 options:(unsigned int)arg2 group:(id)arg3;
- (BOOL)evictItem:(id)arg1 group:(id)arg2 error:(id*)arg3;
- (struct PQLResultSet { Class x1; }*)itemsWithInFlightDiffsEnumerator;
- (void)_buildUnappliedCommandsQueue:(unsigned long long)arg1 maxRank:(unsigned long long)arg2;
- (id)_itemsKilledInSyncUp;
- (id)_unappliedRanks;
- (id)syncThrottles;
- (void)_markRequestIDAcked;
- (BOOL)hasUploads;
- (unsigned long long)backoffBeforeProcessingLostItemWithStamp:(unsigned long long)arg1;
- (id)resolveClashOfAlias:(id)arg1 atPath:(id)arg2 withAlias:(id)arg3 atPath:(id)arg4;
- (BOOL)hasUbiquityClientsConnected;
- (void)startDownloadingItemsUsingGroup:(id)arg1;
- (void)_notifyFrameworkContainersMonitorWithState:(BOOL)arg1;
- (void)tellDuetContainerWasAccessedByBundleID:(id)arg1;
- (void)_setupDuetIfNeeded;
- (void)clearStateBits:(unsigned int)arg1;
- (unsigned int)setSyncStateBits:(unsigned int)arg1;
- (void)setStateBits:(unsigned int)arg1;
- (void)_activateState:(unsigned int)arg1 origState:(unsigned int)arg2;
- (void)setNeedsSave:(BOOL)arg1;
- (unsigned long long)currentRequestID;
- (void)syncUpOperation:(id)arg1 didFinishWithError:(id)arg2;
- (unsigned long long)nextSyncUpRequestID;
- (void)setSyncUpRetryStamp:(unsigned long long)arg1;
- (unsigned int)clearSyncStateBits:(unsigned int)arg1;
- (void)markLatestSyncRequestFailed;
- (void)didDownloadAllItems;
- (struct PQLResultSet { Class x1; }*)itemsNeedingDownloadEnumeratorWithItemIDFilter:(id)arg1;
- (BOOL)hasDownloads;
- (void)signalAdditionsNeedsApply;
- (BOOL)handleResetErrorIfNeeded:(id)arg1;
- (id)desiredThumbnailForItemID:(id)arg1;
- (id)desiredLoserForItemID:(id)arg1 etag:(id)arg2;
- (struct PQLResultSet { Class x1; }*)losersNeedingDownloadEnumeratorForItemID:(id)arg1;
- (void)setContainerID:(id)arg1;
- (id)tableNames;
- (struct PQLResultSet { Class x1; }*)itemsEnumeratorWithDB:(id)arg1;
- (void)_checkResultSetIsEmpty:(id)arg1 logToFile:(struct __sFILE { char *x1; int x2; int x3; short x4; short x5; struct __sbuf { char *x_6_1_1; int x_6_1_2; } x6; int x7; void *x8; int (*x9)(); int (*x10)(); int (*x11)(); int (*x12)(); struct __sbuf { char *x_13_1_1; int x_13_1_2; } x13; struct __sFILEX {} *x14; int x15; unsigned char x16[3]; unsigned char x17[1]; struct __sbuf { char *x_18_1_1; int x_18_1_2; } x18; int x19; long long x20; }*)arg2 reason:(id)arg3 result:(BOOL*)arg4;
- (BOOL)_dumpChildrenOfDirectory:(id)arg1 toContext:(id)arg2 visitedItems:(id)arg3 depth:(int)arg4 error:(id*)arg5;
- (void)updateWithPlist:(id)arg1;
- (id)initWithDB:(id)arg1;
- (id)plist;
- (void)_updateContainerMetadataFromRecord:(id)arg1;
- (id)zoneName;
- (void)scheduleSyncDown;
- (BOOL)isForeground;
- (void)addSyncDownOperationToQueue:(id)arg1;
- (void)addSyncUpOperationToQueue:(id)arg1;
- (void)setContainerMetadataNeedsSyncUp:(BOOL)arg1;
- (void)setContainerMetadataEtag:(id)arg1;
- (id)containerMetadataEtag;
- (unsigned long long)syncUpRetryStamp;
- (void)retriedUnappliedRank:(unsigned long long)arg1;
- (BOOL)hasUnappliedCommands;
- (id)nextUnappliedBatch:(unsigned int)arg1 now:(unsigned long long)arg2 next:(long long*)arg3;
- (struct PQLResultSet { Class x1; }*)liveItemIDsWithStagedAdditionsEnumerator;
- (id)nextLostItemIDWithBackoff:(unsigned long long*)arg1 now:(unsigned long long)arg2;
- (BOOL)hasItemsPendingRead;
- (long long)nextReadRetryTimestamp;
- (id)coordinatorForItem:(id)arg1 forRead:(BOOL)arg2;
- (id)nextItemToRead;
- (id)containerMetadata;
- (id)_initWithContainerID:(id)arg1 path:(id)arg2 db:(id)arg3 accountSession:(id)arg4;
- (void)activateWithServerContainer:(id)arg1 forCreation:(BOOL)arg2;
- (void)scheduleContainerMetadataSyncUp;
- (BOOL)containerMetadataNeedsSyncUp;
- (void)setRoot:(id)arg1;
- (BOOL)upgradeTables;
- (unsigned int)syncState;
- (BOOL)containerFinishedReset;
- (BOOL)startReset;
- (unsigned long long)lostHeapKey;
- (BOOL)changedAtRelativePath:(id)arg1;
- (void)updateFromFSAtPath:(id)arg1;
- (id)initFromPQLResultSet:(id)arg1 error:(id*)arg2;
- (void)signalNeedsToApplyChanges;
- (void)removeUnappliedRank:(unsigned long long)arg1;
- (void)postponeUnappliedRank:(unsigned long long)arg1;
- (void)scheduleRead;
- (void)didMarkItemNeedsDownload;
- (void)rescheduleUnappliedRank:(unsigned long long)arg1 forFaultCreation:(BOOL)arg2;
- (unsigned int)markChildrenLostForItemID:(id)arg1;
- (void)didMarkItemRejected;
- (void)didMarkItemNeedsUpload;
- (void)didUpdateCurrentVersionOfItem:(id)arg1;
- (void)reschedulePostponedRanks;
- (void)scheduleSyncUp;
- (void)didFindLostItem:(id)arg1;
- (BOOL)itemHasChildren:(id)arg1;
- (BOOL)deleteReservedChildren:(id)arg1;
- (BOOL)hasActiveRecursiveQueries;
- (BOOL)hasActiveQueries;
- (BOOL)hasActiveAliasQueries;
- (void)serverDidAckAliasTargetDeletion:(id)arg1;
- (id)desiredAdditionsTable;
- (void)rescheduleUnappliedItemID:(id)arg1 forFaultCreation:(BOOL)arg2;
- (BOOL)serverDidAckAliasTarget:(id)arg1;
- (id)pkgItemsTable;
- (void)scheduleDeepScan;
- (id)serverItemsTable;
- (unsigned long long)allocateLostStampAddingBackoff:(BOOL)arg1;
- (long long)throttleHashWithItemID:(id)arg1;
- (BOOL)printStatusLoggingToFile:(struct __sFILE { char *x1; int x2; int x3; short x4; short x5; struct __sbuf { char *x_6_1_1; int x_6_1_2; } x6; int x7; void *x8; int (*x9)(); int (*x10)(); int (*x11)(); int (*x12)(); struct __sbuf { char *x_13_1_1; int x_13_1_2; } x13; struct __sFILEX {} *x14; int x15; unsigned char x16[3]; unsigned char x17[1]; struct __sbuf { char *x_18_1_1; int x_18_1_2; } x18; int x19; long long x20; }*)arg1 withDB:(id)arg2;
- (BOOL)validateStructureLoggingToFile:(struct __sFILE { char *x1; int x2; int x3; short x4; short x5; struct __sbuf { char *x_6_1_1; int x_6_1_2; } x6; int x7; void *x8; int (*x9)(); int (*x10)(); int (*x11)(); int (*x12)(); struct __sbuf { char *x_13_1_1; int x_13_1_2; } x13; struct __sFILEX {} *x14; int x15; unsigned char x16[3]; unsigned char x17[1]; struct __sbuf { char *x_18_1_1; int x_18_1_2; } x18; int x19; long long x20; }*)arg1 withDB:(id)arg2;
- (BOOL)validateItemsLoggingToFile:(struct __sFILE { char *x1; int x2; int x3; short x4; short x5; struct __sbuf { char *x_6_1_1; int x_6_1_2; } x6; int x7; void *x8; int (*x9)(); int (*x10)(); int (*x11)(); int (*x12)(); struct __sbuf { char *x_13_1_1; int x_13_1_2; } x13; struct __sFILEX {} *x14; int x15; unsigned char x16[3]; unsigned char x17[1]; struct __sbuf { char *x_18_1_1; int x_18_1_2; } x18; int x19; long long x20; }*)arg1 withDB:(id)arg2;
- (struct PQLResultSet { Class x1; }*)itemsEnumeratorParentedTo:(id)arg1 notParentedTo:(id)arg2 rankMin:(unsigned long long)arg3 rankMax:(unsigned long long)arg4 shouldIncludeFolders:(BOOL)arg5 shouldIncludeAliases:(BOOL)arg6 count:(unsigned long long)arg7;
- (struct PQLResultSet { Class x1; }*)itemsEnumeratorChildOf:(id)arg1 rankMin:(unsigned long long)arg2 rankMax:(unsigned long long)arg3 count:(unsigned long long)arg4;
- (id)generationID;
- (void)registerQueryWithAliases:(BOOL)arg1 isRecursive:(BOOL)arg2;
- (id)mangledID;
- (id)reservedItemByParentID:(id)arg1 andDisplayName:(id)arg2;
- (id)faultByParentID:(id)arg1 andDisplayName:(id)arg2;
- (id)directoryItemIDByFileID:(unsigned long long)arg1;
- (id)fileIDForDirectoryItemID:(id)arg1 withDB:(id)arg2;
- (id)itemByDocumentID:(unsigned int)arg1;
- (id)itemByFileID:(unsigned long long)arg1;
- (id)itemByParentID:(id)arg1 andName:(id)arg2;
- (id)serverItemByParentID:(id)arg1 andName:(id)arg2;
- (id)serverItemByItemID:(id)arg1;
- (id)parentIDForPath:(id)arg1;
- (id)fileID;
- (unsigned int)countOfItemsWithPendingChanges;
- (id)readerThrottle;
- (id)applyThrottle;
- (BOOL)dumpTablesToContext:(id)arg1 error:(id*)arg2;
- (id)db;
- (BOOL)saveToDB;
- (BOOL)needsSave;
- (id)itemsTable;
- (id)itemByItemID:(id)arg1;
- (id)versionUploader;
- (id)versionDownloader;
- (void)setAccountSession:(id)arg1;
- (id)coreDuetAdmissionTicket;
- (id)containerID;
- (BOOL)allowsCellularAccess;
- (id)accountSession;
- (id)serverContainer;
- (void).cxx_destruct;
- (void)reset;
- (void)deactivate;
- (id)url;
- (unsigned int)state;
- (id)delegate;
- (unsigned int)hash;
- (BOOL)isEqual:(id)arg1;
- (id)path;
- (id)description;
- (void)setDelegate:(id)arg1;

@end
