/* Generated by RuntimeBrowser.
   Image: /System/Library/PrivateFrameworks/Stocks.framework/Stocks
 */

@class Exchange, StockChartData, NSString, StockDataSource, NSURL;

@interface Stock : NSObject  {
    StockChartData *_chartDataArray[9];
    NSString *_symbol;
    NSString *_companyName;
    NSString *_shortCompanyName;
    Exchange *_exchange;
    NSString *_price;
    NSString *_change;
    NSString *_symbolType;
    NSString *_open;
    NSString *_high;
    NSString *_low;
    NSString *_yearHigh;
    NSString *_yearLow;
    NSString *_volume;
    NSString *_averageVolume;
    NSString *_marketcap;
    NSString *_peRatio;
    NSString *_dividendYield;
    unsigned int _pricePrecision;
    NSURL *_infoURL;
    StockDataSource *_dataSource;
    double _timeQuoteLastUpdated;
    double _timeMetadataLastUpdated;
}

@property(retain) NSString * symbol;
@property(retain) NSString * companyName;
@property(retain) NSString * shortCompanyName;
@property(retain) Exchange * exchange;
@property(retain) NSString * price;
@property(retain) NSString * change;
@property(retain) NSString * symbolType;
@property(retain) NSString * open;
@property(retain) NSString * high;
@property(retain) NSString * low;
@property(retain) NSString * yearHigh;
@property(retain) NSString * yearLow;
@property(retain) NSString * volume;
@property(retain) NSString * averageVolume;
@property(retain) NSString * marketcap;
@property(retain) NSString * peRatio;
@property(retain) NSString * dividendYield;
@property(readonly) unsigned int pricePrecision;
@property(retain) NSURL * infoURL;
@property(retain) StockDataSource * dataSource;
@property double timeQuoteLastUpdated;
@property double timeMetadataLastUpdated;

+ (void)resetLocale;
+ (id)localizedMagnitudeAbbreviatedStringWithString:(id)arg1;
+ (BOOL)localeUsesASCIIDigits;
+ (id)formattedStringForString:(id)arg1 fractionDigits:(unsigned int)arg2 percentStyle:(BOOL)arg3;
+ (id)urlForStock:(id)arg1;
+ (id)_potentiallyAbsentKeys;
+ (id)localizedMagnitudeAbbreviatedStringWithString:(id)arg1 fractionDigits:(unsigned int)arg2;
+ (id)formattedStringForNumber:(id)arg1 fractionDigits:(unsigned int)arg2 percentStyle:(BOOL)arg3;
+ (id)postfixCharacterForMagnitude:(unsigned int)arg1 unitMagnitude:(unsigned int*)arg2;
+ (id)formattedStringForString:(id)arg1 fractionDigits:(unsigned int)arg2 percentStyle:(BOOL)arg3 droppingFractionDigitsIfLengthExceeds:(unsigned int)arg4;
+ (id)BlankValueString;
+ (id)formattedStringForNumber:(id)arg1 fractionDigits:(unsigned int)arg2 percentStyle:(BOOL)arg3 groupingSeparators:(BOOL)arg4;
+ (id)formattedStringForNumber:(id)arg1 fractionDigits:(unsigned int)arg2 percentStyle:(BOOL)arg3 groupingSeparators:(BOOL)arg4 droppingFractionDigitsIfLengthExceeds:(unsigned int)arg5;
+ (id)_formattedStringForNumber:(id)arg1 fractionDigits:(unsigned int)arg2 percentStyle:(BOOL)arg3 groupingSeparators:(BOOL)arg4;
+ (id)PercentFormatter;
+ (id)urlForStockSymbol:(id)arg1;
+ (id)percentSymbol;

- (void)setInfoURL:(id)arg1;
- (id)infoURL;
- (void)setOpen:(id)arg1;
- (id)open;
- (void)resetLocale;
- (void)setPrice:(id)arg1;
- (void)setTimeMetadataLastUpdated:(double)arg1;
- (double)timeMetadataLastUpdated;
- (void)setTimeQuoteLastUpdated:(double)arg1;
- (double)timeQuoteLastUpdated;
- (unsigned int)pricePrecision;
- (id)marketcap;
- (id)averageVolume;
- (id)yearLow;
- (id)yearHigh;
- (id)symbolType;
- (id)shortCompanyName;
- (void)updateMetadataWithDictionary:(id)arg1 forTime:(double)arg2;
- (void)updateQuoteWithDictionary:(id)arg1 forTime:(double)arg2;
- (id)chartDataForInterval:(int)arg1;
- (BOOL)doesMetadataNeedUpdate;
- (BOOL)doesQuoteNeedUpdate;
- (BOOL)isMetadataStale;
- (BOOL)isQuoteStale;
- (id)formattedChangePercent:(BOOL)arg1 includePercentSign:(BOOL)arg2;
- (BOOL)changeIsZero;
- (BOOL)changeIsNegative;
- (BOOL)isIndex;
- (double)_updateInterval;
- (BOOL)marketIsOpen;
- (id)formattedChangePercent:(BOOL)arg1;
- (void)setChartData:(id)arg1 forInterval:(int)arg2;
- (void)populateFromDictionary:(id)arg1;
- (void)_updatePricePrecision;
- (void)setSymbolType:(id)arg1;
- (void)setMarketcap:(id)arg1;
- (void)setAverageVolume:(id)arg1;
- (void)setYearLow:(id)arg1;
- (void)setYearHigh:(id)arg1;
- (void)setShortCompanyName:(id)arg1;
- (id)listName;
- (void)setPeRatio:(id)arg1;
- (id)peRatio;
- (void)setLow:(id)arg1;
- (id)low;
- (void)setHigh:(id)arg1;
- (id)high;
- (void)setExchange:(id)arg1;
- (id)exchange;
- (void)setDividendYield:(id)arg1;
- (id)dividendYield;
- (id)companyName;
- (void)setCompanyName:(id)arg1;
- (void)setVolume:(id)arg1;
- (id)volume;
- (void)setChange:(id)arg1;
- (id)change;
- (void).cxx_destruct;
- (void)setSymbol:(id)arg1;
- (id)symbol;
- (id)initWithDictionary:(id)arg1;
- (id)dataSource;
- (unsigned int)hash;
- (BOOL)isEqual:(id)arg1;
- (void)setDataSource:(id)arg1;
- (id)archiveDictionary;
- (id)description;
- (void)dealloc;
- (id)price;
- (id)formattedPrice;

@end
