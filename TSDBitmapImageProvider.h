/* Generated by RuntimeBrowser.
   Image: /System/Library/PrivateFrameworks/iWorkImport.framework/iWorkImport
 */

@class NSObject<OS_dispatch_semaphore>;

@interface TSDBitmapImageProvider : TSDImageProvider  {
    struct CGImageSource { } *mImageSource;
    struct CGImage { } *mImage;
    struct CGSize { 
        float width; 
        float height; 
    } mNaturalSize;
    int mOrientation;
    BOOL mIsOpaque;
    BOOL mIsValid;
    unsigned int mDPI;
    NSObject<OS_dispatch_semaphore> *mImageLock;
    long mCheckIfValidToken;
    struct CGImage { } *mHalfSizeImage;
    struct CGImage { } *mQuarterSizeImage;
}

+ (void)initialize;
+ (void)clearCacheForData:(id)arg1;
+ (struct CGSize { float x1; float x2; })naturalSizeForImageData:(id)arg1;
+ (id)TSUImageForImageData:(id)arg1;
+ (struct CGImageSource { }*)p_newImageSourceFromFilePath:(id)arg1;
+ (id)p_cacheStringForData:(id)arg1;
+ (struct CGImageSource { }*)p_newImageSourceFromCacheForData:(id)arg1 withFilenameSuffix:(id)arg2;
+ (struct CGImage { }*)CGImageForImageData:(id)arg1;

- (BOOL)hasFlushableContent;
- (struct CGSize { float x1; float x2; })naturalSize;
- (BOOL)isOpaque;
- (BOOL)isValid;
- (int)orientation;
- (void)flush;
- (void)dealloc;
- (struct CGImageSource { }*)CGImageSource;
- (struct CGImage { }*)p_resampledImageOfSizeType:(int)arg1;
- (struct CGImage { }*)CGImageForSize:(struct CGSize { float x1; float x2; })arg1 lowQuality:(BOOL)arg2;
- (void)p_configureOrientationAndSizeFromImageSource:(struct CGImageSource { }*)arg1 andImage:(struct CGImage { }*)arg2;
- (struct CGImageSource { }*)p_newCGImageSource;
- (unsigned int)imageDPI;
- (struct CGImageSource { }*)p_newCGImageSourceForTemporaryUse;
- (struct CGImage { }*)p_loadOrCreateResampledImageWithScale:(unsigned int)arg1 andCGImage:(struct CGImage {}**)arg2;
- (struct CGImageSource { }*)p_newImageOfSize:(struct CGSize { float x1; float x2; })arg1 andWriteToCacheWithSuffix:(id)arg2;
- (void)p_loadFullSizedImageIfNecessary;
- (struct CGImage { }*)p_newImageFromSource:(struct CGImageSource { }*)arg1;
- (void)p_loadSourceRefIfNecessary;
- (void)p_loadImageMetadata;
- (void)i_commonInit;
- (struct CGSize { float x1; float x2; })dpiAdjustedFillSize;
- (struct CGSize { float x1; float x2; })dpiAdjustedNaturalSize;
- (struct CGImage { }*)CGImageForNaturalSize;
- (struct CGImage { }*)CGImageForSize:(struct CGSize { float x1; float x2; })arg1 inContext:(struct CGContext { }*)arg2 orLayer:(id)arg3;
- (void)drawImageInContext:(struct CGContext { }*)arg1 rect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg2;

@end
