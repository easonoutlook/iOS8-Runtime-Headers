/* Generated by RuntimeBrowser.
   Image: /System/Library/PrivateFrameworks/iWorkImport.framework/iWorkImport
 */

@class TNSheet, TNPageContentLayout, TSWPPadding, TNPageController;

@interface TNPageLayout : TSWPPageLayout <TSWPLayoutParent, TSWPColumnMetrics, TSWPStorageObserver> {
    BOOL mIsChildLayoutsValid;
    struct { 
        unsigned short row; 
        unsigned char column; 
        unsigned char reserved; 
    } mPageCoordinate;
    TNPageController *mPageController;
    TNPageContentLayout *mContentLayout;
    BOOL mIsPlaceholder;
    TNSheet *mSheet;
}

@property struct { unsigned short x1; unsigned char x2; unsigned char x3; } pageCoordinate;
@property TNPageController * pageController;
@property(readonly) struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; } pageBounds;
@property(readonly) struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; } contentFrame;
@property(retain) TNPageContentLayout * contentLayout;
@property(getter=isPlaceholder) BOOL placeholder;
@property(retain) TNSheet * sheet;
@property(readonly) struct CGSize { float x1; float x2; } adjustedInsets;
@property(readonly) TSWPPadding * layoutMargins;
@property(readonly) unsigned int columnCount;
@property(readonly) BOOL alwaysStartsNewTarget;
@property(readonly) BOOL shrinkTextToFit;
@property(readonly) BOOL columnsAreLeftToRight;
@property(readonly) float textScaleFactor;

+ (id)pageLayoutWithPageController:(id)arg1 pageCoordinate:(struct { unsigned short x1; unsigned char x2; unsigned char x3; })arg2;

- (id)sheet;
- (void)setSheet:(id)arg1;
- (void)addChild:(id)arg1;
- (void)setChildren:(id)arg1;
- (BOOL)isPlaceholder;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })contentFrame;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })pageBounds;
- (unsigned int)pageNumber;
- (void)setPageController:(id)arg1;
- (id)pageController;
- (unsigned int)columnCount;
- (unsigned int)pageCount;
- (void)setPlaceholder:(BOOL)arg1;
- (id)description;
- (void)dealloc;
- (void)setContentLayout:(id)arg1;
- (BOOL)containsLayoutForInfo:(id)arg1;
- (void)performBlockForEachHeaderFooterLayout:(id)arg1;
- (id)p_pageInfo;
- (id)contentLayout;
- (struct { unsigned short x1; unsigned char x2; unsigned char x3; })pageCoordinate;
- (void)setPageCoordinate:(struct { unsigned short x1; unsigned char x2; unsigned char x3; })arg1;
- (id)initWithPageController:(id)arg1 pageCoordinate:(struct { unsigned short x1; unsigned char x2; unsigned char x3; })arg2;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })bodyRect;
- (id)headerFooterProvider;
- (void)storage:(id)arg1 didChangeRange:(struct _NSRange { unsigned int x1; unsigned int x2; })arg2 delta:(int)arg3 broadcastKind:(int)arg4;
- (Class)repClassForTextLayout:(id)arg1;
- (id)dependentsOfTextLayout:(id)arg1;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })autosizedFrameForTextLayout:(id)arg1 textSize:(struct CGSize { float x1; float x2; })arg2;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })nonAutosizedFrameForTextLayout:(id)arg1;
- (int)verticalAlignmentForTextLayout:(id)arg1;
- (unsigned int)autosizeFlagsForTextLayout:(id)arg1;
- (float)textScaleFactor;
- (BOOL)columnsAreLeftToRight;
- (BOOL)shrinkTextToFit;
- (BOOL)alwaysStartsNewTarget;
- (id)layoutMargins;
- (float)positionForColumnIndex:(unsigned int)arg1 bodyWidth:(float)arg2 outWidth:(float*)arg3 outGap:(float*)arg4;
- (float)gapForColumnIndex:(unsigned int)arg1 bodyWidth:(float)arg2;
- (float)widthForColumnIndex:(unsigned int)arg1 bodyWidth:(float)arg2;
- (void)invalidateForAutosizingTextLayout:(id)arg1;
- (struct CGSize { float x1; float x2; })adjustedInsets;
- (BOOL)textIsVertical;
- (void)willBeRemovedFromLayoutController:(id)arg1;
- (void)willBeAddedToLayoutController:(id)arg1;
- (void)parentDidChange;
- (id)dependentLayouts;
- (id)computeLayoutGeometry;
- (void)invalidateSize;
- (Class)repClassOverride;

@end
