/* Generated by RuntimeBrowser.
   Image: /System/Library/PrivateFrameworks/SpringBoardUI.framework/SpringBoardUI
 */

@class UIImage;

@interface SBUIControlCenterSlider : _UIDynamicSlider <SBUIControlCenterControl> {
    float _valueImagePadding;
    BOOL _customTrackImage;
    BOOL _highlightMinimumTrackImage;
    BOOL _shouldHighlightValueImagesWhileAdjusting;
    BOOL _adjusting;
    UIImage *_minValueMaskImage;
    UIImage *_maxValueMaskImage;
    UIImage *_trackMaskImage;
    struct UIEdgeInsets { 
        float top; 
        float left; 
        float bottom; 
        float right; 
    } _trackCapInsets;
}

@property BOOL highlightMinimumTrackImage;
@property BOOL shouldHighlightValueImagesWhileAdjusting;
@property(getter=isAdjusting) BOOL adjusting;
@property(retain) UIImage * minValueMaskImage;
@property(retain) UIImage * maxValueMaskImage;
@property(retain) UIImage * trackMaskImage;
@property struct UIEdgeInsets { float x1; float x2; float x3; float x4; } trackCapInsets;

+ (id)_knobImage;
+ (id)_maxTrackImage;
+ (id)_minTrackImageForState:(int)arg1;
+ (id)_createTrackImageForState:(int)arg1;
+ (void)controlAppearanceDidChangeForState:(int)arg1;
+ (id)_trackImage;
+ (void)initialize;

- (BOOL)isAdjusting;
- (void)setShouldHighlightValueImagesWhileAdjusting:(BOOL)arg1;
- (BOOL)highlightMinimumTrackImage;
- (void)setAdjusting:(BOOL)arg1;
- (void)_configureControlStates;
- (float)_valueImagePadding;
- (float)_naturalTrackWidth;
- (float)_valueImageCenterTrackOffset;
- (void)_updateMaximumValueImage;
- (void)_updateMinimumValueImage;
- (void)_updateMaximumTrackImage;
- (void)setTrackCapInsets:(struct UIEdgeInsets { float x1; float x2; float x3; float x4; })arg1;
- (void)_setTrackImage:(id)arg1;
- (void)_updateMinimumTrackImage;
- (struct UIEdgeInsets { float x1; float x2; float x3; float x4; })_trackInsetsWithShadow:(BOOL)arg1;
- (struct UIEdgeInsets { float x1; float x2; float x3; float x4; })trackCapInsets;
- (void)_updateValueImageView:(id)arg1 fadeToImage:(id)arg2;
- (BOOL)shouldHighlightValueImagesWhileAdjusting;
- (id)maxValueMaskImage;
- (id)_valueImageForImage:(id)arg1 state:(int)arg2;
- (id)minValueMaskImage;
- (void)setMaxValueMaskImage:(id)arg1;
- (void)setMinValueMaskImage:(id)arg1;
- (void)setTrackMaskImage:(id)arg1;
- (void)controlConfigurationDidChangeForState:(int)arg1;
- (void)controlAppearanceDidChangeForState:(int)arg1;
- (void)setHighlightMinimumTrackImage:(BOOL)arg1;
- (id)trackMaskImage;
- (void)setTrackImage:(id)arg1;
- (void)setMaximumValueImage:(id)arg1;
- (void)setMinimumValueImage:(id)arg1;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })maximumValueImageRectForBounds:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })minimumValueImageRectForBounds:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })trackRectForBounds:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (struct CGSize { float x1; float x2; })sizeThatFits:(struct CGSize { float x1; float x2; })arg1;
- (void)layoutSubviews;
- (id)initWithFrame:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (void)dealloc;

@end
