/* Generated by RuntimeBrowser.
   Image: /System/Library/PrivateFrameworks/iWorkImport.framework/iWorkImport
 */

@class TSDGLTextureInfo, KNBuildFlameSystem, TSDGLShader, TSDGLDataBuffer;

@interface KNBuildFlame : KNAnimationEffect <KNFrameBuildAnimator> {
    KNBuildFlameSystem *mFlameSystem;
    TSDGLShader *mFlameShader;
    TSDGLTextureInfo *mFlameTexture;
    struct CATransform3D { 
        float m11; 
        float m12; 
        float m13; 
        float m14; 
        float m21; 
        float m22; 
        float m23; 
        float m24; 
        float m31; 
        float m32; 
        float m33; 
        float m34; 
        float m41; 
        float m42; 
        float m43; 
        float m44; 
    } mBaseTransform;
    TSDGLShader *mObjectShader;
    TSDGLDataBuffer *mObjectDataBuffer;
    struct CGRect { 
        struct CGPoint { 
            float x; 
            float y; 
        } origin; 
        struct CGSize { 
            float width; 
            float height; 
        } size; 
    } mDrawableFrame;
    struct CGRect { 
        struct CGPoint { 
            float x; 
            float y; 
        } origin; 
        struct CGSize { 
            float width; 
            float height; 
        } size; 
    } mFrameRect;
    TSDGLShader *mFBOShader;
    TSDGLDataBuffer *mFBODataBuffer;
    unsigned int mFBOTexture;
    unsigned int mFramebuffer;
}

+ (id)animationName;
+ (id)defaultAttributes;
+ (BOOL)requiresSingleTexturePerStage;
+ (id)thumbnailImageNameForType:(int)arg1;
+ (void)fillLocalizedDirectionMenu:(id)arg1 forType:(int)arg2;
+ (unsigned int)directionType;
+ (id)localizedMenuString:(int)arg1;
+ (id)supportedTypes;
+ (int)animationCategory;
+ (id)animationFilter;

- (void)dealloc;
- (void)animationDidEndForTextures:(id)arg1 forBuild:(id)arg2;
- (void)p_setupFBOWithSize:(struct CGSize { float x1; float x2; })arg1;
- (id)p_flameSystemForTR:(id)arg1 build:(id)arg2;
- (struct CATransform3D { float x1; float x2; float x3; float x4; float x5; float x6; float x7; float x8; float x9; float x10; float x11; float x12; float x13; float x14; float x15; float x16; })p_orthoTransformWithScale:(float)arg1 offset:(struct CGPoint { float x1; float x2; })arg2;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })frameOfEffectWithFrame:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1 context:(id)arg2;
- (void)renderFrameWithContext:(id)arg1;
- (void)animationWillBeginWithContext:(id)arg1;

@end
