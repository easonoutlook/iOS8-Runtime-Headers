/* Generated by RuntimeBrowser.
   Image: /System/Library/PrivateFrameworks/FrontBoard.framework/FrontBoard
 */

@class FBSceneManager, FBSDisplay, <FBSceneClientProvider>, FBSSceneSettings, FBSSceneTransitionContext, FBSSceneClientSettings, NSString, FBScene;

@interface FBUpdateSceneTransaction : FBTransaction <FBSceneManagerObserver> {
    FBSceneManager *_sceneManager;
    NSString *_sceneID;
    FBSDisplay *_display;
    FBSSceneSettings *_newSceneSettings;
    FBSSceneTransitionContext *_transitionContext;
    FBSSceneClientSettings *_clientSettings;
    <FBSceneClientProvider> *_clientProvider;
    unsigned int _transactionID;
    BOOL _waitsForSceneCommit;
    BOOL _destroyed;
    id _context;
}

@property(retain,readonly) FBScene * scene;
@property(retain,readonly) FBSDisplay * display;
@property(retain,readonly) NSString * sceneIdentifier;
@property(retain,readonly) FBSSceneSettings * newSettings;
@property(retain,readonly) FBSSceneTransitionContext * transitionContext;
@property(readonly) BOOL destroyed;
@property(retain) id context;
@property BOOL waitsForSceneCommit;


- (id)_customizedDescriptionProperties;
- (void)_didInterruptWithReason:(id)arg1;
- (BOOL)_canBeInterrupted;
- (void)_didComplete;
- (void)_begin;
- (void)setWaitsForSceneCommit:(BOOL)arg1;
- (BOOL)waitsForSceneCommit;
- (BOOL)destroyed;
- (id)newSettings;
- (id)sceneIdentifier;
- (id)initWithSceneToCreate:(id)arg1 display:(id)arg2 newSettings:(id)arg3 transitionContext:(id)arg4 clientProvider:(id)arg5 initialClientSettings:(id)arg6;
- (id)initWithSceneToUpdate:(id)arg1 newSettings:(id)arg2 transitionContext:(id)arg3;
- (void)_enumerateUpdateSceneObserversWithBlock:(id)arg1;
- (id)_initWithSceneIdentifier:(id)arg1 display:(id)arg2 newSettings:(id)arg3 transitionContext:(id)arg4 clientProvider:(id)arg5 initialClientSettings:(id)arg6;
- (void)sceneManager:(id)arg1 didDestroyScene:(id)arg2;
- (void)sceneManager:(id)arg1 willDestroyScene:(id)arg2;
- (void)sceneManager:(id)arg1 didCommitUpdateForScene:(id)arg2 transactionID:(unsigned int)arg3;
- (void)sceneManager:(id)arg1 willCommitUpdateForScene:(id)arg2 transactionID:(unsigned int)arg3;
- (void)sceneManager:(id)arg1 willUpdateScene:(id)arg2 withSettings:(id)arg3 transitionContext:(id)arg4;
- (void)sceneManager:(id)arg1 didCreateScene:(id)arg2 withClient:(id)arg3;
- (void)addObserver:(id)arg1;
- (void)setContext:(id)arg1;
- (void)removeObserver:(id)arg1;
- (id)display;
- (id)transitionContext;
- (id)scene;
- (id)context;
- (void)dealloc;

@end
