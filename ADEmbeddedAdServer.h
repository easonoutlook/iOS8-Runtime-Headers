/* Generated by RuntimeBrowser.
   Image: /System/Library/PrivateFrameworks/iAdDeveloper.framework/iAdDeveloper
 */

@class NSArray, NSString, <ADEmbeddedAdServerDelegate>, HTSHTTPServer, NSDictionary, NSMutableDictionary;

@interface ADEmbeddedAdServer : NSObject <HTSHTTPServerDelegate> {
    HTSHTTPServer *_server;
    NSMutableDictionary *_authTokens;
    struct __FSEventStream { } *_stream;
    BOOL _defaultsToNoQualifiedAds;
    BOOL _alwaysRegenerateWebArchives;
    <ADEmbeddedAdServerDelegate> *_delegate;
    NSString *_publicURLRoot;
    NSDictionary *_defaultAdData;
    NSString *_adPath;
    NSArray *_adManifests;
}

@property <ADEmbeddedAdServerDelegate> * delegate;
@property(readonly) unsigned short port;
@property(readonly) NSString * urlString;
@property(copy) NSString * publicURLRoot;
@property(copy) NSString * adPath;
@property BOOL alwaysRegenerateWebArchives;
@property(retain) NSDictionary * defaultAdData;
@property BOOL defaultsToNoQualifiedAds;
@property BOOL digestAuthenticationEnabled;
@property double latency;
@property double latencyStddev;
@property double kbps;
@property double bandwidthStddev;
@property int cacheMaxAge;
@property BOOL pipeliningEnabled;
@property(readonly) unsigned long long totalBytesWritten;
@property(retain) NSArray * adManifests;

+ (id)manifestForAdAtURL:(id)arg1;
+ (id)creativesForAdBundleAtURL:(id)arg1 matchingRequest:(id)arg2;
+ (BOOL)adBundleAtURL:(id)arg1 matchesRequest:(id)arg2;

- (void)setAlwaysRegenerateWebArchives:(BOOL)arg1;
- (BOOL)alwaysRegenerateWebArchives;
- (id)adPath;
- (void)setDefaultAdData:(id)arg1;
- (id)defaultAdData;
- (void)setDefaultsToNoQualifiedAds:(BOOL)arg1;
- (BOOL)defaultsToNoQualifiedAds;
- (void)setPublicURLRoot:(id)arg1;
- (id)publicURLRoot;
- (id)initWithPort:(unsigned short)arg1 adPath:(id)arg2;
- (id)_adDataForPath:(id)arg1 creative:(id)arg2 error:(id*)arg3;
- (id)_webArchiveFilenameForDirectory:(id)arg1 withBaseURL:(id)arg2;
- (id)_integerColorFromStringColor:(id)arg1;
- (id)_webResourceForPath:(id)arg1 url:(id)arg2;
- (id)_webResourcesInDirectory:(id)arg1 baseURL:(id)arg2;
- (id)adManifests;
- (id)_defaultResponseForBatchRequest:(id)arg1;
- (id)adDataForAdBundleAtPath:(id)arg1 creative:(id)arg2 allowWebArchive:(BOOL)arg3;
- (id)_handleThirdPartySegmentUpdateRequest:(id)arg1 message:(id)arg2;
- (id)_handleAdSlotRequest:(id)arg1 message:(id)arg2;
- (id)_handleLogPassEventRequest:(id)arg1 message:(id)arg2;
- (id)_handleLogStationClientEventRequest:(id)arg1 message:(id)arg2;
- (id)_handleLogAggregateMetricsRequest:(id)arg1 message:(id)arg2;
- (id)_handleLogTileImpressionEventRequest:(id)arg1 message:(id)arg2;
- (id)_handleListeningPresenceEventsRequest:(id)arg1 message:(id)arg2;
- (id)_handleMescalSignSAPSetupRequest:(id)arg1 message:(id)arg2;
- (id)_handleMescalSignSAPSetupCertificateRequest:(id)arg1 message:(id)arg2;
- (id)_handleRewardsCodeResultRequest:(id)arg1 message:(id)arg2;
- (id)_handleRewardRequest:(id)arg1 message:(id)arg2;
- (id)_handleHeartbeatTokenRequest:(id)arg1 message:(id)arg2;
- (id)_handleManifestRequest:(id)arg1 message:(id)arg2;
- (id)_handleOptOutRequest:(id)arg1 message:(id)arg2;
- (id)_handleServerErrorRequest:(id)arg1 message:(id)arg2;
- (id)_handleSegmentUpdateRequest:(id)arg1 message:(id)arg2;
- (id)_handleLogAdContentErrorRequest:(id)arg1 message:(id)arg2;
- (id)_handleLogAdEventRequest:(id)arg1 message:(id)arg2;
- (id)_handleLogSysEventRequest:(id)arg1 message:(id)arg2;
- (id)_handleLogImpressionRequest:(id)arg1 message:(id)arg2;
- (id)_handleBatchRequest:(id)arg1 message:(id)arg2;
- (id)_handleGenericPostRequest:(id)arg1;
- (id)_handlePostRequest:(id)arg1;
- (id)webArchiveForDirectory:(id)arg1 withBaseURL:(id)arg2;
- (void)setAdManifests:(id)arg1;
- (void)setAdPath:(id)arg1;
- (void)httpServer:(id)arg1 connection:(id)arg2 droppedResponseToRequestBeforeClosing:(id)arg3;
- (void)httpServer:(id)arg1 connection:(id)arg2 wroteBytes:(unsigned int)arg3 andCompletedResponseToRequest:(id)arg4;
- (void)httpServer:(id)arg1 connection:(id)arg2 wroteBytes:(unsigned int)arg3 forResponseToRequest:(id)arg4 remaining:(unsigned int)arg5;
- (void)httpServer:(id)arg1 connection:(id)arg2 enqueuedResponseToRequest:(id)arg3 statusCode:(int)arg4 length:(unsigned int)arg5;
- (void)setPipeliningEnabled:(BOOL)arg1;
- (BOOL)pipeliningEnabled;
- (void)setCacheMaxAge:(int)arg1;
- (int)cacheMaxAge;
- (unsigned long long)totalBytesWritten;
- (void)setBandwidthStddev:(double)arg1;
- (double)bandwidthStddev;
- (double)kbps;
- (void)setLatencyStddev:(double)arg1;
- (double)latencyStddev;
- (void)setDigestAuthenticationEnabled:(BOOL)arg1;
- (BOOL)digestAuthenticationEnabled;
- (void)setKbps:(double)arg1;
- (id)httpServer:(id)arg1 unhandledRequest:(id)arg2;
- (BOOL)httpServer:(id)arg1 shouldAllowRequest:(id)arg2 withAuthorization:(id)arg3;
- (void)httpServer:(id)arg1 dataForRequest:(id)arg2 resolvedPath:(id)arg3 handler:(id)arg4;
- (void)httpServer:(id)arg1 connection:(id)arg2 blockedSandboxViolation:(id)arg3;
- (id)httpServer:(id)arg1 rewritePath:(id)arg2;
- (id)_mimeTypeForExtension:(id)arg1;
- (void)httpServer:(id)arg1 logMessage:(id)arg2;
- (id)httpServer:(id)arg1 proposedResponse:(id)arg2;
- (void)httpServer:(id)arg1 closedConnection:(id)arg2 withError:(id)arg3;
- (void)httpServer:(id)arg1 closedConnection:(id)arg2;
- (void)httpServer:(id)arg1 receivedConnection:(id)arg2;
- (void)httpServerListenSocketFailed:(id)arg1;
- (void)resetNetworkSetup;
- (void)setLatency:(double)arg1;
- (id)urlString;
- (unsigned short)port;
- (id)delegate;
- (double)latency;
- (void)dealloc;
- (void)setDelegate:(id)arg1;
- (id)init;

@end
