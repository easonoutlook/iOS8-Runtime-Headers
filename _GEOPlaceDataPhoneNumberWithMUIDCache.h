/* Generated by RuntimeBrowser.
   Image: /System/Library/PrivateFrameworks/GeoServices.framework/GeoServices
 */

@interface _GEOPlaceDataPhoneNumberWithMUIDCache : NSObject <_GEOPlaceDataCacheProxy> {
    struct _GEOGenericContainer<unsigned long long, GEOPDPlace *, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, geo::GEOGenericContainerStrongReferenceTag, 64, 2097152, geo::GEOGenericContainerLockingTag, detail::_default_pointer_type> { 
        struct mutex { 
            struct _opaque_pthread_mutex_t { 
                long __sig; 
                BOOL __opaque[40]; 
            } __m_; 
        } _lock; 
        struct list<geo::detail::_CacheItem<unsigned long long, GEOPDPlace *, _value_ptr>, std::__1::allocator<geo::detail::_CacheItem<unsigned long long, GEOPDPlace *, _value_ptr> > > { 
            struct __list_node_base<geo::detail::_CacheItem<unsigned long long, GEOPDPlace *, _value_ptr>, void *> { 
                struct __list_node<geo::detail::_CacheItem<unsigned long long, GEOPDPlace *, _value_ptr>, void *> {} *__prev_; 
                struct __list_node<geo::detail::_CacheItem<unsigned long long, GEOPDPlace *, _value_ptr>, void *> {} *__next_; 
            } __end_; 
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<geo::detail::_CacheItem<unsigned long long, GEOPDPlace *, _value_ptr>, void *> > > { 
                unsigned long __first_; 
            } __size_alloc_; 
        } _list; 
        struct unordered_map<unsigned long long, std::__1::__list_iterator<geo::detail::_CacheItem<unsigned long long, GEOPDPlace *, _value_ptr>, void *>, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, std::__1::__list_iterator<geo::detail::_CacheItem<unsigned long long, GEOPDPlace *, _value_ptr>, void *> > > > { 
            struct __hash_table<std::__1::__hash_value_type<unsigned long long, std::__1::__list_iterator<geo::detail::_CacheItem<unsigned long long, GEOPDPlace *, _value_ptr>, void *> >, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::__list_iterator<geo::detail::_CacheItem<unsigned long long, GEOPDPlace *, _value_ptr>, void *> >, std::__1::hash<unsigned long long>, true>, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::__list_iterator<geo::detail::_CacheItem<unsigned long long, GEOPDPlace *, _value_ptr>, void *> >, std::__1::equal_to<unsigned long long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long long, std::__1::__list_iterator<geo::detail::_CacheItem<unsigned long long, GEOPDPlace *, _value_ptr>, void *> > > > { 
                struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::__list_iterator<geo::detail::_CacheItem<unsigned long long, GEOPDPlace *, _value_ptr>, void *> >, void *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::__list_iterator<geo::detail::_CacheItem<unsigned long long, GEOPDPlace *, _value_ptr>, void *> >, void *> *> > > { 
                    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::__list_iterator<geo::detail::_CacheItem<unsigned long long, GEOPDPlace *, _value_ptr>, void *> >, void *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::__list_iterator<geo::detail::_CacheItem<unsigned long long, GEOPDPlace *, _value_ptr>, void *> >, void *> *> > > { 
                        struct __hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::__list_iterator<geo::detail::_CacheItem<unsigned long long, GEOPDPlace *, _value_ptr>, void *> >, void *> {} **__first_; 
                        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::__list_iterator<geo::detail::_CacheItem<unsigned long long, GEOPDPlace *, _value_ptr>, void *> >, void *> *> > { 
                            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::__list_iterator<geo::detail::_CacheItem<unsigned long long, GEOPDPlace *, _value_ptr>, void *> >, void *> *> > { 
                                unsigned long __first_; 
                            } __data_; 
                        } __second_; 
                    } __ptr_; 
                } __bucket_list_; 
                struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::__list_iterator<geo::detail::_CacheItem<unsigned long long, GEOPDPlace *, _value_ptr>, void *> >, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::__list_iterator<geo::detail::_CacheItem<unsigned long long, GEOPDPlace *, _value_ptr>, void *> >, void *> > > { 
                    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::__list_iterator<geo::detail::_CacheItem<unsigned long long, GEOPDPlace *, _value_ptr>, void *> >, void *> *> { 
                        struct __hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::__list_iterator<geo::detail::_CacheItem<unsigned long long, GEOPDPlace *, _value_ptr>, void *> >, void *> {} *__next_; 
                    } __first_; 
                } __p1_; 
                struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::__list_iterator<geo::detail::_CacheItem<unsigned long long, GEOPDPlace *, _value_ptr>, void *> >, std::__1::hash<unsigned long long>, true> > { 
                    unsigned long __first_; 
                } __p2_; 
                struct __compressed_pair<float, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::__list_iterator<geo::detail::_CacheItem<unsigned long long, GEOPDPlace *, _value_ptr>, void *> >, std::__1::equal_to<unsigned long long>, true> > { 
                    float __first_; 
                } __p3_; 
            } __table_; 
        } _map; 
        unsigned int _maxCapacity; 
        unsigned int _maxCost; 
        unsigned int _currentCost; 
        unsigned int _currentCount; 
    } _cache;
    struct unordered_map<unsigned long long, unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, unsigned long long> > > { 
        struct __hash_table<std::__1::__hash_value_type<unsigned long long, unsigned long long>, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, unsigned long long>, std::__1::hash<unsigned long long>, true>, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, unsigned long long>, std::__1::equal_to<unsigned long long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long long, unsigned long long> > > { 
            struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, unsigned long long>, void *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, unsigned long long>, void *> *> > > { 
                struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, unsigned long long>, void *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, unsigned long long>, void *> *> > > { 
                    struct __hash_node<std::__1::__hash_value_type<unsigned long long, unsigned long long>, void *> {} **__first_; 
                    struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, unsigned long long>, void *> *> > { 
                        struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, unsigned long long>, void *> *> > { 
                            unsigned long __first_; 
                        } __data_; 
                    } __second_; 
                } __ptr_; 
            } __bucket_list_; 
            struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, unsigned long long>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, unsigned long long>, void *> > > { 
                struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, unsigned long long>, void *> *> { 
                    struct __hash_node<std::__1::__hash_value_type<unsigned long long, unsigned long long>, void *> {} *__next_; 
                } __first_; 
            } __p1_; 
            struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, unsigned long long>, std::__1::hash<unsigned long long>, true> > { 
                unsigned long __first_; 
            } __p2_; 
            struct __compressed_pair<float, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, unsigned long long>, std::__1::equal_to<unsigned long long>, true> > { 
                float __first_; 
            } __p3_; 
        } __table_; 
    } _phoneNumberCache;
}


- (void)evictAllEntries;
- (void)evictPlaceDataForMUID:(unsigned long long)arg1;
- (id)placeDataForPhoneNumber:(unsigned long long)arg1;
- (unsigned long long)muidForPhoneNumber:(unsigned long long)arg1;
- (id)placeDataForMUID:(unsigned long long)arg1;
- (void)calculateFreeableSpaceWithHandler:(id)arg1;
- (void)shrinkToSize:(unsigned long long)arg1 finished:(id)arg2;
- (void)setPlaceData:(id)arg1 forMUID:(unsigned long long)arg2;
- (void).cxx_destruct;
- (id).cxx_construct;
- (id)init;

@end
