/* Generated by RuntimeBrowser.
   Image: /System/Library/PrivateFrameworks/CorePDF.framework/CorePDF
 */

@class UIView, UIWindow, CALayer, CAShapeLayer, UIPDFPageView;

@interface UIPDFMagnifierController : NSObject  {
    UIWindow *_textEffectsWindow;
    UIView *_textEffectsSubView;
    CALayer *_loLayer;
    CALayer *_hiLayer;
    CALayer *_imageContainer;
    CALayer *_imageLayer;
    CAShapeLayer *_selectionLayer;
    CALayer *_maskLayer;
    float _power;
    struct CGSize { 
        float width; 
        float height; 
    } _magnifierSize;
    BOOL _loupe;
    struct CGPoint { 
        float x; 
        float y; 
    } _touchPoint;
    struct CGPoint { 
        float x; 
        float y; 
    } _pointToMagnify;
    float _enlargementScale;
    CALayer *_leftBar;
    CALayer *_leftGrabber;
    CALayer *_rightBar;
    CALayer *_rightGrabber;
    struct CGSize { 
        float width; 
        float height; 
    } _controlPointSize;
    struct CGColor { } *_grabberColor;
    unsigned int _pageRotation;
    UIPDFPageView *pageView;
}

@property UIPDFPageView * pageView;


- (struct CGPoint { float x1; float x2; })convertViewPointToEnlargedSpace:(struct CGPoint { float x1; float x2; })arg1;
- (BOOL)isSelectionUniformlyRotated:(float*)arg1;
- (void)addTextRangeHandles;
- (void)addBling;
- (id)imageReceived:(id)arg1 data:(id)arg2;
- (void)setPower;
- (void)setSelectionPath:(struct CGPath { }*)arg1 bounds:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg2 transform:(struct CGAffineTransform { float x1; float x2; float x3; float x4; float x5; float x6; })arg3;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })convertRectToEnlargedSpace:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (struct CGPoint { float x1; float x2; })convertPointToEnlargedSpace:(struct CGPoint { float x1; float x2; })arg1;
- (struct CGPoint { float x1; float x2; })pointToMagnifyInPDFSpace;
- (struct CGPoint { float x1; float x2; })viewPointInTextEffectsSpace;
- (struct CGPoint { float x1; float x2; })convertPointToRotatedPage:(struct CGPoint { float x1; float x2; })arg1;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })convertRectToRotatedPage:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (void)setLayerPositions;
- (void)setSelectionPath;
- (void)setTextRangeHandlePositions;
- (void)setImageContainerPositionMagnifier;
- (void)setImageContainerPositionLoupe;
- (void)_show;
- (void)setImageContainerMask;
- (void)placeImage;
- (void)tearDownLayers;
- (void)showLoupe;
- (void)move;
- (void)showMagnifier;
- (void)setPosition:(struct CGPoint { float x1; float x2; })arg1 viewPoint:(struct CGPoint { float x1; float x2; })arg2;
- (void)setPageView:(id)arg1;
- (id)pageView;
- (void)hide;
- (void)drawLayer:(id)arg1 inContext:(struct CGContext { }*)arg2;
- (void)dealloc;
- (id)init;

@end
