/* Generated by RuntimeBrowser.
   Image: /System/Library/PrivateFrameworks/iWorkImport.framework/iWorkImport
 */

@class TSDGLShader, TSDGLDataBuffer;

@interface KNIrisBase : KNAnimationEffect <KNAnimationPluginArchiving> {
    TSDGLShader *mQuadShader;
    TSDGLDataBuffer *mQuadDataBuffer;
    TSDGLShader *mOpaqueShader;
    TSDGLDataBuffer *mOpaqueDataBuffer;
    TSDGLShader *mFadeShader;
    TSDGLDataBuffer *mFadeDataBuffer;
    unsigned int mNumDivisionsPerQuadrant;
    BOOL _isBuildOut;
    struct CGRect { 
        struct CGPoint { 
            float x; 
            float y; 
        } origin; 
        struct CGSize { 
            float width; 
            float height; 
        } size; 
    } _frameRect;
    struct CGRect { 
        struct CGPoint { 
            float x; 
            float y; 
        } origin; 
        struct CGSize { 
            float width; 
            float height; 
        } size; 
    } _drawableFrame;
}

+ (id)animationName;
+ (BOOL)isTransition;
+ (void)downgradeAttributes:(id*)arg1 animationName:(id*)arg2 warning:(id*)arg3 type:(int)arg4 isToClassic:(BOOL)arg5 version:(unsigned long long)arg6;
+ (void)upgradeAttributes:(id*)arg1 animationName:(id)arg2 warning:(id*)arg3 type:(int)arg4 isFromClassic:(BOOL)arg5 version:(unsigned long long)arg6;
+ (id)thumbnailImageNameForType:(int)arg1;
+ (void)fillLocalizedDirectionMenu:(id)arg1 forType:(int)arg2;
+ (unsigned int)directionType;
+ (id)localizedMenuString:(int)arg1;
+ (int)animationCategory;
+ (id)animationFilter;

- (void)dealloc;
- (void)p_setupDataBuffersWithFrameRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1 openFromCenter:(BOOL)arg2;
- (float)p_largestDividedAngleInRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (float)p_angleFromQuadrant:(unsigned int)arg1 inRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg2;
- (void)renderFrameWithContext:(id)arg1;
- (void)animationDidEndWithContext:(id)arg1;
- (void)animationWillBeginWithContext:(id)arg1;
- (id)initWithAnimationContext:(id)arg1;
- (void)p_teardown;
- (void)p_setupShaders;

@end
